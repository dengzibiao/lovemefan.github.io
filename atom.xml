<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lovemefan的博客</title>
  
  <subtitle>梦里花落知多少</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="lovemefan.win/"/>
  <updated>2018-09-05T06:45:29.820Z</updated>
  <id>lovemefan.win/</id>
  
  <author>
    <name>lovemefan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>后端架构师技术图谱 --来自github</title>
    <link href="lovemefan.win/2018/09/05/%E3%80%8A%E5%90%8E%E7%AB%AF%E6%9E%B6%E6%9E%84%E5%B8%88%E6%8A%80%E6%9C%AF%E5%9B%BE%E8%B0%B1%E3%80%8B/"/>
    <id>lovemefan.win/2018/09/05/《后端架构师技术图谱》/</id>
    <published>2018-09-05T02:11:00.000Z</published>
    <updated>2018-09-05T06:45:29.820Z</updated>
    
    <content type="html"><![CDATA[<p><code>原文地址</code><a href="https://github.com/xingshaocheng/architect-awesome" target="_blank" rel="external">https://github.com/xingshaocheng/architect-awesome</a><br><code>笔者只是Mark一下,侵删</code></p><h1>《后端架构师技术图谱》</h1><p><a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh" target="_blank" rel="external"><img src="https://img.shields.io/badge/License-Creative%20Commons-DC3D24.svg" alt="知识共享协议（CC协议）"></a><br><a href="https://github.com/xingshaocheng/architect-awesome/stargazers" target="_blank" rel="external"><img src="https://img.shields.io/github/stars/xingshaocheng/architect-awesome.svg?style=flat&amp;label=Star" alt="GitHub stars"></a><br><a href="https://github.com/xingshaocheng/architect-awesome/fork" target="_blank" rel="external"><img src="https://img.shields.io/github/forks/xingshaocheng/architect-awesome.svg?style=flat&amp;label=Fork" alt="GitHub forks"></a><br><a href="https://github.com/xingshaocheng/architect-awesome/watchers" target="_blank" rel="external"><img src="https://img.shields.io/github/watchers/xingshaocheng/architect-awesome.svg?style=flat&amp;label=Watch" alt="GitHub watchers"></a></p><p><strong>更新于20180624</strong></p><ul><li><a href="/post/《后端架构师技术图谱》#数据结构">数据结构</a><ul><li><a href="/post/《后端架构师技术图谱》#队列">队列</a></li><li><a href="/post/《后端架构师技术图谱》#集合">集合</a></li><li><a href="/post/《后端架构师技术图谱》#链表数组">链表、数组</a></li><li><a href="/post/《后端架构师技术图谱》#字典关联数组">字典、关联数组</a></li><li><a href="/post/《后端架构师技术图谱》#栈">栈</a></li><li><a href="/post/《后端架构师技术图谱》#树">树</a><ul><li><a href="/post/《后端架构师技术图谱》#二叉树">二叉树</a></li><li><a href="/post/《后端架构师技术图谱》#完全二叉树">完全二叉树</a></li><li><a href="/post/《后端架构师技术图谱》#平衡二叉树">平衡二叉树</a></li><li><a href="/post/《后端架构师技术图谱》#二叉查找树bst">二叉查找树（BST）</a></li><li><a href="/post/《后端架构师技术图谱》#红黑树">红黑树</a></li><li><a href="/post/《后端架构师技术图谱》#b-bb树">B-，B+，B*树</a></li><li><a href="/post/《后端架构师技术图谱》#lsm-树">LSM 树</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#bitset">BitSet</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#常用算法">常用算法</a><ul><li><a href="/post/《后端架构师技术图谱》#排序查找算法">排序、查找算法</a><ul><li><a href="/post/《后端架构师技术图谱》#选择排序">选择排序</a></li><li><a href="/post/《后端架构师技术图谱》#冒泡排序">冒泡排序</a></li><li><a href="/post/《后端架构师技术图谱》#插入排序">插入排序</a></li><li><a href="/post/《后端架构师技术图谱》#快速排序">快速排序</a></li><li><a href="/post/《后端架构师技术图谱》#归并排序">归并排序</a></li><li><a href="/post/《后端架构师技术图谱》#希尔排序">希尔排序</a></li><li><a href="/post/《后端架构师技术图谱》#堆排序">堆排序</a></li><li><a href="/post/《后端架构师技术图谱》#计数排序">计数排序</a></li><li><a href="/post/《后端架构师技术图谱》#桶排序">桶排序</a></li><li><a href="/post/《后端架构师技术图谱》#基数排序">基数排序</a></li><li><a href="/post/《后端架构师技术图谱》#二分查找">二分查找</a></li><li><a href="/post/《后端架构师技术图谱》#java-中的排序工具">Java 中的排序工具</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#布隆过滤器">布隆过滤器</a></li><li><a href="/post/《后端架构师技术图谱》#字符串比较">字符串比较</a><ul><li><a href="/post/《后端架构师技术图谱》#kmp-算法">KMP 算法</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#深度优先广度优先">深度优先、广度优先</a></li><li><a href="/post/《后端架构师技术图谱》#贪心算法">贪心算法</a></li><li><a href="/post/《后端架构师技术图谱》#回溯算法">回溯算法</a></li><li><a href="/post/《后端架构师技术图谱》#剪枝算法">剪枝算法</a></li><li><a href="/post/《后端架构师技术图谱》#动态规划">动态规划</a></li><li><a href="/post/《后端架构师技术图谱》#朴素贝叶斯">朴素贝叶斯</a></li><li><a href="/post/《后端架构师技术图谱》#推荐算法">推荐算法</a></li><li><a href="/post/《后端架构师技术图谱》#最小生成树算法">最小生成树算法</a></li><li><a href="/post/《后端架构师技术图谱》#最短路径算法">最短路径算法</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#并发">并发</a><ul><li><a href="/post/《后端架构师技术图谱》#java-并发">Java 并发</a></li><li><a href="/post/《后端架构师技术图谱》#多线程">多线程</a></li><li><a href="/post/《后端架构师技术图谱》#线程安全">线程安全</a></li><li><a href="/post/《后端架构师技术图谱》#一致性事务">一致性、事务</a><ul><li><a href="/post/《后端架构师技术图谱》#事务-acid-特性">事务 ACID 特性</a></li><li><a href="/post/《后端架构师技术图谱》#事务的隔离级别">事务的隔离级别</a></li><li><a href="/post/《后端架构师技术图谱》#mvcc">MVCC</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#锁">锁</a><ul><li><a href="/post/《后端架构师技术图谱》#java中的锁和同步类">Java中的锁和同步类</a></li><li><a href="/post/《后端架构师技术图谱》#公平锁--非公平锁">公平锁 &amp; 非公平锁</a></li><li><a href="/post/《后端架构师技术图谱》#悲观锁">悲观锁</a></li><li><a href="/post/《后端架构师技术图谱》#乐观锁--cas">乐观锁 &amp; CAS</a></li><li><a href="/post/《后端架构师技术图谱》#aba-问题">ABA 问题</a></li><li><a href="/post/《后端架构师技术图谱》#copyonwrite容器">CopyOnWrite容器</a></li><li><a href="/post/《后端架构师技术图谱》#ringbuffer">RingBuffer</a></li><li><a href="/post/《后端架构师技术图谱》#可重入锁--不可重入锁">可重入锁 &amp; 不可重入锁</a></li><li><a href="/post/《后端架构师技术图谱》#互斥锁--共享锁">互斥锁 &amp; 共享锁</a></li><li><a href="/post/《后端架构师技术图谱》#死锁">死锁</a></li></ul></li></ul></li><li><a href="/post/《后端架构师技术图谱》#操作系统">操作系统</a><ul><li><a href="/post/《后端架构师技术图谱》#计算机原理">计算机原理</a></li><li><a href="/post/《后端架构师技术图谱》#cpu">CPU</a><ul><li><a href="/post/《后端架构师技术图谱》#多级缓存">多级缓存</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#进程">进程</a></li><li><a href="/post/《后端架构师技术图谱》#线程">线程</a></li><li><a href="/post/《后端架构师技术图谱》#协程">协程</a></li><li><a href="/post/《后端架构师技术图谱》#linux">Linux</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#设计模式">设计模式</a><ul><li><a href="/post/《后端架构师技术图谱》#设计模式的六大原则">设计模式的六大原则</a></li><li><a href="/post/《后端架构师技术图谱》#23种常见设计模式">23种常见设计模式</a></li><li><a href="/post/《后端架构师技术图谱》#应用场景">应用场景</a></li><li><a href="/post/《后端架构师技术图谱》#单例模式">单例模式</a></li><li><a href="/post/《后端架构师技术图谱》#责任链模式">责任链模式</a></li><li><a href="/post/《后端架构师技术图谱》#mvc">MVC</a></li><li><a href="/post/《后端架构师技术图谱》#ioc">IOC</a></li><li><a href="/post/《后端架构师技术图谱》#aop">AOP</a></li><li><a href="/post/《后端架构师技术图谱》#uml">UML</a></li><li><a href="/post/《后端架构师技术图谱》#微服务思想">微服务思想</a><ul><li><a href="/post/《后端架构师技术图谱》#康威定律">康威定律</a></li></ul></li></ul></li><li><a href="/post/《后端架构师技术图谱》#运维--统计--技术支持">运维 &amp; 统计 &amp; 技术支持</a><ul><li><a href="/post/《后端架构师技术图谱》#常规监控">常规监控</a></li><li><a href="/post/《后端架构师技术图谱》#apm">APM</a></li><li><a href="/post/《后端架构师技术图谱》#统计分析">统计分析</a></li><li><a href="/post/《后端架构师技术图谱》#持续集成cicd">持续集成(CI/CD)</a><ul><li><a href="/post/《后端架构师技术图谱》#jenkins">Jenkins</a></li><li><a href="/post/《后端架构师技术图谱》#环境分离">环境分离</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#自动化运维">自动化运维</a><ul><li><a href="/post/《后端架构师技术图谱》#ansible">Ansible</a></li><li><a href="/post/《后端架构师技术图谱》#puppet">puppet</a></li><li><a href="/post/《后端架构师技术图谱》#chef">chef</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#测试">测试</a><ul><li><a href="/post/《后端架构师技术图谱》#tdd-理论">TDD 理论</a></li><li><a href="/post/《后端架构师技术图谱》#单元测试">单元测试</a></li><li><a href="/post/《后端架构师技术图谱》#压力测试">压力测试</a></li><li><a href="/post/《后端架构师技术图谱》#全链路压测">全链路压测</a></li><li><a href="/post/《后端架构师技术图谱》#ab-灰度蓝绿测试">A/B 、灰度、蓝绿测试</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#虚拟化">虚拟化</a><ul><li><a href="/post/《后端架构师技术图谱》#kvm">KVM</a></li><li><a href="/post/《后端架构师技术图谱》#xen">Xen</a></li><li><a href="/post/《后端架构师技术图谱》#openvz">OpenVZ</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#容器技术">容器技术</a><ul><li><a href="/post/《后端架构师技术图谱》#docker">Docker</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#云技术">云技术</a><ul><li><a href="/post/《后端架构师技术图谱》#openstack">OpenStack</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#devops">DevOps</a></li><li><a href="/post/《后端架构师技术图谱》#文档管理">文档管理</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#中间件">中间件</a><ul><li><a href="/post/《后端架构师技术图谱》#web-server">Web Server</a><ul><li><a href="/post/《后端架构师技术图谱》#nginx">Nginx</a></li><li><a href="/post/《后端架构师技术图谱》#openresty">OpenResty</a>  </li><li><a href="/post/《后端架构师技术图谱》#Tengine">Tengine</a>  </li><li><a href="/post/《后端架构师技术图谱》#apache-httpd">Apache Httpd</a></li><li><a href="/post/《后端架构师技术图谱》#tomcat">Tomcat</a><ul><li><a href="/post/《后端架构师技术图谱》#架构原理">架构原理</a></li><li><a href="/post/《后端架构师技术图谱》#调优方案">调优方案</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#jetty">Jetty</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#缓存">缓存</a><ul><li><a href="/post/《后端架构师技术图谱》#本地缓存">本地缓存</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#客户端缓存">客户端缓存</a></li><li><a href="/post/《后端架构师技术图谱》#服务端缓存">服务端缓存</a><ul><li><a href="/post/《后端架构师技术图谱》#web缓存">Web缓存</a></li><li><a href="/post/《后端架构师技术图谱》#memcached">Memcached</a></li><li><a href="/post/《后端架构师技术图谱》#redis">Redis</a><ul><li><a href="/post/《后端架构师技术图谱》#架构">架构</a></li><li><a href="/post/《后端架构师技术图谱》#回收策略">回收策略</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#tair">Tair</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#消息队列">消息队列</a><ul><li><a href="/post/《后端架构师技术图谱》#消息总线">消息总线</a></li><li><a href="/post/《后端架构师技术图谱》#消息的顺序">消息的顺序</a></li><li><a href="/post/《后端架构师技术图谱》#rabbitmq">RabbitMQ</a></li><li><a href="/post/《后端架构师技术图谱》#rocketmq">RocketMQ</a></li><li><a href="/post/《后端架构师技术图谱》#activemq">ActiveMQ</a></li><li><a href="/post/《后端架构师技术图谱》#kafka">Kafka</a></li><li><a href="/post/《后端架构师技术图谱》#redis-消息推送">Redis 消息推送</a></li><li><a href="/post/《后端架构师技术图谱》#zeromq">ZeroMQ</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#定时调度">定时调度</a><ul><li><a href="/post/《后端架构师技术图谱》#单机定时调度">单机定时调度</a></li><li><a href="/post/《后端架构师技术图谱》#分布式定时调度">分布式定时调度</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#rpc">RPC</a><ul><li><a href="/post/《后端架构师技术图谱》#dubbo">Dubbo</a></li><li><a href="/post/《后端架构师技术图谱》#thrift">Thrift</a></li><li><a href="/post/《后端架构师技术图谱》#grpc">gRPC</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#数据库中间件">数据库中间件</a><ul><li><a href="/post/《后端架构师技术图谱》#sharding-jdbc">Sharding Jdbc</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#日志系统">日志系统</a><ul><li><a href="/post/《后端架构师技术图谱》#日志搜集">日志搜集</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#配置中心">配置中心</a></li><li><a href="/post/《后端架构师技术图谱》#api-网关">API 网关</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#网络">网络</a><ul><li><a href="/post/《后端架构师技术图谱》#协议">协议</a><ul><li><a href="/post/《后端架构师技术图谱》#osi-七层协议">OSI 七层协议</a></li><li><a href="/post/《后端架构师技术图谱》#tcpip">TCP/IP</a></li><li><a href="/post/《后端架构师技术图谱》#http">HTTP</a></li><li><a href="/post/《后端架构师技术图谱》#http20">HTTP2.0</a></li><li><a href="/post/《后端架构师技术图谱》#https">HTTPS</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#网络模型">网络模型</a><ul><li><a href="/post/《后端架构师技术图谱》#epoll">Epoll</a></li><li><a href="/post/《后端架构师技术图谱》#java-nio">Java NIO</a></li><li><a href="/post/《后端架构师技术图谱》#kqueue">kqueue</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#连接和短连接">连接和短连接</a></li><li><a href="/post/《后端架构师技术图谱》#框架">框架</a></li><li><a href="/post/《后端架构师技术图谱》#零拷贝zero-copy">零拷贝（Zero-copy）</a></li><li><a href="/post/《后端架构师技术图谱》#序列化二进制协议">序列化(二进制协议)</a><ul><li><a href="/post/《后端架构师技术图谱》#hessian">Hessian</a></li><li><a href="/post/《后端架构师技术图谱》#protobuf">Protobuf</a></li></ul></li></ul></li><li><a href="/post/《后端架构师技术图谱》#数据库">数据库</a><ul><li><a href="/post/《后端架构师技术图谱》#基础理论">基础理论</a><ul><li><a href="/post/《后端架构师技术图谱》#数据库设计的三大范式">数据库设计的三大范式</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#mysql">MySQL</a><ul><li><a href="/post/《后端架构师技术图谱》#原理">原理</a></li><li><a href="/post/《后端架构师技术图谱》#innodb">InnoDB</a></li><li><a href="/post/《后端架构师技术图谱》#优化">优化</a></li><li><a href="/post/《后端架构师技术图谱》#索引">索引</a><ul><li><a href="/post/《后端架构师技术图谱》#聚集索引-非聚集索引">聚集索引, 非聚集索引</a></li><li><a href="/post/《后端架构师技术图谱》#复合索引">复合索引</a></li><li><a href="/post/《后端架构师技术图谱》#自适应哈希索引ahi">自适应哈希索引(AHI)</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#explain">explain</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#nosql">NoSQL</a><ul><li><a href="/post/《后端架构师技术图谱》#mongodb">MongoDB</a></li><li><a href="/post/《后端架构师技术图谱》#hbase">Hbase</a></li></ul></li></ul></li><li><a href="/post/《后端架构师技术图谱》#搜索引擎">搜索引擎</a><ul><li><a href="/post/《后端架构师技术图谱》#搜索引擎原理">搜索引擎原理</a></li><li><a href="/post/《后端架构师技术图谱》#lucene">Lucene</a></li><li><a href="/post/《后端架构师技术图谱》#elasticsearch">Elasticsearch</a></li><li><a href="/post/《后端架构师技术图谱》#solr">Solr</a></li><li><a href="/post/《后端架构师技术图谱》#sphinx">sphinx</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#性能">性能</a><ul><li><a href="/post/《后端架构师技术图谱》#性能优化方法论">性能优化方法论</a></li><li><a href="/post/《后端架构师技术图谱》#容量评估">容量评估</a></li><li><a href="/post/《后端架构师技术图谱》#cdn-网络">CDN 网络</a></li><li><a href="/post/《后端架构师技术图谱》#连接池">连接池</a></li><li><a href="/post/《后端架构师技术图谱》#性能调优">性能调优</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#大数据">大数据</a><ul><li><a href="/post/《后端架构师技术图谱》#流式计算">流式计算</a><ul><li><a href="/post/《后端架构师技术图谱》#storm">Storm</a></li><li><a href="/post/《后端架构师技术图谱》#flink">Flink</a></li><li><a href="/post/《后端架构师技术图谱》#kafka-stream">Kafka Stream</a></li><li><a href="/post/《后端架构师技术图谱》#应用场景-1">应用场景</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#hadoop">Hadoop</a><ul><li><a href="/post/《后端架构师技术图谱》#hdfs">HDFS</a></li><li><a href="/post/《后端架构师技术图谱》#mapreduce">MapReduce</a></li><li><a href="/post/《后端架构师技术图谱》#yarn">Yarn</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#spark">Spark</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#安全">安全</a><ul><li><a href="/post/《后端架构师技术图谱》#web-安全">web 安全</a><ul><li><a href="/post/《后端架构师技术图谱》#xss">XSS</a></li><li><a href="/post/《后端架构师技术图谱》#csrf">CSRF</a></li><li><a href="/post/《后端架构师技术图谱》#sql-注入">SQL 注入</a></li><li><a href="/post/《后端架构师技术图谱》#hash-dos">Hash Dos</a></li><li><a href="/post/《后端架构师技术图谱》#脚本注入">脚本注入</a></li><li><a href="/post/《后端架构师技术图谱》#漏洞扫描工具">漏洞扫描工具</a></li><li><a href="/post/《后端架构师技术图谱》#验证码">验证码</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#ddos-防范">DDoS 防范</a></li><li><a href="/post/《后端架构师技术图谱》#用户隐私信息保护">用户隐私信息保护</a></li><li><a href="/post/《后端架构师技术图谱》#序列化漏洞">序列化漏洞</a></li><li><a href="/post/《后端架构师技术图谱》#加密解密">加密解密</a><ul><li><a href="/post/《后端架构师技术图谱》#对称加密">对称加密</a></li><li><a href="/post/《后端架构师技术图谱》#哈希算法">哈希算法</a></li><li><a href="/post/《后端架构师技术图谱》#非对称加密">非对称加密</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#服务器安全">服务器安全</a></li><li><a href="/post/《后端架构师技术图谱》#数据安全">数据安全</a><ul><li><a href="/post/《后端架构师技术图谱》#数据备份">数据备份</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#网络隔离">网络隔离</a><ul><li><a href="/post/《后端架构师技术图谱》#内外网分离">内外网分离</a></li><li><a href="/post/《后端架构师技术图谱》#登录跳板机">登录跳板机</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#授权认证">授权、认证</a><ul><li><a href="/post/《后端架构师技术图谱》#rbac">RBAC</a></li><li><a href="/post/《后端架构师技术图谱》#oauth20">OAuth2.0</a></li><li><a href="/post/《后端架构师技术图谱》#双因素认证2fa">双因素认证（2FA）</a></li><li><a href="/post/《后端架构师技术图谱》#单点登录sso">单点登录(SSO)</a></li></ul></li></ul></li><li><a href="/post/《后端架构师技术图谱》#常用开源框架">常用开源框架</a><ul><li><a href="/post/《后端架构师技术图谱》#开源协议">开源协议</a></li><li><a href="/post/《后端架构师技术图谱》#日志框架">日志框架</a><ul><li><a href="/post/《后端架构师技术图谱》#log4jlog4j2">Log4j、Log4j2</a></li><li><a href="/post/《后端架构师技术图谱》#logback">Logback</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#orm">ORM</a></li><li><a href="/post/《后端架构师技术图谱》#网络框架">网络框架</a></li><li><a href="/post/《后端架构师技术图谱》#web-框架">Web 框架</a><ul><li><a href="/post/《后端架构师技术图谱》#spring-家族">Spring 家族</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#工具框架">工具框架</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#分布式设计">分布式设计</a><ul><li><a href="/post/《后端架构师技术图谱》#扩展性设计">扩展性设计</a></li><li><a href="/post/《后端架构师技术图谱》#稳定性--高可用">稳定性 &amp; 高可用</a><ul><li><a href="/post/《后端架构师技术图谱》#硬件负载均衡">硬件负载均衡</a></li><li><a href="/post/《后端架构师技术图谱》#软件负载均衡">软件负载均衡</a></li><li><a href="/post/《后端架构师技术图谱》#限流">限流</a></li><li><a href="/post/《后端架构师技术图谱》#应用层容灾">应用层容灾</a></li><li><a href="/post/《后端架构师技术图谱》#跨机房容灾">跨机房容灾</a></li><li><a href="/post/《后端架构师技术图谱》#容灾演练流程">容灾演练流程</a></li><li><a href="/post/《后端架构师技术图谱》#平滑启动">平滑启动</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#数据库扩展">数据库扩展</a><ul><li><a href="/post/《后端架构师技术图谱》#读写分离模式">读写分离模式</a></li><li><a href="/post/《后端架构师技术图谱》#分片模式">分片模式</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#服务治理">服务治理</a><ul><li><a href="/post/《后端架构师技术图谱》#服务注册与发现">服务注册与发现</a></li><li><a href="/post/《后端架构师技术图谱》#服务路由控制">服务路由控制</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#分布式一致">分布式一致</a><ul><li><a href="/post/《后端架构师技术图谱》#cap-与-base-理论">CAP 与 BASE 理论</a></li><li><a href="/post/《后端架构师技术图谱》#分布式锁">分布式锁</a></li><li><a href="/post/《后端架构师技术图谱》#分布式一致性算法">分布式一致性算法</a><ul><li><a href="/post/《后端架构师技术图谱》#paxos">PAXOS</a></li><li><a href="/post/《后端架构师技术图谱》#zab">Zab</a></li><li><a href="/post/《后端架构师技术图谱》#raft">Raft</a></li><li><a href="/post/《后端架构师技术图谱》#gossip">Gossip</a></li><li><a href="/post/《后端架构师技术图谱》#两阶段提交多阶段提交">两阶段提交、多阶段提交</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#幂等">幂等</a></li><li><a href="/post/《后端架构师技术图谱》#分布式一致方案">分布式一致方案</a></li><li><a href="/post/《后端架构师技术图谱》#分布式-leader-节点选举">分布式 Leader 节点选举</a></li><li><a href="/post/《后端架构师技术图谱》#tcctryconfirmcancel-柔性事务">TCC(Try/Confirm/Cancel) 柔性事务</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#分布式文件系统">分布式文件系统</a></li><li><a href="/post/《后端架构师技术图谱》#唯一id-生成">唯一ID 生成</a><ul><li><a href="/post/《后端架构师技术图谱》#全局唯一id">全局唯一ID</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#一致性hash算法">一致性Hash算法</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#设计思想--开发模式">设计思想 &amp; 开发模式</a><ul><li><a href="/post/《后端架构师技术图谱》#ddddomain-driven-design---领域驱动设计">DDD(Domain-driven Design - 领域驱动设计)</a><ul><li><a href="/post/《后端架构师技术图谱》#命令查询职责分离cqrs">命令查询职责分离(CQRS)</a></li><li><a href="/post/《后端架构师技术图谱》#贫血充血模型">贫血，充血模型</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#actor-模式">Actor 模式</a></li><li><a href="/post/《后端架构师技术图谱》#响应式编程">响应式编程</a><ul><li><a href="/post/《后端架构师技术图谱》#reactor">Reactor</a></li><li><a href="/post/《后端架构师技术图谱》#rxjava">RxJava</a></li><li><a href="/post/《后端架构师技术图谱》#vertx">Vert.x</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#dodaf20">DODAF2.0</a></li><li><a href="/post/《后端架构师技术图谱》#serverless">Serverless</a></li><li><a href="/post/《后端架构师技术图谱》#service-mesh">Service Mesh</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#项目管理">项目管理</a><ul><li><a href="/post/《后端架构师技术图谱》#架构评审">架构评审</a></li><li><a href="/post/《后端架构师技术图谱》#重构">重构</a></li><li><a href="/post/《后端架构师技术图谱》#代码规范">代码规范</a></li><li><a href="/post/《后端架构师技术图谱》#代码-review">代码 Review</a></li><li><a href="/post/《后端架构师技术图谱》#rup">RUP</a></li><li><a href="/post/《后端架构师技术图谱》#看板管理">看板管理</a></li><li><a href="/post/《后端架构师技术图谱》#scrum">SCRUM</a></li><li><a href="/post/《后端架构师技术图谱》#敏捷开发">敏捷开发</a></li><li><a href="/post/《后端架构师技术图谱》#极限编程xp">极限编程（XP）</a></li><li><a href="/post/《后端架构师技术图谱》#结对编程">结对编程</a></li><li><a href="/post/《后端架构师技术图谱》#pdca-循环质量管理">PDCA 循环质量管理</a></li><li><a href="/post/《后端架构师技术图谱》#fmea管理模式">FMEA管理模式</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#通用业务术语">通用业务术语</a></li><li><a href="/post/《后端架构师技术图谱》#技术趋势">技术趋势</a></li><li><a href="/post/《后端架构师技术图谱》#政策法规">政策、法规</a><ul><li><a href="/post/《后端架构师技术图谱》#法律">法律</a><ul><li><a href="/post/《后端架构师技术图谱》#严格遵守刑法253法条">严格遵守刑法253法条</a></li></ul></li></ul></li><li><a href="/post/《后端架构师技术图谱》#架构师素质">架构师素质</a></li><li><a href="/post/《后端架构师技术图谱》#团队管理">团队管理</a><ul><li><a href="/post/《后端架构师技术图谱》#招聘">招聘</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#资讯">资讯</a><ul><li><a href="/post/《后端架构师技术图谱》#行业资讯">行业资讯</a></li><li><a href="/post/《后端架构师技术图谱》#公众号列表">公众号列表</a></li><li><a href="/post/《后端架构师技术图谱》#博客">博客</a><ul><li><a href="/post/《后端架构师技术图谱》#团队博客">团队博客</a></li><li><a href="/post/《后端架构师技术图谱》#个人博客">个人博客</a></li></ul></li><li><a href="/post/《后端架构师技术图谱》#综合门户社区">综合门户、社区</a></li><li><a href="/post/《后端架构师技术图谱》#问答讨论类社区">问答、讨论类社区</a></li><li><a href="/post/《后端架构师技术图谱》#行业数据分析">行业数据分析</a></li><li><a href="/post/《后端架构师技术图谱》#专项网站">专项网站</a></li><li><a href="/post/《后端架构师技术图谱》#其他类">其他类</a></li><li><a href="/post/《后端架构师技术图谱》#推荐参考书">推荐参考书</a><ul><li><a href="/post/《后端架构师技术图谱》#在线电子书">在线电子书</a></li><li><a href="/post/《后端架构师技术图谱》#纸质书">纸质书</a><ul><li><a href="/post/《后端架构师技术图谱》#开发方面">开发方面</a></li><li><a href="/post/《后端架构师技术图谱》#架构方面">架构方面</a></li><li><a href="/post/《后端架构师技术图谱》#技术管理方面">技术管理方面</a></li><li><a href="/post/《后端架构师技术图谱》#基础理论-1">基础理论</a></li><li><a href="/post/《后端架构师技术图谱》#工具方面">工具方面</a></li><li><a href="/post/《后端架构师技术图谱》#大数据方面">大数据方面</a></li></ul></li></ul></li></ul></li><li><a href="/post/《后端架构师技术图谱》#技术资源">技术资源</a><ul><li><a href="/post/《后端架构师技术图谱》#开源资源">开源资源</a></li><li><a href="/post/《后端架构师技术图谱》#手册文档教程">手册、文档、教程</a></li><li><a href="/post/《后端架构师技术图谱》#在线课堂">在线课堂</a></li><li><a href="/post/《后端架构师技术图谱》#会议活动">会议、活动</a></li><li><a href="/post/《后端架构师技术图谱》#常用app">常用APP</a></li><li><a href="/post/《后端架构师技术图谱》#找工作">找工作</a></li><li><a href="/post/《后端架构师技术图谱》#工具">工具</a></li><li><a href="/post/《后端架构师技术图谱》#代码托管">代码托管</a></li><li><a href="/post/《后端架构师技术图谱》#文件服务">文件服务</a></li><li><a href="/post/《后端架构师技术图谱》#综合云服务商">综合云服务商</a><ul><li><a href="/post/《后端架构师技术图谱》#vps">VPS</a></li></ul></li></ul></li></ul><p><strong>（Toc generated by <a href="https://github.com/xingshaocheng/simple-php-github-toc" target="_blank" rel="external">simple-php-github-toc</a> ）</strong></p><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><ul><li><p><a href="https://www.cnblogs.com/lemon-flm/p/7877898.html" target="_blank" rel="external">《java队列——queue详细分析》</a></p><ul><li>非阻塞队列：ConcurrentLinkedQueue(无界线程安全)，采用CAS机制（compareAndSwapObject原子操作）。</li><li>阻塞队列：ArrayBlockingQueue(有界)、LinkedBlockingQueue（无界）、DelayQueue、PriorityBlockingQueue，采用锁机制；使用 ReentrantLock 锁。</li></ul></li><li><p><a href="https://www.cnblogs.com/mantu/p/5802393.html" target="_blank" rel="external">《LinkedList、ConcurrentLinkedQueue、LinkedBlockingQueue对比分析》</a></p></li></ul><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><ul><li><a href="https://blog.csdn.net/qq_33642117/article/details/52040345" target="_blank" rel="external">《Java Set集合的详解》</a></li></ul><h2 id="链表、数组"><a href="#链表、数组" class="headerlink" title="链表、数组"></a>链表、数组</h2><ul><li><a href="https://blog.csdn.net/wz249863091/article/details/52853360" target="_blank" rel="external">《Java集合详解–什么是List》</a></li></ul><h2 id="字典、关联数组"><a href="#字典、关联数组" class="headerlink" title="字典、关联数组"></a>字典、关联数组</h2><ul><li><a href="https://baike.xsoftlab.net/view/250.html" target="_blank" rel="external">《Java map 详解 - 用法、遍历、排序、常用API等》</a></li></ul><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><ul><li><a href="https://blog.csdn.net/javazejian/article/details/53362993" target="_blank" rel="external">《java数据结构与算法之栈（Stack）设计与实现》</a></li><li><a href="http://www.runoob.com/java/java-stack-class.html" target="_blank" rel="external">《Java Stack 类》</a></li><li><a href="https://blog.csdn.net/f2006116/article/details/51375225" target="_blank" rel="external">《java stack的详细实现分析》</a><ul><li>Stack 是线程安全的。</li><li>内部使用数组保存数据，不够时翻倍。</li></ul></li></ul><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><h3 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h3><p>每个节点最多有两个叶子节点。</p><ul><li><a href="https://blog.csdn.net/cai2016/article/details/52589952" target="_blank" rel="external">《二叉树》</a></li></ul><h3 id="完全二叉树"><a href="#完全二叉树" class="headerlink" title="完全二叉树"></a>完全二叉树</h3><ul><li><a href="https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91/7773232?fr=aladdin" target="_blank" rel="external">《完全二叉树》</a><ul><li>叶节点只能出现在最下层和次下层，并且最下面一层的结点都集中在该层最左边的若干位置的二叉树。</li></ul></li></ul><h3 id="平衡二叉树"><a href="#平衡二叉树" class="headerlink" title="平衡二叉树"></a>平衡二叉树</h3><p>左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树。</p><ul><li><a href="http://www.cnblogs.com/polly333/p/4798944.html" target="_blank" rel="external">《浅谈数据结构-平衡二叉树》</a></li><li><a href="http://www.cnblogs.com/yangecnu/p/Introduce-2-3-Search-Tree.html" target="_blank" rel="external">《浅谈算法和数据结构: 八 平衡查找树之2-3树》</a></li></ul><h3 id="二叉查找树（BST）"><a href="#二叉查找树（BST）" class="headerlink" title="二叉查找树（BST）"></a>二叉查找树（BST）</h3><p>二叉查找树（Binary Search Tree），也称有序二叉树（ordered binary tree）,排序二叉树（sorted binary tree）。</p><ul><li><a href="http://www.cnblogs.com/yangecnu/p/Introduce-Binary-Search-Tree.html" target="_blank" rel="external">《浅谈算法和数据结构: 七 二叉查找树》</a></li></ul><h3 id="红黑树"><a href="#红黑树" class="headerlink" title="红黑树"></a>红黑树</h3><ul><li><a href="https://blog.csdn.net/sun_tttt/article/details/65445754" target="_blank" rel="external">《最容易懂得红黑树》</a><ul><li>添加阶段后，左旋或者右旋从而再次达到平衡。 </li></ul></li><li><a href="http://www.cnblogs.com/yangecnu/p/Introduce-Red-Black-Tree.html" target="_blank" rel="external">《浅谈算法和数据结构: 九 平衡查找树之红黑树》</a></li></ul><h3 id="B-，B-，B-树"><a href="#B-，B-，B-树" class="headerlink" title="B-，B+，B*树"></a>B-，B+，B*树</h3><p>MySQL是基于B+树聚集索引组织表</p><ul><li><a href="https://blog.csdn.net/aqzwss/article/details/53074186" target="_blank" rel="external">《B-树，B+树，B*树详解》</a></li><li><a href="https://blog.csdn.net/bigtree_3721/article/details/73632405" target="_blank" rel="external">《B-树，B+树与B*树的优缺点比较》</a><ul><li>B+ 树的叶子节点链表结构相比于 B- 树便于扫库，和范围检索。<h3 id="LSM-树"><a href="#LSM-树" class="headerlink" title="LSM 树"></a>LSM 树</h3></li></ul></li></ul><p>LSM（Log-Structured Merge-Trees）和 B+ 树相比，是牺牲了部分读的性能来换取写的性能(通过批量写入)，实现读写之间的。<br>Hbase、LevelDB、Tair（Long DB）、nessDB 采用 LSM 树的结构。LSM可以快速建立索引。</p><ul><li><p><a href="https://blog.csdn.net/dbanote/article/details/8897599" target="_blank" rel="external">《LSM树 VS B+树》</a></p><ul><li>B+ 树读性能好，但由于需要有序结构，当key比较分散时，磁盘寻道频繁，造成写性能。</li><li>LSM 是将一个大树拆分成N棵小树，先写到内存（无寻道问题，性能高），在内存中构建一颗有序小树（有序树），随着小树越来越大，内存的小树会flush到磁盘上。当读时，由于不知道数据在哪棵小树上，因此必须遍历（二分查找）所有的小树，但在每颗小树内部数据是有序的。</li></ul></li><li><p><a href="https://blog.csdn.net/u014774781/article/details/52105708" target="_blank" rel="external">《LSM树（Log-Structured Merge Tree）存储引擎》</a></p><ul><li>极端的说，基于LSM树实现的HBase的写性能比MySQL高了一个数量级，读性能低了一个数量级。</li><li>优化方式：Bloom filter 替代二分查找；compact 小数位大树，提高查询性能。</li><li>Hbase 中，内存中达到一定阈值后，整体flush到磁盘上、形成一个文件（B+数），HDFS不支持update操作，所以Hbase做整体flush而不是merge update。flush到磁盘上的小树，定期会合并成一个大树。</li></ul></li></ul><h2 id="BitSet"><a href="#BitSet" class="headerlink" title="BitSet"></a>BitSet</h2><p>经常用于大规模数据的排重检查。</p><ul><li><a href="http://www.runoob.com/java/java-bitset-class.html" target="_blank" rel="external">《Java Bitset类》</a></li><li><a href="https://blog.csdn.net/caiandyong/article/details/51581160" target="_blank" rel="external">《Java BitSet（位集）》</a></li></ul><h1 id="常用算法"><a href="#常用算法" class="headerlink" title="常用算法"></a>常用算法</h1><ul><li><a href="https://blog.csdn.net/gane_cheng/article/details/52652705" target="_blank" rel="external">《常见排序算法及对应的时间复杂度和空间复杂度》</a></li></ul><h2 id="排序、查找算法"><a href="#排序、查找算法" class="headerlink" title="排序、查找算法"></a>排序、查找算法</h2><ul><li><a href="https://blog.csdn.net/gane_cheng/article/details/52652705" target="_blank" rel="external">《常见排序算法及对应的时间复杂度和空间复杂度》</a></li></ul><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><ul><li><a href="https://www.cnblogs.com/shen-hua/p/5424059.html" target="_blank" rel="external">《Java中的经典算法之选择排序（SelectionSort）》</a><ul><li>每一趟从待排序的记录中选出最小的元素，顺序放在已排好序的序列最后，直到全部记录排序完毕。</li></ul></li></ul><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><ul><li><a href="https://blog.csdn.net/shuaizai88/article/details/73250615" target="_blank" rel="external">《冒泡排序的2种写法》</a><ul><li>相邻元素前后交换、把最大的排到最后。</li><li>时间复杂度 O(n²) </li></ul></li></ul><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><ul><li><a href="https://www.cnblogs.com/hapjin/p/5517667.html" target="_blank" rel="external">《排序算法总结之插入排序》</a></li></ul><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><ul><li><a href="http://developer.51cto.com/art/201403/430986.htm" target="_blank" rel="external">《坐在马桶上看算法：快速排序》</a><ul><li>一侧比另外一次都大或小。 <h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3></li></ul></li><li><a href="http://www.cnblogs.com/chengxiao/p/6194356.html" target="_blank" rel="external">《图解排序算法(四)之归并排序》</a><ul><li>分而治之，分成小份排序，在合并(重建一个新空间进行复制)。 </li></ul></li></ul><h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><p>TODO</p><h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><ul><li><a href="https://www.cnblogs.com/chengxiao/p/6129630.html" target="_blank" rel="external">《图解排序算法(三)之堆排序》</a><ul><li>排序过程就是构建最大堆的过程，最大堆：每个结点的值都大于或等于其左右孩子结点的值，堆顶元素是最大值。</li></ul></li></ul><h3 id="计数排序"><a href="#计数排序" class="headerlink" title="计数排序"></a>计数排序</h3><ul><li><a href="https://www.cnblogs.com/suvllian/p/5495780.html" target="_blank" rel="external">《计数排序和桶排序》</a><ul><li>和桶排序过程比较像，差别在于桶的数量。</li></ul></li></ul><h3 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h3><ul><li><a href="http://blog.51cto.com/ahalei/1362789" target="_blank" rel="external">《【啊哈！算法】最快最简单的排序——桶排序》</a></li><li><a href="https://blog.csdn.net/sunjinshengli/article/details/70738527" target="_blank" rel="external">《排序算法（三）：计数排序与桶排序》</a><ul><li>桶排序将[0,1)区间划分为n个相同的大小的子区间，这些子区间被称为桶。</li><li>每个桶单独进行排序，然后再遍历每个桶。</li></ul></li></ul><h3 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h3><p>按照个位、十位、百位、…依次来排。</p><ul><li><a href="https://blog.csdn.net/lemon_tree12138/article/details/51695211" target="_blank" rel="external">《排序算法系列：基数排序》</a></li><li><a href="https://www.cnblogs.com/skywang12345/p/3603669.html" target="_blank" rel="external">《基数排序》</a></li></ul><h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><ul><li><p><a href="https://www.cnblogs.com/coderising/p/5708632.html" target="_blank" rel="external">《二分查找(java实现)》</a></p><ul><li>要求待查找的序列有序。</li><li>时间复杂度 O(logN)。</li></ul></li><li><p><a href="https://blog.csdn.net/maoyuanming0806/article/details/78176957" target="_blank" rel="external">《java实现二分查找-两种方式》</a></p><ul><li>while + 递归。<h3 id="Java-中的排序工具"><a href="#Java-中的排序工具" class="headerlink" title="Java 中的排序工具"></a>Java 中的排序工具</h3></li></ul></li><li><a href="https://blog.csdn.net/u011410529/article/details/56668545?locationnum=6&amp;fps=1" target="_blank" rel="external">《Arrays.sort和Collections.sort实现原理解析》</a><ul><li>Collections.sort算法调用的是合并排序。</li><li>Arrays.sort() 采用了2种排序算法 – 基本类型数据使用快速排序法，对象数组使用归并排序。</li></ul></li></ul><h2 id="布隆过滤器"><a href="#布隆过滤器" class="headerlink" title="布隆过滤器"></a>布隆过滤器</h2><p>常用于大数据的排重，比如email，url 等。<br>核心原理：将每条数据通过计算产生一个指纹（一个字节或多个字节，但一定比原始数据要少很多），其中每一位都是通过随机计算获得，在将指纹映射到一个大的按位存储的空间中。注意：会有一定的错误率。<br>优点：空间和时间效率都很高。<br>缺点：随着存入的元素数量增加，误算率随之增加。</p><ul><li><a href="https://segmentfault.com/a/1190000002729689" target="_blank" rel="external">《布隆过滤器 – 空间效率很高的数据结构》</a></li><li><a href="https://blog.csdn.net/zdxiq000/article/details/57626464" target="_blank" rel="external">《大量数据去重：Bitmap和布隆过滤器(Bloom Filter)》</a></li><li><a href="https://blog.csdn.net/qq_30242609/article/details/71024458" target="_blank" rel="external">《基于Redis的布隆过滤器的实现》</a><ul><li>基于 Redis 的 Bitmap 数据结构。</li></ul></li><li><a href="https://blog.csdn.net/lemon_tree12138/article/details/47973715" target="_blank" rel="external">《网络爬虫：URL去重策略之布隆过滤器(BloomFilter)的使用》</a><ul><li>使用Java中的 BitSet 类 和 加权和hash算法。</li></ul></li></ul><h2 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h2><h3 id="KMP-算法"><a href="#KMP-算法" class="headerlink" title="KMP 算法"></a>KMP 算法</h3><p>KMP：Knuth-Morris-Pratt算法（简称KMP）<br>核心原理是利用一个“部分匹配表”，跳过已经匹配过的元素。</p><ul><li><a href="http://www.ruanyifeng.com/blog/2013/05/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm.html" target="_blank" rel="external">《字符串匹配的KMP算法》</a></li></ul><h2 id="深度优先、广度优先"><a href="#深度优先、广度优先" class="headerlink" title="深度优先、广度优先"></a>深度优先、广度优先</h2><ul><li><a href="https://www.cnblogs.com/0kk470/p/7555033.html" target="_blank" rel="external">《广度优先搜索BFS和深度优先搜索DFS》</a></li></ul><h2 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h2><ul><li><a href="https://www.cnblogs.com/MrSaver/p/8641971.html" target="_blank" rel="external">《算法：贪婪算法基础》</a></li><li><a href="https://blog.csdn.net/a345017062/article/details/52443781" target="_blank" rel="external">《常见算法及问题场景——贪心算法》</a></li></ul><h2 id="回溯算法"><a href="#回溯算法" class="headerlink" title="回溯算法"></a>回溯算法</h2><ul><li><a href="https://blog.csdn.net/qfikh/article/details/51960331" target="_blank" rel="external">《 五大常用算法之四：回溯法》</a></li></ul><h2 id="剪枝算法"><a href="#剪枝算法" class="headerlink" title="剪枝算法"></a>剪枝算法</h2><ul><li><a href="https://blog.csdn.net/luningcsdn/article/details/50930276" target="_blank" rel="external">《α-β剪枝算法》</a></li></ul><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><ul><li><a href="https://www.cnblogs.com/little-YTMM/p/5372680.html" target="_blank" rel="external">《详解动态规划——邹博讲动态规划》</a></li><li><a href="https://blog.csdn.net/yao_zi_jie/article/details/54580283" target="_blank" rel="external">《动态规划算法的个人理解》</a></li></ul><h2 id="朴素贝叶斯"><a href="#朴素贝叶斯" class="headerlink" title="朴素贝叶斯"></a>朴素贝叶斯</h2><ul><li><p><a href="https://blog.csdn.net/amds123/article/details/70173402" target="_blank" rel="external">《带你搞懂朴素贝叶斯分类算法》</a></p><ul><li>P(B|A)=P(A|B)P(B)/P(A)</li></ul></li><li><p><a href="http://www.ruanyifeng.com/blog/2011/08/bayesian_inference_part_one.html" target="_blank" rel="external">《贝叶斯推断及其互联网应用1》</a></p></li><li><a href="http://www.ruanyifeng.com/blog/2011/08/bayesian_inference_part_two.html" target="_blank" rel="external">《贝叶斯推断及其互联网应用2》</a></li></ul><h2 id="推荐算法"><a href="#推荐算法" class="headerlink" title="推荐算法"></a>推荐算法</h2><ul><li><a href="http://www.infoq.com/cn/articles/recommendation-algorithm-overview-part01" target="_blank" rel="external">《推荐算法综述》</a></li><li><a href="https://www.oschina.net/news/51297/top-10-open-source-recommendation-systems" target="_blank" rel="external">《TOP 10 开源的推荐系统简介》</a></li></ul><h2 id="最小生成树算法"><a href="#最小生成树算法" class="headerlink" title="最小生成树算法"></a>最小生成树算法</h2><ul><li><a href="https://blog.csdn.net/luoshixian099/article/details/51908175" target="_blank" rel="external">《算法导论–最小生成树（Kruskal和Prim算法）》</a></li></ul><h2 id="最短路径算法"><a href="#最短路径算法" class="headerlink" title="最短路径算法"></a>最短路径算法</h2><ul><li><a href="https://blog.csdn.net/qq_35644234/article/details/60870719" target="_blank" rel="external">《Dijkstra算法详解》</a></li></ul><h1 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h1><h2 id="Java-并发"><a href="#Java-并发" class="headerlink" title="Java 并发"></a>Java 并发</h2><ul><li><a href="https://github.com/CL0610/Java-concurrency" target="_blank" rel="external">Java 并发知识合集</a></li><li><a href="https://github.com/CL0610/Java-concurrency/blob/master/Java并发知识图谱.png" target="_blank" rel="external">JAVA并发知识图谱</a></li></ul><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><ul><li><a href="http://www.importnew.com/18459.html" target="_blank" rel="external">《40个Java多线程问题总结》</a></li></ul><h2 id="线程安全"><a href="#线程安全" class="headerlink" title="线程安全"></a>线程安全</h2><ul><li><a href="https://www.cnblogs.com/zhanht/p/5450325.html" target="_blank" rel="external">《Java并发编程——线程安全及解决机制简介》</a></li></ul><h2 id="一致性、事务"><a href="#一致性、事务" class="headerlink" title="一致性、事务"></a>一致性、事务</h2><h3 id="事务-ACID-特性"><a href="#事务-ACID-特性" class="headerlink" title="事务 ACID 特性"></a>事务 ACID 特性</h3><ul><li><a href="https://blog.csdn.net/u012440687/article/details/52116108" target="_blank" rel="external">《数据库事务ACID特性》</a></li></ul><h3 id="事务的隔离级别"><a href="#事务的隔离级别" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h3><ul><li>未提交读：一个事务可以读取另一个未提交的数据，容易出现脏读的情况。</li><li>读提交：一个事务等另外一个事务提交之后才可以读取数据，但会出现不可重复读的情况（多次读取的数据不一致），读取过程中出现UPDATE操作，会多。（大多数数据库默认级别是RC，比如SQL Server，Oracle），读取的时候不可以修改。</li><li>可重复读： 同一个事务里确保每次读取的时候，获得的是同样的数据，但不保障原始数据被其他事务更新（幻读），Mysql InnoDB 就是这个级别。</li><li><p>序列化：所有事物串行处理（牺牲了效率）</p></li><li><p><a href="https://blog.csdn.net/qq_33290787/article/details/51924963" target="_blank" rel="external">《理解事务的4种隔离级别》</a></p></li><li><p><a href="https://www.cnblogs.com/z-sm/p/7245981.html" target="_blank" rel="external">数据库事务的四大特性及事务隔离级别</a></p></li><li><p><a href="http://blog.sina.com.cn/s/blog_499740cb0100ugs7.html" target="_blank" rel="external">《MySQL的InnoDB的幻读问题 》</a></p><ul><li>幻读的例子非常清楚。</li><li>通过 SELECT … FOR UPDATE 解决。</li></ul></li><li><p><a href="http://database.51cto.com/art/201804/570101.htm" target="_blank" rel="external">《一篇文章带你读懂MySQL和InnoDB》</a></p><ul><li>图解脏读、不可重复读、幻读问题。</li></ul></li></ul><h3 id="MVCC"><a href="#MVCC" class="headerlink" title="MVCC"></a>MVCC</h3><ul><li><p><a href="https://www.cnblogs.com/chenpingzhao/p/5065316.html" target="_blank" rel="external">《【mysql】关于innodb中MVCC的一些理解》</a></p><ul><li>innodb 中 MVCC 用在 Repeatable-Read 隔离级别。</li><li>MVCC 会产生幻读问题（更新时异常。）</li></ul></li><li><p><a href="https://blog.csdn.net/whoamiyang/article/details/51901888" target="_blank" rel="external">《轻松理解MYSQL MVCC 实现机制》</a></p><ul><li>通过隐藏版本列来实现 MVCC 控制，一列记录创建时间、一列记录删除时间，这里的时间</li><li>每次只操作比当前版本小（或等于）的 行。</li></ul></li></ul><h2 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h2><h3 id="Java中的锁和同步类"><a href="#Java中的锁和同步类" class="headerlink" title="Java中的锁和同步类"></a>Java中的锁和同步类</h3><ul><li><p><a href="https://www.cnblogs.com/qifengshi/p/6831055.html" target="_blank" rel="external">《Java中的锁分类》</a></p><ul><li>主要包括 synchronized、ReentrantLock、和 ReadWriteLock。 </li></ul></li><li><p><a href="https://www.cnblogs.com/waterystone/p/4920797.html" target="_blank" rel="external">《Java并发之AQS详解》</a></p></li><li><p><a href="http://cuisuqiang.iteye.com/blog/2020146" target="_blank" rel="external">《Java中信号量 Semaphore》</a></p><ul><li>有数量控制</li><li>申请用 acquire，申请不要则阻塞；释放用 release。</li></ul></li><li><p><a href="https://www.cnblogs.com/davidwang456/p/6094947.html" target="_blank" rel="external">《java开发中的Mutex vs Semaphore》</a></p><ul><li>简单的说 就是Mutex是排它的，只有一个可以获取到资源， Semaphore也具有排它性，但可以定义多个可以获取的资源的对象。     </li></ul></li></ul><h3 id="公平锁-amp-非公平锁"><a href="#公平锁-amp-非公平锁" class="headerlink" title="公平锁 &amp; 非公平锁"></a>公平锁 &amp; 非公平锁</h3><p>公平锁的作用就是严格按照线程启动的顺序来执行的，不允许其他线程插队执行的；而非公平锁是允许插队的。</p><ul><li><a href="https://blog.csdn.net/EthanWhite/article/details/55508357" target="_blank" rel="external">《公平锁与非公平锁》</a><ul><li>默认情况下 ReentrantLock 和 synchronized 都是非公平锁。ReentrantLock 可以设置成公平锁。</li></ul></li></ul><h3 id="悲观锁"><a href="#悲观锁" class="headerlink" title="悲观锁"></a>悲观锁</h3><p>悲观锁如果使用不当（锁的条数过多），会引起服务大面积等待。推荐优先使用乐观锁+重试。</p><ul><li><p><a href="https://www.cnblogs.com/zhiqian-ali/p/6200874.html" target="_blank" rel="external">《【MySQL】悲观锁&amp;乐观锁》</a></p><ul><li>乐观锁的方式：版本号+重试方式</li><li>悲观锁：通过 select … for update 进行行锁(不可读、不可写，share 锁可读不可写)。</li></ul></li><li><p><a href="https://www.cnblogs.com/Lawson/p/5008741.html" target="_blank" rel="external">《Mysql查询语句使用select.. for update导致的数据库死锁分析》</a></p><ul><li>mysql的innodb存储引擎实务锁虽然是锁行，但它内部是锁索引的。</li><li>锁相同数据的不同索引条件可能会引起死锁。</li></ul></li><li><p><a href="https://www.cnblogs.com/zejin2008/p/5262751.html" target="_blank" rel="external">《Mysql并发时经典常见的死锁原因及解决方法》</a></p></li></ul><h3 id="乐观锁-amp-CAS"><a href="#乐观锁-amp-CAS" class="headerlink" title="乐观锁 &amp; CAS"></a>乐观锁 &amp; CAS</h3><ul><li><a href="http://www.importnew.com/20472.html" target="_blank" rel="external">《乐观锁的一种实现方式——CAS》</a><ul><li>和MySQL乐观锁方式相似，只不过是通过和原值进行比较。     </li></ul></li></ul><h3 id="ABA-问题"><a href="#ABA-问题" class="headerlink" title="ABA 问题"></a>ABA 问题</h3><p>由于高并发，在CAS下，更新后可能此A非彼A。通过版本号可以解决，类似于上文Mysql 中提到的的乐观锁。</p><ul><li><a href="https://www.cnblogs.com/549294286/p/3766717.html" target="_blank" rel="external">《Java CAS 和ABA问题》</a></li><li><a href="https://blog.csdn.net/li954644351/article/details/50511879" target="_blank" rel="external">《Java 中 ABA问题及避免》</a><ul><li>AtomicStampedReference 和 AtomicStampedReference。 </li></ul></li></ul><h3 id="CopyOnWrite容器"><a href="#CopyOnWrite容器" class="headerlink" title="CopyOnWrite容器"></a>CopyOnWrite容器</h3><p>可以对CopyOnWrite容器进行并发的读，而不需要加锁。CopyOnWrite并发容器用于读多写少的并发场景。比如白名单，黑名单，商品类目的访问和更新场景，不适合需要数据强一致性的场景。</p><ul><li><p><a href="https://www.cnblogs.com/hapjin/p/4840107.html" target="_blank" rel="external">《JAVA中写时复制(Copy-On-Write)Map实现》</a></p><ul><li>实现读写分离，读取发生在原始数据上，写入发生在副本上。  </li><li>不用加锁，通过最终一致实现一致性。</li></ul></li><li><p><a href="https://blog.csdn.net/a494303877/article/details/53404623" target="_blank" rel="external">《聊聊并发-Java中的Copy-On-Write容器》</a></p></li></ul><h3 id="RingBuffer"><a href="#RingBuffer" class="headerlink" title="RingBuffer"></a>RingBuffer</h3><ul><li><a href="http://www.cnblogs.com/l00l/p/4115001.html" target="_blank" rel="external">《线程安全的无锁RingBuffer的实现【一个读线程，一个写线程】》</a></li></ul><h3 id="可重入锁-amp-不可重入锁"><a href="#可重入锁-amp-不可重入锁" class="headerlink" title="可重入锁 &amp; 不可重入锁"></a>可重入锁 &amp; 不可重入锁</h3><ul><li><p><a href="https://www.cnblogs.com/dj3839/p/6580765.html" target="_blank" rel="external">《可重入锁和不可重入锁》</a></p><ul><li>通过简单代码举例说明可重入锁和不可重入锁。</li><li>可重入锁指同一个线程可以再次获得之前已经获得的锁。</li><li>可重入锁可以用户避免死锁。</li><li>Java中的可重入锁：synchronized 和 java.util.concurrent.locks.ReentrantLock</li></ul></li><li><p><a href="https://www.cnblogs.com/baizhanshi/p/7211802.html" target="_blank" rel="external">《ReenTrantLock可重入锁（和synchronized的区别）总结》</a></p><ul><li>synchronized 使用方便，编译器来加锁，是非公平锁。</li><li>ReenTrantLock 使用灵活，锁的公平性可以定制。</li><li>相同加锁场景下，推荐使用 synchronized。</li></ul></li></ul><h3 id="互斥锁-amp-共享锁"><a href="#互斥锁-amp-共享锁" class="headerlink" title="互斥锁 &amp; 共享锁"></a>互斥锁 &amp; 共享锁</h3><p>互斥锁：同时只能有一个线程获得锁。比如，ReentrantLock 是互斥锁，ReadWriteLock 中的写锁是互斥锁。<br>共享锁：可以有多个线程同时或的锁。比如，Semaphore、CountDownLatch 是共享锁，ReadWriteLock 中的读锁是共享锁。</p><ul><li><a href="https://www.cnblogs.com/liang1101/p/6475555.html" target="_blank" rel="external">《ReadWriteLock场景应用》</a></li></ul><h3 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h3><ul><li><a href="https://blog.csdn.net/yunfenglw/article/details/45950305" target="_blank" rel="external">《“死锁”四个必要条件的合理解释》</a><ul><li>互斥、持有、不可剥夺、环形等待。</li></ul></li><li><p><a href="https://blog.csdn.net/u014039577/article/details/52351626" target="_blank" rel="external">Java如何查看死锁？</a></p><ul><li>JConsole 可以识别死锁。</li></ul></li><li><p><a href="https://blog.csdn.net/bohu83/article/details/51135061" target="_blank" rel="external">java多线程系列：死锁及检测</a></p><ul><li>jstack 可以显示死锁。</li></ul></li></ul><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h2 id="计算机原理"><a href="#计算机原理" class="headerlink" title="计算机原理"></a>计算机原理</h2><ul><li><a href="https://segmentfault.com/a/1190000003692840" target="_blank" rel="external">《操作系统基础知识——操作系统的原理，类型和结构》</a></li></ul><h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><h3 id="多级缓存"><a href="#多级缓存" class="headerlink" title="多级缓存"></a>多级缓存</h3><p>典型的 CPU 有三级缓存，距离核心越近，速度越快，空间越小。L1 一般 32k，L2 一般 256k，L3 一般12M。内存速度需要200个 CPU 周期，CPU 缓存需要1个CPU周期。</p><ul><li><a href="https://blog.csdn.net/zero__007/article/details/54089730" target="_blank" rel="external">《从Java视角理解CPU缓存和伪共享》</a></li></ul><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><p>TODO</p><h2 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h2><ul><li><a href="https://blog.csdn.net/asdf_1024/article/details/78978437" target="_blank" rel="external">《线程的生命周期及状态转换详解》</a></li></ul><h2 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h2><ul><li><a href="https://www.thinksaas.cn/group/topic/839375/" target="_blank" rel="external">《终结python协程—-从yield到actor模型的实现》</a><ul><li>线程的调度是由操作系统负责，协程调度是程序自行负责</li><li>与线程相比，协程减少了无谓的操作系统切换.</li><li>实际上当遇到IO操作时做切换才更有意义，（因为IO操作不用占用CPU），如果没遇到IO操作，按照时间片切换.</li></ul></li></ul><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul><li><a href="http://www.runoob.com/linux/linux-command-manual.html" target="_blank" rel="external">《Linux 命令大全》</a></li></ul><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><h2 id="设计模式的六大原则"><a href="#设计模式的六大原则" class="headerlink" title="设计模式的六大原则"></a>设计模式的六大原则</h2><ul><li><a href="https://blog.csdn.net/q291611265/article/details/48465113" target="_blank" rel="external">《设计模式的六大原则》</a><ul><li>开闭原则：对扩展开放,对修改关闭，多使用抽象类和接口。</li><li>里氏替换原则：基类可以被子类替换，使用抽象类继承,不使用具体类继承。</li><li>依赖倒转原则：要依赖于抽象,不要依赖于具体，针对接口编程,不针对实现编程。</li><li>接口隔离原则：使用多个隔离的接口,比使用单个接口好，建立最小的接口。</li><li>迪米特法则：一个软件实体应当尽可能少地与其他实体发生相互作用，通过中间类建立联系。</li><li>合成复用原则：尽量使用合成/聚合,而不是使用继承。</li></ul></li></ul><h2 id="23种常见设计模式"><a href="#23种常见设计模式" class="headerlink" title="23种常见设计模式"></a>23种常见设计模式</h2><ul><li><a href="http://www.runoob.com/design-pattern/design-pattern-tutorial.html" target="_blank" rel="external">《设计模式》</a></li><li><a href="https://www.cnblogs.com/susanws/p/5510229.html" target="_blank" rel="external">《23种设计模式全解析》</a></li><li><a href="https://github.com/ToryZhou/design-pattern" target="_blank" rel="external">《设计模式类图与示例》</a></li></ul><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><ul><li><p><a href="http://blog.jobbole.com/62314/" target="_blank" rel="external">《细数JDK里的设计模式》</a></p><ul><li><p>结构型模式：</p><ul><li>适配器：用来把一个接口转化成另一个接口，如 java.util.Arrays#asList()。</li><li>桥接模式：这个模式将抽象和抽象操作的实现进行了解耦，这样使得抽象和实现可以独立地变化，如JDBC；</li><li>组合模式：使得客户端看来单个对象和对象的组合是同等的。换句话说，某个类型的方法同时也接受自身类型作为参数，如 Map.putAll，List.addAll、Set.addAll。</li><li>装饰者模式：动态的给一个对象附加额外的功能，这也是子类的一种替代方式，如 java.util.Collections#checkedList|Map|Set|SortedSet|SortedMap。</li><li>享元模式：使用缓存来加速大量小对象的访问时间，如 valueOf(int)。</li><li>代理模式：代理模式是用一个简单的对象来代替一个复杂的或者创建耗时的对象，如 java.lang.reflect.Proxy</li></ul></li><li><p>创建模式:</p><ul><li>抽象工厂模式：抽象工厂模式提供了一个协议来生成一系列的相关或者独立的对象，而不用指定具体对象的类型，如 java.util.Calendar#getInstance()。</li><li>建造模式(Builder)：定义了一个新的类来构建另一个类的实例，以简化复杂对象的创建，如：java.lang.StringBuilder#append()。</li><li>工厂方法：就是 <strong>一个返*</strong> 回具体对象的方法，而不是多个，如 java.lang.Object#toString()、java.lang.Class#newInstance()。</li><li>原型模式：使得类的实例能够生成自身的拷贝、如：java.lang.Object#clone()。</li><li>单例模式：全局只有一个实例，如 java.lang.Runtime#getRuntime()。</li></ul></li><li>行为模式：<ul><li>责任链模式：通过把请求从一个对象传递到链条中下一个对象的方式，直到请求被处理完毕，以实现对象间的解耦。如 javax.servlet.Filter#doFilter()。</li><li>命令模式：将操作封装到对象内，以便存储，传递和返回，如：java.lang.Runnable。</li><li>解释器模式：定义了一个语言的语法，然后解析相应语法的语句，如，java.text.Format，java.text.Normalizer。</li><li>迭代器模式：提供一个一致的方法来顺序访问集合中的对象，如 java.util.Iterator。</li><li>中介者模式：通过使用一个中间对象来进行消息分发以及减少类之间的直接依赖，java.lang.reflect.Method#invoke()。</li><li>空对象模式：如 java.util.Collections#emptyList()。</li><li>观察者模式：它使得一个对象可以灵活的将消息发送给感兴趣的对象，如 java.util.EventListener。</li><li>模板方法模式：让子类可以重写方法的一部分，而不是整个重写，如 java.util.Collections#sort()。</li></ul></li></ul></li><li><p><a href="https://www.cnblogs.com/hwaggLee/p/4510687.html" target="_blank" rel="external">《Spring-涉及到的设计模式汇总》</a></p></li><li><a href="https://blog.csdn.net/u012387062/article/details/54719114" target="_blank" rel="external">《Mybatis使用的设计模式》</a></li></ul><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><ul><li><a href="https://blog.csdn.net/YECrazy/article/details/79481964" target="_blank" rel="external">《单例模式的三种实现 以及各自的优缺点》</a></li><li><a href="https://www.cnblogs.com/ttylinux/p/6498822.html" target="_blank" rel="external">《单例模式－－反射－－防止序列化破坏单例模式》</a><ul><li>使用枚举类型。</li></ul></li></ul><h2 id="责任链模式"><a href="#责任链模式" class="headerlink" title="责任链模式"></a>责任链模式</h2><p>TODO</p><h2 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h2><ul><li><a href="http://www.runoob.com/design-pattern/mvc-pattern.html" target="_blank" rel="external">《MVC 模式》</a><ul><li>模型(model)－视图(view)－控制器(controller) </li></ul></li></ul><h2 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h2><ul><li><a href="https://www.zhihu.com/question/23277575" target="_blank" rel="external">《理解 IOC》</a></li><li><a href="https://www.cnblogs.com/NancyStartOnce/p/6813162.html" target="_blank" rel="external">《IOC 的理解与解释》</a><ul><li>正向控制：传统通过new的方式。反向控制，通过容器注入对象。</li><li>作用：用于模块解耦。</li><li>DI：Dependency Injection，即依赖注入，只关心资源使用，不关心资源来源。</li></ul></li></ul><h2 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h2><ul><li><a href="https://blog.csdn.net/yanquan345/article/details/19760027" target="_blank" rel="external">《轻松理解AOP(面向切面编程)》</a></li><li><a href="https://www.cnblogs.com/hongwz/p/5764917.html" target="_blank" rel="external">《Spring AOP详解》</a></li><li><a href="http://www.importnew.com/24305.html" target="_blank" rel="external">《Spring AOP的实现原理》</a><ul><li>Spring AOP使用的动态代理，主要有两种方式：JDK动态代理和CGLIB动态代理。</li></ul></li><li><a href="https://www.ibm.com/developerworks/cn/java/j-lo-springaopcglib/" target="_blank" rel="external">《Spring AOP 实现原理与 CGLIB 应用》</a><ul><li>Spring AOP 框架对 AOP 代理类的处理原则是：如果目标对象的实现类实现了接口，Spring AOP 将会采用 JDK 动态代理来生成 AOP 代理类；如果目标对象的实现类没有实现接口，Spring AOP 将会采用 CGLIB 来生成 AOP 代理类 </li></ul></li></ul><h2 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h2><ul><li><a href="https://www.w3cschool.cn/uml_tutorial/" target="_blank" rel="external">《UML教程》</a></li></ul><h2 id="微服务思想"><a href="#微服务思想" class="headerlink" title="微服务思想"></a>微服务思想</h2><ul><li><a href="https://www.cnblogs.com/wintersun/p/6219259.html" target="_blank" rel="external">《微服务架构设计》</a></li><li><a href="http://www.infoq.com/cn/articles/micro-service-technology-stack" target="_blank" rel="external">《微服务架构技术栈选型手册》</a></li></ul><h3 id="康威定律"><a href="#康威定律" class="headerlink" title="康威定律"></a>康威定律</h3><ul><li><p><a href="https://yq.aliyun.com/articles/8611" target="_blank" rel="external">《微服务架构的理论基础 - 康威定律》</a></p><ul><li>定律一：组织沟通方式会通过系统设计表达出来，就是说架构的布局和组织结构会有相似。</li><li>定律二：时间再多一件事情也不可能做的完美，但总有时间做完一件事情。一口气吃不成胖子，先搞定能搞定的。</li><li>定律三：线型系统和线型组织架构间有潜在的异质同态特性。种瓜得瓜，做独立自治的子系统减少沟通成本。</li><li>定律四：大的系统组织总是比小系统更倾向于分解。合久必分，分而治之。</li></ul></li><li><p><a href="https://static.geekbang.org/PDF-%E4%BF%AE%E6%94%B9%E7%89%88-%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4-%E5%9B%BE%E7%89%87-%E6%9D%A8%E6%B3%A2-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84.pdf" target="_blank" rel="external">《微服务架构核⼼20讲》</a></p></li></ul><h1 id="运维-amp-统计-amp-技术支持"><a href="#运维-amp-统计-amp-技术支持" class="headerlink" title="运维 &amp; 统计 &amp; 技术支持"></a>运维 &amp; 统计 &amp; 技术支持</h1><h2 id="常规监控"><a href="#常规监控" class="headerlink" title="常规监控"></a>常规监控</h2><ul><li><p><a href="https://blog.csdn.net/enweitech/article/details/77849205" target="_blank" rel="external">《腾讯业务系统监控的修炼之路》</a></p><ul><li>监控的方式：主动、被动、旁路(比如舆情监控)</li><li>监控类型： 基础监控、服务端监控、客户端监控、<br>监控、用户端监控</li><li>监控的目标：全、块、准</li><li>核心指标：请求量、成功率、耗时</li></ul></li><li><p><a href="https://www.oschina.net/news/67525/monitoring-tools" target="_blank" rel="external">《开源还是商用？十大云运维监控工具横评》</a></p><ul><li>Zabbix、Nagios、Ganglia、Zenoss、Open-falcon、监控宝、 360网站服务监控、阿里云监控、百度云观测、小蜜蜂网站监测等。</li></ul></li><li><p><a href="http://developer.51cto.com/art/201612/525373.htm" target="_blank" rel="external">《监控报警系统搭建及二次开发经验》</a></p></li></ul><p><strong>命令行监控工具</strong></p><ul><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-er-pian-ff1a-feng-kuang-yuan-shi-ren/44-an-quan-yu-yun-wei/445-fu-wu-qi-zhuang-tai-jian-ce/4451-ming-ling-xing-gong-ju.html" target="_blank" rel="external">《常用命令行监控工具》</a></p><ul><li>top、sar、tsar、nload</li></ul></li><li><p><a href="http://blog.jobbole.com/96846/" target="_blank" rel="external">《20个命令行工具监控 Linux 系统性能》</a></p></li><li><p><a href="https://my.oschina.net/feichexia/blog/196575" target="_blank" rel="external">《JVM性能调优监控工具jps、jstack、jmap、jhat、jstat、hprof使用详解》</a></p></li></ul><h2 id="APM"><a href="#APM" class="headerlink" title="APM"></a>APM</h2><p>APM —  Application Performance Management</p><ul><li><p><a href="http://bigbully.github.io/Dapper-translation/" target="_blank" rel="external">《Dapper，大规模分布式系统的跟踪系统》</a></p></li><li><p><a href="http://opentracing.io" target="_blank" rel="external">CNCF OpenTracing</a>，<a href="https://github.com/opentracing-contrib/opentracing-specification-zh" target="_blank" rel="external">中文版</a></p></li><li><p>主要开源软件，按字母排序</p><ul><li><a href="https://github.com/apache/incubator-skywalking" target="_blank" rel="external">Apache SkyWalking</a></li><li><a href="https://github.com/dianping/cat" target="_blank" rel="external">CAT</a></li><li><a href="https://github.com/jaegertracing/jaeger" target="_blank" rel="external">CNCF jaeger</a></li><li><a href="https://github.com/naver/pinpoint" target="_blank" rel="external">Pinpoint</a></li><li><a href="https://github.com/openzipkin/zipkin" target="_blank" rel="external">Zipkin</a></li></ul></li><li><p><a href="http://www.infoq.com/cn/articles/apm-Pinpoint-practice" target="_blank" rel="external">《开源APM技术选型与实战》</a></p><ul><li>主要基于 Google的Dapper（大规模分布式系统的跟踪系统） 思想。</li></ul></li></ul><h2 id="统计分析"><a href="#统计分析" class="headerlink" title="统计分析"></a>统计分析</h2><ul><li><p><a href="https://zhuanlan.zhihu.com/p/25195217" target="_blank" rel="external">《流量统计的基础：埋点》</a></p><ul><li>常用指标：访问与访客、停留时长、跳出率、退出率、转化率、参与度</li></ul></li><li><p><a href="http://www.25xt.com/company/17066.html" target="_blank" rel="external">《APP埋点常用的统计工具、埋点目标和埋点内容》</a></p><ul><li>第三方统计：友盟、百度移动、魔方、App Annie、talking data、神策数据等。</li></ul></li><li><p><a href="https://tech.meituan.com/mt-mobile-analytics-practice.html" target="_blank" rel="external">《美团点评前端无痕埋点实践》</a></p><ul><li>所谓无痕、即通过可视化工具配置采集节点，在前端自动解析配置并上报埋点数据，而非硬编码。 </li></ul></li></ul><h2 id="持续集成-CI-CD"><a href="#持续集成-CI-CD" class="headerlink" title="持续集成(CI/CD)"></a>持续集成(CI/CD)</h2><ul><li><a href="http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html" target="_blank" rel="external">《持续集成是什么？》</a></li><li><a href="https://www.testwo.com/article/1170" target="_blank" rel="external">《8个流行的持续集成工具》</a></li></ul><h3 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h3><ul><li><a href="https://www.liaoxuefeng.com/article/001463233913442cdb2d1bd1b1b42e3b0b29eb1ba736c5e000" target="_blank" rel="external">《使用Jenkins进行持续集成》</a></li></ul><h3 id="环境分离"><a href="#环境分离" class="headerlink" title="环境分离"></a>环境分离</h3><p>开发、测试、生成环境分离。</p><ul><li><a href="https://my.oschina.net/sancuo/blog/214904" target="_blank" rel="external">《开发环境、生产环境、测试环境的基本理解和区》</a></li></ul><h2 id="自动化运维"><a href="#自动化运维" class="headerlink" title="自动化运维"></a>自动化运维</h2><h3 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h3><ul><li><a href="http://www.ansible.com.cn/" target="_blank" rel="external">《Ansible中文权威指南》</a></li><li><a href="https://www.cnblogs.com/heiye123/articles/7855890.html" target="_blank" rel="external">《Ansible基础配置和企业级项目实用案例》</a></li></ul><h3 id="puppet"><a href="#puppet" class="headerlink" title="puppet"></a>puppet</h3><ul><li><a href="https://www.cnblogs.com/keerya/p/8040071.html" target="_blank" rel="external">《自动化运维工具——puppet详解》</a></li></ul><h3 id="chef"><a href="#chef" class="headerlink" title="chef"></a>chef</h3><ul><li><a href="https://www.ibm.com/developerworks/cn/cloud/library/1407_caomd_chef/" target="_blank" rel="external">《Chef 的安装与使用》</a></li></ul><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="TDD-理论"><a href="#TDD-理论" class="headerlink" title="TDD 理论"></a>TDD 理论</h3><ul><li><a href="https://www.jianshu.com/p/62f16cd4fef3" target="_blank" rel="external">《深度解读 - TDD（测试驱动开发）》</a><ul><li>基于测试用例编码功能代码，XP（Extreme Programming）的核心实践.</li><li>好处：一次关注一个点，降低思维负担；迎接需求变化或改善代码的设计；提前澄清需求；快速反馈； </li></ul></li></ul><h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><ul><li><a href="https://www.cnblogs.com/happyzm/p/6482886.html" target="_blank" rel="external">《Java单元测试之JUnit篇》</a></li><li><a href="https://blog.csdn.net/hotdust/article/details/53406086" target="_blank" rel="external">《JUnit 4 与 TestNG 对比》</a><ul><li>TestNG 覆盖 JUnit 功能，适用于更复杂的场景。 </li></ul></li><li><a href="https://blog.csdn.net/wqetfg/article/details/50900512" target="_blank" rel="external">《单元测试主要的测试功能点》</a><ul><li>模块接口测试、局部数据结构测试、路径测试 、错误处理测试、边界条件测试 。 </li></ul></li></ul><h3 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h3><ul><li><a href="https://blog.csdn.net/blueheart20/article/details/52170790" target="_blank" rel="external">《Apache ab 测试使用指南》</a></li><li><a href="https://www.cnblogs.com/binyue/p/6141088.html" target="_blank" rel="external">《大型网站压力测试及优化方案》</a></li><li><a href="http://news.chinabyte.com/466/14126966.shtml" target="_blank" rel="external">《10大主流压力/负载/性能测试工具推荐》</a></li><li><a href="http://quentinxxz.iteye.com/blog/2249799" target="_blank" rel="external">《真实流量压测工具 tcpcopy应用浅析》</a></li><li><a href="https://www.cnblogs.com/jwentest/p/7136727.html" target="_blank" rel="external">《nGrinder 简易使用教程》</a></li></ul><h3 id="全链路压测"><a href="#全链路压测" class="headerlink" title="全链路压测"></a>全链路压测</h3><ul><li><a href="http://www.infoq.com/cn/articles/jd-618-upgrade-full-link-voltage-test-program-forcebot" target="_blank" rel="external">《京东618：升级全链路压测方案，打造军演机器人ForceBot》</a></li><li><a href="https://zhuanlan.zhihu.com/p/30306892" target="_blank" rel="external">《饿了么全链路压测的探索与实践》</a></li><li><a href="https://zhuanlan.zhihu.com/p/28355759" target="_blank" rel="external">《四大语言，八大框架｜滴滴全链路压测解决之道》</a></li><li><a href="https://www.jianshu.com/p/27060fd61f72" target="_blank" rel="external">《全链路压测经验》</a></li></ul><h3 id="A-B-、灰度、蓝绿测试"><a href="#A-B-、灰度、蓝绿测试" class="headerlink" title="A/B 、灰度、蓝绿测试"></a>A/B 、灰度、蓝绿测试</h3><ul><li><a href="https://testerhome.com/topics/11165" target="_blank" rel="external">《技术干货 | AB 测试和灰度发布探索及实践》</a></li><li><p><a href="http://blog.51cto.com/purplegrape/1403123" target="_blank" rel="external">《nginx 根据IP 进行灰度发布》</a></p></li><li><p><a href="https://www.v2ex.com/t/344341" target="_blank" rel="external">《蓝绿部署、A/B 测试以及灰度发布》</a></p></li></ul><h2 id="虚拟化"><a href="#虚拟化" class="headerlink" title="虚拟化"></a>虚拟化</h2><ul><li><a href="https://blog.csdn.net/enweitech/article/details/52910082" target="_blank" rel="external">《VPS的三种虚拟技术OpenVZ、Xen、KVM优缺点比较》</a></li></ul><h3 id="KVM"><a href="#KVM" class="headerlink" title="KVM"></a>KVM</h3><ul><li><a href="http://blog.chinaunix.net/uid-20201831-id-5775661.html" target="_blank" rel="external">《KVM详解，太详细太深入了，经典》</a></li><li><a href="https://www.coderxing.com/kvm-install.html" target="_blank" rel="external">《【图文】KVM 虚拟机安装详解》</a></li></ul><h3 id="Xen"><a href="#Xen" class="headerlink" title="Xen"></a>Xen</h3><ul><li><a href="https://www.cnblogs.com/sddai/p/5931201.html" target="_blank" rel="external">《Xen虚拟化基本原理详解》</a></li></ul><h3 id="OpenVZ"><a href="#OpenVZ" class="headerlink" title="OpenVZ"></a>OpenVZ</h3><ul><li><a href="https://blog.csdn.net/longerzone/article/details/44829255" target="_blank" rel="external">《开源Linux容器 OpenVZ 快速上手指南》</a></li></ul><h2 id="容器技术"><a href="#容器技术" class="headerlink" title="容器技术"></a>容器技术</h2><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><ul><li><a href="https://www.cnblogs.com/SzeCheng/p/6822905.html" target="_blank" rel="external">《几张图帮你理解 docker 基本原理及快速入门》</a></li><li><a href="https://draveness.me/docker" target="_blank" rel="external">《Docker 核心技术与实现原理》</a></li><li><a href="http://www.runoob.com/docker/docker-tutorial.html" target="_blank" rel="external">《Docker 教程》</a></li></ul><h2 id="云技术"><a href="#云技术" class="headerlink" title="云技术"></a>云技术</h2><h3 id="OpenStack"><a href="#OpenStack" class="headerlink" title="OpenStack"></a>OpenStack</h3><ul><li><a href="https://www.cnblogs.com/klb561/p/8660264.html" target="_blank" rel="external">《OpenStack构架知识梳理》</a></li></ul><h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><ul><li><a href="https://www.cnblogs.com/jetzhang/p/6068773.html" target="_blank" rel="external">《一分钟告诉你究竟DevOps是什么鬼？》</a></li><li><a href="http://www.infoq.com/cn/articles/detail-analysis-of-devops" target="_blank" rel="external">《DevOps详解》</a></li></ul><h2 id="文档管理"><a href="#文档管理" class="headerlink" title="文档管理"></a>文档管理</h2><ul><li><a href="http://www.confluence.cn/" target="_blank" rel="external">Confluence-收费文档管理系统</a></li><li>GitLab?</li><li>Wiki</li></ul><h1 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h1><h2 id="Web-Server"><a href="#Web-Server" class="headerlink" title="Web Server"></a>Web Server</h2><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><ul><li><p><a href="https://blog.csdn.net/qq_25797077/article/details/52200722" target="_blank" rel="external">《Ngnix的基本学习-多进程和Apache的比较》</a></p><ul><li>Nginx 通过异步非阻塞的事件处理机制实现高并发。Apache 每个请求独占一个线程，非常消耗系统资源。</li><li>事件驱动适合于IO密集型服务(Nginx)，多进程或线程适合于CPU密集型服务(Apache)，所以Nginx适合做反向代理，而非web服务器使用。  </li></ul></li><li><p><a href="https://www.cnblogs.com/cunkouzh/p/5410154.html" target="_blank" rel="external">《nginx与Apache的对比以及优缺点》</a></p><ul><li>nginx只适合静态和反向代理，不适合处理动态请求。</li></ul></li></ul><h3 id="OpenResty"><a href="#OpenResty" class="headerlink" title="OpenResty"></a>OpenResty</h3><ul><li><a href="http://openresty.org/cn/" target="_blank" rel="external">官方网站</a></li><li><a href="http://www.linkedkeeper.com/detail/blog.action?bid=1034" target="_blank" rel="external">《浅谈 OpenResty》</a><ul><li>通过 Lua 模块可以在Nginx上进行开发。   </li></ul></li><li><a href="https://openresty.org/download/agentzh-nginx-tutorials-zhcn.html" target="_blank" rel="external">agentzh 的 Nginx 教程</a>  </li></ul><h3 id="Tengine"><a href="#Tengine" class="headerlink" title="Tengine"></a>Tengine</h3><ul><li><a href="http://tengine.taobao.org/" target="_blank" rel="external">官方网站</a>  </li></ul><h3 id="Apache-Httpd"><a href="#Apache-Httpd" class="headerlink" title="Apache Httpd"></a>Apache Httpd</h3><ul><li><a href="http://httpd.apache.org/" target="_blank" rel="external">官方网站</a></li></ul><h3 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h3><h4 id="架构原理"><a href="#架构原理" class="headerlink" title="架构原理"></a>架构原理</h4><ul><li><a href="https://www.cnblogs.com/hggen/p/6264475.html" target="_blank" rel="external">《TOMCAT原理详解及请求过程》</a></li><li><a href="https://www.cnblogs.com/crazylqy/p/4706223.html" target="_blank" rel="external">《Tomcat服务器原理详解》</a></li><li><p><a href="https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/" target="_blank" rel="external">《Tomcat 系统架构与设计模式,第 1 部分: 工作原理》</a></p></li><li><p><a href="https://blog.csdn.net/xlgen157387/article/details/79006434" target="_blank" rel="external">《四张图带你了解Tomcat系统架构》</a></p></li><li><p><a href="https://www.futurehosting.com/blog/jboss-vs-tomcat-choosing-a-java-application-server/" target="_blank" rel="external">《JBoss vs. Tomcat: Choosing A Java Application Server》</a></p><ul><li>Tomcat 是轻量级的 Serverlet 容器，没有实现全部 JEE 特性（比如持久化和事务处理），但可以通过其他组件代替，比如Spring。</li><li>Jboss 实现全部了JEE特性，软件开源免费、文档收费。</li></ul></li></ul><h4 id="调优方案"><a href="#调优方案" class="headerlink" title="调优方案"></a>调优方案</h4><ul><li><p><a href="https://www.cnblogs.com/sunfenqing/p/7339058.html" target="_blank" rel="external">《Tomcat 调优方案》</a></p><ul><li>启动NIO模式（或者APR）；调整线程池；禁用AJP连接器（Nginx+tomcat的架构，不需要AJP）； </li></ul></li><li><p><a href="http://blog.chinaunix.net/uid-20662363-id-3012760.html" target="_blank" rel="external">《tomcat http协议与ajp协议》</a></p></li><li><a href="http://dmouse.iteye.com/blog/1354527" target="_blank" rel="external">《AJP与HTTP比较和分析》</a><ul><li>AJP 协议（8009端口）用于降低和前端Server（如Apache，而且需要支持AJP协议）的连接数(前端)，通过长连接提高性能。</li><li>并发高时，AJP协议优于HTTP协议。</li></ul></li></ul><h3 id="Jetty"><a href="#Jetty" class="headerlink" title="Jetty"></a>Jetty</h3><ul><li><a href="https://www.ibm.com/developerworks/cn/java/j-lo-jetty/" target="_blank" rel="external">《Jetty 的工作原理以及与 Tomcat 的比较》</a></li><li><a href="https://blog.csdn.net/doutao6677/article/details/51957288" target="_blank" rel="external">《jetty和tomcat优势比较》</a><ul><li>架构比较:Jetty的架构比Tomcat的更为简单。</li><li>性能比较：Jetty和Tomcat性能方面差异不大，Jetty默认采用NIO结束在处理I/O请求上更占优势，Tomcat默认采用BIO处理I/O请求，Tomcat适合处理少数非常繁忙的链接，处理静态资源时性能较差。</li><li>其他方面：Jetty的应用更加快速，修改简单，对新的Servlet规范的支持较好;Tomcat 对JEE和Servlet 支持更加全面。 </li></ul></li></ul><h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><ul><li><a href="https://blog.csdn.net/clementad/article/details/48229243" target="_blank" rel="external">《缓存失效策略（FIFO 、LRU、LFU三种算法的区别）》</a></li></ul><h3 id="本地缓存"><a href="#本地缓存" class="headerlink" title="本地缓存"></a>本地缓存</h3><ul><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-er-pian-ff1a-feng-kuang-yuan-shi-ren/42-xing-neng-zhi-ben-di-huan-cun/421-ying-yong-ceng-ben-di-huan-cun/4211.html" target="_blank" rel="external">《HashMap本地缓存》</a></p></li><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-er-pian-ff1a-feng-kuang-yuan-shi-ren/42-xing-neng-zhi-ben-di-huan-cun/421-ying-yong-ceng-ben-di-huan-cun/4212-ehcache.html" target="_blank" rel="external">《EhCache本地缓存》</a></p><ul><li>堆内、堆外、磁盘三级缓存。</li><li>可按照缓存空间容量进行设置。</li><li>按照时间、次数等过期策略。</li></ul></li><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-er-pian-ff1a-feng-kuang-yuan-shi-ren/42-xing-neng-zhi-ben-di-huan-cun/421-ying-yong-ceng-ben-di-huan-cun/4213-guava-cache.html" target="_blank" rel="external">《Guava Cache》</a></p><ul><li>简单轻量、无堆外、磁盘缓存。</li></ul></li></ul><ul><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-er-pian-ff1a-feng-kuang-yuan-shi-ren/42-xing-neng-zhi-ben-di-huan-cun/422-fu-wu-duan-ben-di-huan-cun/nginx-ben-di-huan-cun.html" target="_blank" rel="external">《Nginx本地缓存》</a></p></li><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-er-pian-ff1a-feng-kuang-yuan-shi-ren/42-xing-neng-zhi-ben-di-huan-cun/422-fu-wu-duan-ben-di-huan-cun/4222-pagespeed.html" target="_blank" rel="external">《Pagespeed—懒人工具，服务器端加速》</a></p></li></ul><h2 id="客户端缓存"><a href="#客户端缓存" class="headerlink" title="客户端缓存"></a>客户端缓存</h2><ul><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-er-pian-ff1a-feng-kuang-yuan-shi-ren/42-xing-neng-zhi-ben-di-huan-cun/423-ke-hu-duan-huan-cun.html" target="_blank" rel="external">《浏览器端缓存》</a></p><ul><li>主要是利用 Cache-Control 参数。</li></ul></li><li><p><a href="https://mp.weixin.qq.com/s/qHm_dJBhVbv0pJs8Crp77w" target="_blank" rel="external">《H5 和移动端 WebView 缓存机制解析与实战》</a></p></li></ul><h2 id="服务端缓存"><a href="#服务端缓存" class="headerlink" title="服务端缓存"></a>服务端缓存</h2><h3 id="Web缓存"><a href="#Web缓存" class="headerlink" title="Web缓存"></a>Web缓存</h3><ul><li><a href="https://github.com/jiangwenyuan/nuster" target="_blank" rel="external">nuster</a> - nuster cache</li><li><a href="https://github.com/varnishcache/varnish-cache" target="_blank" rel="external">varnish</a> - varnish cache</li><li><a href="https://github.com/squid-cache/squid" target="_blank" rel="external">squid</a> - squid cache</li></ul><h3 id="Memcached"><a href="#Memcached" class="headerlink" title="Memcached"></a>Memcached</h3><ul><li><a href="http://www.runoob.com/Memcached/Memcached-tutorial.html" target="_blank" rel="external">《Memcached 教程》</a></li><li><a href="https://blog.csdn.net/chenleixing/article/details/47035453" target="_blank" rel="external">《深入理解Memcached原理》</a><ul><li>采用多路复用技术提高并发性。</li><li>slab分配算法： memcached给Slab分配内存空间，默认是1MB。分配给Slab之后 把slab的切分成大小相同的chunk，Chunk是用于缓存记录的内存空间，Chunk 的大小默认按照1.25倍的速度递增。好处是不会频繁申请内存，提高IO效率，坏处是会有一定的内存浪费。</li></ul></li><li><a href="https://www.jianshu.com/p/36e5cd400580" target="_blank" rel="external">《Memcached软件工作原理》</a></li><li><p><a href="http://zhihuzeye.com/archives/2361" target="_blank" rel="external">《Memcache技术分享：介绍、使用、存储、算法、优化、命中率》</a></p></li><li><p><a href="https://blog.csdn.net/liu251890347/article/details/37690045" target="_blank" rel="external">《memcache 中 add 、 set 、replace 的区别》</a></p><ul><li>区别在于当key存在还是不存在时，返回值是true和false的。</li></ul></li><li><p><a href="https://pan.baidu.com/s/1qX00Lti?errno=0&amp;errmsg=Auth%20Login%20Sucess&amp;&amp;bduss=&amp;ssnerror=0&amp;traceid=" target="_blank" rel="external"><strong>《memcached全面剖析》</strong></a></p></li></ul><h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><ul><li><a href="http://www.runoob.com/redis/redis-tutorial.html" target="_blank" rel="external">《Redis 教程》</a></li><li><a href="https://blog.csdn.net/wcf373722432/article/details/78678504" target="_blank" rel="external">《redis底层原理》</a><ul><li>使用 ziplist 存储链表，ziplist是一种压缩链表，它的好处是更能节省内存空间，因为它所存储的内容都是在连续的内存区域当中的。</li><li>使用 skiplist(跳跃表)来存储有序集合对象、查找上先从高Level查起、时间复杂度和红黑树相当，实现容易，无锁、并发性好。</li></ul></li><li><p><a href="http://doc.redisfans.com/topic/persistence.html" target="_blank" rel="external">《Redis持久化方式》</a></p><ul><li>RDB方式：定期备份快照，常用于灾难恢复。优点：通过fork出的进程进行备份，不影响主进程、RDB 在恢复大数据集时的速度比 AOF 的恢复速度要快。缺点：会丢数据。</li><li>AOF方式：保存操作日志方式。优点：恢复时数据丢失少，缺点：文件大，回复慢。</li><li>也可以两者结合使用。</li></ul></li><li><p><a href="https://blog.csdn.net/chunlongyu/article/details/53346436" target="_blank" rel="external">《分布式缓存–序列3–原子操作与CAS乐观锁》</a></p></li></ul><h4 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h4><ul><li><a href="https://blog.csdn.net/sunhuiliang85/article/details/73656830" target="_blank" rel="external">《Redis单线程架构》</a></li></ul><h4 id="回收策略"><a href="#回收策略" class="headerlink" title="回收策略"></a>回收策略</h4><ul><li><a href="https://blog.csdn.net/qq_29108585/article/details/63251491" target="_blank" rel="external">《redis的回收策略》</a></li></ul><h3 id="Tair"><a href="#Tair" class="headerlink" title="Tair"></a>Tair</h3><ul><li><a href="https://github.com/alibaba/tair" target="_blank" rel="external">官方网站</a></li><li><a href="http://blog.csdn.net/farphone/article/details/53522383" target="_blank" rel="external">《Tair和Redis的对比》</a></li><li>特点：可以配置备份节点数目，通过异步同步到备份节点</li><li>一致性Hash算法。</li><li>架构：和Hadoop 的设计思想类似，有Configserver，DataServer，Configserver 通过心跳来检测，Configserver也有主备关系。</li></ul><p>几种存储引擎:</p><ul><li>MDB，完全内存性，可以用来存储Session等数据。</li><li>Rdb（类似于Redis），轻量化，去除了aof之类的操作，支持Restfull操作</li><li>LDB（LevelDB存储引擎），持久化存储，LDB 作为rdb的持久化，google实现，比较高效，理论基础是LSM(Log-Structured-Merge Tree)算法，现在内存中修改数据，达到一定量时（和内存汇总的旧数据一同写入磁盘）再写入磁盘，存储更加高效，县比喻Hash算法。</li><li>Tair采用共享内存来存储数据，如果服务挂掉（非服务器），重启服务之后，数据亦然还在。</li></ul><h2 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h2><ul><li><p><a href="https://www.cnblogs.com/charlesblc/p/6045238.html" target="_blank" rel="external">《消息队列-推/拉模式学习 &amp; ActiveMQ及JMS学习》</a></p><ul><li>RabbitMQ 消费者默认是推模式（也支持拉模式）。</li><li>Kafka 默认是拉模式。</li><li>Push方式：优点是可以尽可能快地将消息发送给消费者，缺点是如果消费者处理能力跟不上，消费者的缓冲区可能会溢出。</li><li>Pull方式：优点是消费端可以按处理能力进行拉去，缺点是会增加消息延迟。</li></ul></li><li><p><a href="https://blog.csdn.net/yunfeng482/article/details/72856762" target="_blank" rel="external">《Kafka、RabbitMQ、RocketMQ等消息中间件的对比 —— 消息发送性能和区别》</a></p></li></ul><h3 id="消息总线"><a href="#消息总线" class="headerlink" title="消息总线"></a>消息总线</h3><p>消息总线相当于在消息队列之上做了一层封装，统一入口，统一管控、简化接入成本。</p><ul><li><a href="https://blog.csdn.net/yanghua_kobe/article/details/43877281" target="_blank" rel="external">《消息总线VS消息队列》</a></li></ul><h3 id="消息的顺序"><a href="#消息的顺序" class="headerlink" title="消息的顺序"></a>消息的顺序</h3><ul><li><a href="https://www.cnblogs.com/cjsblog/p/8267892.html" target="_blank" rel="external">《如何保证消费者接收消息的顺序》</a></li></ul><h3 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h3><p>支持事务，推拉模式都是支持、适合需要可靠性消息传输的场景。</p><ul><li><a href="https://blog.csdn.net/whoamiyang/article/details/54954780" target="_blank" rel="external">《RabbitMQ的应用场景以及基本原理介绍》</a></li><li><a href="https://www.jianshu.com/p/79ca08116d57" target="_blank" rel="external">《消息队列之 RabbitMQ》</a> </li><li><a href="https://blog.csdn.net/u013256816/article/details/55515234" target="_blank" rel="external">《RabbitMQ之消息确认机制（事务+Confirm）》</a></li></ul><h3 id="RocketMQ"><a href="#RocketMQ" class="headerlink" title="RocketMQ"></a>RocketMQ</h3><p>Java实现，推拉模式都是支持，吞吐量逊于Kafka。可以保证消息顺序。</p><ul><li><a href="https://www.jianshu.com/p/824066d70da8" target="_blank" rel="external">《RocketMQ 实战之快速入门》</a></li><li><a href="http://www.iocoder.cn/categories/RocketMQ/?vip&amp;architect-awesome" target="_blank" rel="external">《RocketMQ 源码解析》</a></li></ul><h3 id="ActiveMQ"><a href="#ActiveMQ" class="headerlink" title="ActiveMQ"></a>ActiveMQ</h3><p>纯Java实现，兼容JMS，可以内嵌于Java应用中。</p><ul><li><a href="https://www.cnblogs.com/wintersun/p/3962302.html" target="_blank" rel="external">《ActiveMQ消息队列介绍》</a></li></ul><h3 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h3><p>高吞吐量、采用拉模式。适合高IO场景，比如日志同步。</p><ul><li><a href="http://kafka.apache.org/" target="_blank" rel="external">官方网站</a></li><li><a href="https://blog.csdn.net/allthesametome/article/details/47362451" target="_blank" rel="external">《各消息队列对比，Kafka深度解析，众人推荐，精彩好文！》</a></li><li><a href="http://lxw1234.com/archives/2015/10/538.htm" target="_blank" rel="external">《Kafka分区机制介绍与示例》</a></li></ul><h3 id="Redis-消息推送"><a href="#Redis-消息推送" class="headerlink" title="Redis 消息推送"></a>Redis 消息推送</h3><p>生产者、消费者模式完全是客户端行为，list 和 拉模式实现，阻塞等待采用 blpop 指令。</p><ul><li><a href="https://blog.csdn.net/qq_34212276/article/details/78455004" target="_blank" rel="external">《Redis学习笔记之十：Redis用作消息队列》</a></li></ul><h3 id="ZeroMQ"><a href="#ZeroMQ" class="headerlink" title="ZeroMQ"></a>ZeroMQ</h3><p> TODO</p><h2 id="定时调度"><a href="#定时调度" class="headerlink" title="定时调度"></a>定时调度</h2><h3 id="单机定时调度"><a href="#单机定时调度" class="headerlink" title="单机定时调度"></a>单机定时调度</h3><ul><li><p><a href="https://www.cnblogs.com/shuaiqing/p/7742382.html" target="_blank" rel="external">《linux定时任务cron配置》</a></p></li><li><p><a href="https://my.oschina.net/daquan/blog/483305" target="_blank" rel="external">《Linux cron运行原理》</a></p><ul><li>fork 进程 + sleep 轮询</li></ul></li><li><p><a href="https://www.cnblogs.com/drift-ice/p/3817269.html" target="_blank" rel="external">《Quartz使用总结》</a></p></li><li><a href="https://blog.csdn.net/wenniuwuren/article/details/42082981/" target="_blank" rel="external">《Quartz源码解析 —- 触发器按时启动原理》</a></li><li><a href="https://www.jianshu.com/p/bab8e4e32952" target="_blank" rel="external">《quartz原理揭秘和源码解读》</a><ul><li>定时调度在 QuartzSchedulerThread 代码中，while()无限循环，每次循环取出时间将到的trigger，触发对应的job，直到调度器线程被关闭。</li></ul></li></ul><h3 id="分布式定时调度"><a href="#分布式定时调度" class="headerlink" title="分布式定时调度"></a>分布式定时调度</h3><ul><li><p><a href="https://blog.csdn.net/qq_16216221/article/details/70314337" target="_blank" rel="external">《这些优秀的国产分布式任务调度系统，你用过几个？》</a></p><ul><li>opencron、LTS、XXL-JOB、Elastic-Job、Uncode-Schedule、Antares</li></ul></li><li><p><a href="https://www.cnblogs.com/zhenyuyaodidiao/p/4755649.html" target="_blank" rel="external">《Quartz任务调度的基本实现原理》</a></p><ul><li>Quartz集群中，独立的Quartz节点并不与另一其的节点或是管理节点通信，而是通过相同的数据库表来感知到另一Quartz应用的 </li></ul></li><li><a href="http://www.iocoder.cn/categories/Elastic-Job-Lite/?vip&amp;architect-awesome" target="_blank" rel="external">《Elastic-Job-Lite 源码解析》</a></li><li><a href="http://www.iocoder.cn/categories/Elastic-Job-Cloud/?vip&amp;architect-awesome" target="_blank" rel="external">《Elastic-Job-Cloud 源码解析》</a></li></ul><h2 id="RPC"><a href="#RPC" class="headerlink" title="RPC"></a>RPC</h2><ul><li><p><a href="https://blog.csdn.net/top_code/article/details/54615853" target="_blank" rel="external">《从零开始实现RPC框架 - RPC原理及实现》</a></p><ul><li>核心角色：Server: 暴露服务的服务提供方、Client: 调用远程服务的服务消费方、Registry: 服务注册与发现的注册中心。</li></ul></li><li><p><a href="https://blog.csdn.net/testcs_dn/article/details/78050590" target="_blank" rel="external">《分布式RPC框架性能大比拼 dubbo、motan、rpcx、gRPC、thrift的性能比较》</a></p></li></ul><h3 id="Dubbo"><a href="#Dubbo" class="headerlink" title="Dubbo"></a>Dubbo</h3><ul><li><a href="http://dubbo.apache.org/" target="_blank" rel="external">官方网站</a></li><li><a href="https://www.cnblogs.com/steven520213/p/7606598.html" target="_blank" rel="external">dubbo实现原理简单介绍</a></li></ul><p><strong> SPI </strong><br>TODO</p><h3 id="Thrift"><a href="#Thrift" class="headerlink" title="Thrift"></a>Thrift</h3><ul><li><a href="http://thrift.apache.org/" target="_blank" rel="external">官方网站</a></li><li><a href="https://blog.csdn.net/kesonyk/article/details/50924489" target="_blank" rel="external">《Thrift RPC详解》</a><ul><li>支持多语言，通过中间语言定义接口。</li></ul></li></ul><h3 id="gRPC"><a href="#gRPC" class="headerlink" title="gRPC"></a>gRPC</h3><p>服务端可以认证加密，在外网环境下，可以保证数据安全。</p><ul><li><a href="https://grpc.io/" target="_blank" rel="external">官方网站</a></li><li><a href="https://www.cnblogs.com/LBSer/p/4853234.html" target="_blank" rel="external">《你应该知道的RPC原理》</a></li></ul><h2 id="数据库中间件"><a href="#数据库中间件" class="headerlink" title="数据库中间件"></a>数据库中间件</h2><h3 id="Sharding-Jdbc"><a href="#Sharding-Jdbc" class="headerlink" title="Sharding Jdbc"></a>Sharding Jdbc</h3><ul><li><a href="http://shardingjdbc.io/" target="_blank" rel="external">官网</a></li></ul><h2 id="日志系统"><a href="#日志系统" class="headerlink" title="日志系统"></a>日志系统</h2><h3 id="日志搜集"><a href="#日志搜集" class="headerlink" title="日志搜集"></a>日志搜集</h3><ul><li><a href="http://cjting.me/misc/build-log-system-with-elkb/" target="_blank" rel="external">《从零开始搭建一个ELKB日志收集系统》</a></li><li><a href="https://blog.csdn.net/lzw_2006/article/details/51280058" target="_blank" rel="external">《用ELK搭建简单的日志收集分析系统》</a></li><li><a href="https://www.cnblogs.com/beginmind/p/6058194.html" target="_blank" rel="external">《日志收集系统-探究》</a></li></ul><h2 id="配置中心"><a href="#配置中心" class="headerlink" title="配置中心"></a>配置中心</h2><ul><li><p><a href="https://github.com/ctripcorp/apollo" target="_blank" rel="external">Apollo - 携程开源的配置中心应用</a></p><ul><li>Spring Boot 和 Spring Cloud</li><li>支持推、拉模式更新配置</li><li>支持多种语言 </li></ul></li><li><p><a href="https://blog.csdn.net/u011320740/article/details/78742625" target="_blank" rel="external">《基于zookeeper实现统一配置管理》</a></p></li><li><p><a href="https://www.cnblogs.com/shamo89/p/8016908.html" target="_blank" rel="external">《 Spring Cloud Config 分布式配置中心使用教程》</a></p></li></ul><p>servlet 3.0 异步特性可用于配置中心的客户端</p><ul><li><a href="https://www.cnblogs.com/dogdogwang/p/7151866.html" target="_blank" rel="external">《servlet3.0 新特性——异步处理》</a></li></ul><h2 id="API-网关"><a href="#API-网关" class="headerlink" title="API 网关"></a>API 网关</h2><p>主要职责：请求转发、安全认证、协议转换、容灾。</p><ul><li><a href="http://yunlzheng.github.io/2017/03/14/the-things-about-api-gateway/" target="_blank" rel="external">《API网关那些儿》</a></li><li><p><a href="http://www.infoq.com/cn/news/2016/07/API-background-architecture-floo" target="_blank" rel="external">《谈API网关的背景、架构以及落地方案》</a></p></li><li><p><a href="https://blog.csdn.net/zhanglh046/article/details/78651993" target="_blank" rel="external">《使用Zuul构建API Gateway》</a></p></li><li><a href="http://www.iocoder.cn/categories/Spring-Cloud-Gateway/?vip&amp;architect-awesome" target="_blank" rel="external">《Spring Cloud Gateway 源码解析》</a></li><li><a href="https://mp.weixin.qq.com/s/LIq2CiXJQmmjBC0yvYLY5A" target="_blank" rel="external">《HTTP API网关选择之一Kong介绍》</a></li></ul><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h2><h3 id="OSI-七层协议"><a href="#OSI-七层协议" class="headerlink" title="OSI 七层协议"></a>OSI 七层协议</h3><ul><li><a href="https://www.cnblogs.com/Robin-YB/p/6668762.html" target="_blank" rel="external">《OSI七层协议模型、TCP/IP四层模型学习笔记》</a></li></ul><h3 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h3><ul><li><a href="https://www.cnblogs.com/onepixel/p/7092302.html" target="_blank" rel="external">《深入浅出 TCP/IP 协议》</a></li><li><a href="https://blog.csdn.net/whuslei/article/details/6667471/" target="_blank" rel="external">《TCP协议中的三次握手和四次挥手》</a></li></ul><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><ul><li><a href="https://www.cnblogs.com/wangning528/p/6388464.html" target="_blank" rel="external">《http协议详解(超详细)》</a></li></ul><h3 id="HTTP2-0"><a href="#HTTP2-0" class="headerlink" title="HTTP2.0"></a>HTTP2.0</h3><ul><li><a href="https://blog.csdn.net/zhuyiquan/article/details/69257126" target="_blank" rel="external">《HTTP 2.0 原理详细分析》</a></li><li><a href="https://blog.csdn.net/u012657197/article/details/77877840" target="_blank" rel="external">《HTTP2.0的基本单位为二进制帧》</a><ul><li>利用二进制帧负责传输。</li><li>多路复用。</li></ul></li></ul><h3 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h3><ul><li><p><a href="https://www.cnblogs.com/zhangshitong/p/6478721.html" target="_blank" rel="external">《https原理通俗了解》</a></p><ul><li>使用非对称加密协商加密算法</li><li>使用对称加密方式传输数据</li><li>使用第三方机构签发的证书，来加密公钥，用于公钥的安全传输、防止被中间人串改。</li></ul></li><li><p><a href="https://blog.csdn.net/enweitech/article/details/53213862" target="_blank" rel="external">《八大免费SSL证书-给你的网站免费添加Https安全加密》</a></p></li></ul><h2 id="网络模型"><a href="#网络模型" class="headerlink" title="网络模型"></a>网络模型</h2><ul><li><p><a href="http://blog.51cto.com/litaotao/1289790" target="_blank" rel="external">《web优化必须了解的原理之I/o的五种模型和web的三种工作模式》</a></p><ul><li>五种I/O模型：阻塞I/O，非阻塞I/O，I/O复用、事件(信号)驱动I/O、异步I/O，前四种I/O属于同步操作，I/O的第一阶段不同、第二阶段相同，最后的一种则属于异步操作。</li><li>三种 Web Server 工作方式：Prefork(多进程)、Worker方式(线程方式)、Event方式。</li></ul></li><li><p><a href="http://www.cnblogs.com/Anker/p/3265058.html" target="_blank" rel="external">《select、poll、epoll之间的区别总结》</a></p><ul><li>select，poll，epoll本质上都是同步I/O，因为他们都需要在读写事件就绪后自己负责进行读写，也就是说这个读写过程是阻塞的。</li><li>select 有打开文件描述符数量限制，默认1024（2048 for x64），100万并发，就要用1000个进程、切换开销大；poll采用链表结构，没有数量限制。</li><li>select，poll “醒着”的时候要遍历整个fd集合，而epoll在“醒着”的时候只要判断一下就绪链表是否为空就行了，通过回调机制节省大量CPU时间；select，poll每次调用都要把fd集合从用户态往内核态拷贝一次，而epoll只要一次拷贝。</li><li>poll会随着并发增加，性能逐渐下降，epoll采用红黑树结构，性能稳定，不会随着连接数增加而降低。</li></ul></li><li><p><a href="http://xingyunbaijunwei.blog.163.com/blog/static/76538067201241685556302/" target="_blank" rel="external">《select，poll，epoll比较  》</a></p><ul><li>在连接数少并且连接都十分活跃的情况下，select和poll的性能可能比epoll好，毕竟epoll的通知机制需要很多函数回调。</li></ul></li><li><p><a href="https://www.cnblogs.com/geason/p/5774096.html" target="_blank" rel="external">《深入理解Java NIO》</a></p><ul><li>NIO 是一种同步非阻塞的 IO 模型。同步是指线程不断轮询 IO 事件是否就绪，非阻塞是指线程在等待 IO 的时候，可以同时做其他任务</li></ul></li><li><p><a href="https://blog.csdn.net/skiof007/article/details/52873421" target="_blank" rel="external">《BIO与NIO、AIO的区别》</a></p></li><li><p><a href="https://blog.csdn.net/u013074465/article/details/46276967" target="_blank" rel="external">《两种高效的服务器设计模型：Reactor和Proactor模型》</a></p></li></ul><h3 id="Epoll"><a href="#Epoll" class="headerlink" title="Epoll"></a>Epoll</h3><ul><li><a href="https://www.cnblogs.com/fnlingnzb-learner/p/5835573.html" target="_blank" rel="external">《epoll使用详解（精髓）》</a></li></ul><h3 id="Java-NIO"><a href="#Java-NIO" class="headerlink" title="Java NIO"></a>Java NIO</h3><ul><li><a href="https://www.cnblogs.com/geason/p/5774096.html" target="_blank" rel="external">《深入理解Java NIO》</a></li><li><a href="https://blog.csdn.net/xidianliuy/article/details/51612676" target="_blank" rel="external">《Java NIO编写Socket服务器的一个例子》</a></li></ul><h3 id="kqueue"><a href="#kqueue" class="headerlink" title="kqueue"></a>kqueue</h3><ul><li><a href="http://www.cnblogs.com/luminocean/p/5631336.html" target="_blank" rel="external">《kqueue用法简介》</a></li></ul><h2 id="连接和短连接"><a href="#连接和短连接" class="headerlink" title="连接和短连接"></a>连接和短连接</h2><ul><li><a href="https://www.cnblogs.com/pangguoping/p/5571422.html" target="_blank" rel="external">《TCP/IP系列——长连接与短连接的区别》</a></li></ul><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><ul><li><a href="https://blog.csdn.net/excellentyuxiao/article/details/53390408" target="_blank" rel="external">《Netty原理剖析》</a><ul><li>Reactor 模式介绍。</li><li>Netty 是 Reactor 模式的一种实现。</li></ul></li></ul><h2 id="零拷贝（Zero-copy）"><a href="#零拷贝（Zero-copy）" class="headerlink" title="零拷贝（Zero-copy）"></a>零拷贝（Zero-copy）</h2><ul><li><a href="https://www.cnblogs.com/xys1228/p/6088805.html" target="_blank" rel="external">《对于 Netty ByteBuf 的零拷贝(Zero Copy) 的理解》</a><ul><li>多个物理分离的buffer，通过逻辑上合并成为一个，从而避免了数据在内存之间的拷贝。</li></ul></li></ul><h2 id="序列化-二进制协议"><a href="#序列化-二进制协议" class="headerlink" title="序列化(二进制协议)"></a>序列化(二进制协议)</h2><h3 id="Hessian"><a href="#Hessian" class="headerlink" title="Hessian"></a>Hessian</h3><ul><li><a href="https://www.cnblogs.com/happyday56/p/4268249.html" target="_blank" rel="external">《Hessian原理分析》</a><br>Binary-RPC;不仅仅是序列化</li></ul><h3 id="Protobuf"><a href="#Protobuf" class="headerlink" title="Protobuf"></a>Protobuf</h3><ul><li><a href="https://blog.csdn.net/antgan/article/details/52103966" target="_blank" rel="external">《Protobuf协议的Java应用例子》</a><br>Goolge出品、占用空间和效率完胜其他序列化类库，如Hessian；需要编写  .proto 文件。</li><li><p><a href="https://worktile.com/tech/share/prototol-buffers" target="_blank" rel="external">《Protocol Buffers序列化协议及应用》</a></p><pre><code>* 关于协议的解释；缺点：可读性差;</code></pre></li><li><p><a href="https://blog.csdn.net/eric520zenobia/article/details/53766571" target="_blank" rel="external">《简单的使用 protobuf 和 protostuff》</a></p><ul><li>protostuff 的好处是不用写 .proto 文件，Java 对象直接就可以序列化。</li></ul></li></ul><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="基础理论"><a href="#基础理论" class="headerlink" title="基础理论"></a>基础理论</h2><h3 id="数据库设计的三大范式"><a href="#数据库设计的三大范式" class="headerlink" title="数据库设计的三大范式"></a>数据库设计的三大范式</h3><ul><li><a href="https://www.cnblogs.com/waj6511988/p/7027127.html" target="_blank" rel="external">《数据库的三大范式以及五大约束》</a><ul><li>第一范式：数据表中的每一列（每个字段）必须是不可拆分的最小单元，也就是确保每一列的原子性；</li><li>第二范式（2NF）：满足1NF后，要求表中的所有列，都必须依赖于主键，而不能有任何一列与主键没有关系，也就是说一个表只描述一件事情；</li><li>第三范式：必须先满足第二范式（2NF），要求：表中的每一列只与主键直接相关而不是间接相关，（表中的每一列只能依赖于主键）；</li></ul></li></ul><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><ul><li><p><a href="http://www.admin10000.com/document/5372.html" target="_blank" rel="external">《MySQL的InnoDB索引原理详解》</a></p></li><li><p><a href="https://blog.csdn.net/xifeijian/article/details/20316775" target="_blank" rel="external">《MySQL存储引擎－－MyISAM与InnoDB区别》</a></p><ul><li>两种类型最主要的差别就是Innodb 支持事务处理与外键和行级锁</li></ul></li><li><p><a href="https://www.2cto.com/database/201211/172380.html" target="_blank" rel="external">《myisam和innodb索引实现的不同》</a></p></li></ul><h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h3><ul><li><a href="https://my.oschina.net/kailuncen/blog/1504217" target="_blank" rel="external">《一篇文章带你读懂Mysql和InnoDB》</a></li></ul><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><ul><li><p><a href="http://vdisk.weibo.com/s/muWOT" target="_blank" rel="external">《MySQL36条军规》</a></p></li><li><p><a href="https://www.cnblogs.com/zhouyusheng/p/8038224.html" target="_blank" rel="external">《MYSQL性能优化的最佳20+条经验》</a></p></li><li><a href="https://blog.csdn.net/when_less_is_more/article/details/70187459" target="_blank" rel="external">《SQL优化之道》</a></li><li><a href="https://www.cnblogs.com/sivkun/p/7518540.html" target="_blank" rel="external">《mysql数据库死锁的产生原因及解决办法》</a></li><li><a href="https://blog.csdn.net/monkey_d_feilong/article/details/52291556" target="_blank" rel="external">《导致索引失效的可能情况》</a></li><li><a href="https://blog.csdn.net/zy_281870667/article/details/51604540" target="_blank" rel="external">《 MYSQL分页limit速度太慢优化方法》</a><ul><li>原则上就是缩小扫描范围。</li></ul></li></ul><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><h4 id="聚集索引-非聚集索引"><a href="#聚集索引-非聚集索引" class="headerlink" title="聚集索引, 非聚集索引"></a>聚集索引, 非聚集索引</h4><ul><li><a href="https://blog.csdn.net/no_endless/article/details/77073549" target="_blank" rel="external">《MySQL 聚集索引/非聚集索引简述》</a></li><li><a href="https://www.cnblogs.com/zlcxbb/p/5757245.html" target="_blank" rel="external">《MyISAM和InnoDB的索引实现》</a></li></ul><p>MyISAM 是非聚集，InnoDB 是聚集</p><h4 id="复合索引"><a href="#复合索引" class="headerlink" title="复合索引"></a>复合索引</h4><ul><li><a href="https://www.cnblogs.com/summer0space/p/7247778.html" target="_blank" rel="external">《复合索引的优点和注意事项》</a></li></ul><h4 id="自适应哈希索引-AHI"><a href="#自适应哈希索引-AHI" class="headerlink" title="自适应哈希索引(AHI)"></a>自适应哈希索引(AHI)</h4><ul><li><a href="https://blog.csdn.net/Linux_ever/article/details/62043708" target="_blank" rel="external">《InnoDB存储引擎——自适应哈希索引》</a></li></ul><h3 id="explain"><a href="#explain" class="headerlink" title="explain"></a>explain</h3><ul><li><a href="https://segmentfault.com/a/1190000008131735" target="_blank" rel="external">《MySQL 性能优化神器 Explain 使用分析》</a></li></ul><h2 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a>NoSQL</h2><h3 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h3><ul><li><a href="http://www.runoob.com/mongodb/mongodb-tutorial.html" target="_blank" rel="external">MongoDB 教程</a></li><li><a href="http://mxdxm.iteye.com/blog/2093603" target="_blank" rel="external">《Mongodb相对于关系型数据库的优缺点》</a><ul><li>优点：弱一致性（最终一致），更能保证用户的访问速度；内置GridFS，支持大容量的存储；Schema-less 数据库，不用预先定义结构；内置Sharding；相比于其他NoSQL，第三方支持丰富；性能优越；</li><li>缺点：mongodb不支持事务操作；mongodb占用空间过大；MongoDB没有如MySQL那样成熟的维护工具，这对于开发和IT运营都是个值得注意的地方；</li></ul></li></ul><h3 id="Hbase"><a href="#Hbase" class="headerlink" title="Hbase"></a>Hbase</h3><ul><li><a href="http://www.thebigdata.cn/HBase/35831.html" target="_blank" rel="external">《简明 HBase 入门教程（开篇）》</a></li><li><a href="https://www.cnblogs.com/qiaoyihang/p/6246424.html" target="_blank" rel="external">《深入学习HBase架构原理》</a></li><li><a href="https://blog.csdn.net/youzhouliu/article/details/67632882" target="_blank" rel="external">《传统的行存储和（HBase）列存储的区别》</a></li></ul><ul><li><p><a href="https://blog.csdn.net/lifuxiangcaohui/article/details/39891099" target="_blank" rel="external">《Hbase与传统数据库的区别》</a></p><ul><li>空数据不存储，节省空间，且适用于并发。</li></ul></li><li><p><a href="https://blog.csdn.net/u014091123/article/details/73163088" target="_blank" rel="external">《HBase Rowkey设计》</a></p><ul><li>rowkey 按照字典顺序排列，便于批量扫描。</li><li>通过散列可以避免热点。</li></ul></li></ul><h1 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h1><h2 id="搜索引擎原理"><a href="#搜索引擎原理" class="headerlink" title="搜索引擎原理"></a>搜索引擎原理</h2><ul><li><a href="https://www.jianshu.com/p/0193dc44135b" target="_blank" rel="external">《倒排索引–搜索引擎入门》</a></li></ul><h2 id="Lucene"><a href="#Lucene" class="headerlink" title="Lucene"></a>Lucene</h2><ul><li><a href="https://www.cnblogs.com/rodge-run/p/6551152.html" target="_blank" rel="external">《Lucene入门简介》</a></li></ul><h2 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h2><ul><li><a href="https://blog.csdn.net/laoyang360/article/details/52244917" target="_blank" rel="external">《Elasticsearch学习，请先看这一篇！》</a></li><li><a href="https://blog.csdn.net/cyony/article/details/65437708" target="_blank" rel="external">《Elasticsearch索引原理》</a></li></ul><h2 id="Solr"><a href="#Solr" class="headerlink" title="Solr"></a>Solr</h2><ul><li><a href="https://blog.csdn.net/u011936655/article/details/51960005" target="_blank" rel="external">《 Apache Solr入门教程》</a></li><li><a href="https://blog.csdn.net/convict_eva/article/details/53537837" target="_blank" rel="external">《elasticsearch与solr比较》</a></li></ul><h2 id="sphinx"><a href="#sphinx" class="headerlink" title="sphinx"></a>sphinx</h2><ul><li><a href="http://blog.jobbole.com/101672/" target="_blank" rel="external">《Sphinx 的介绍和原理探索》</a></li></ul><h1 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h1><h2 id="性能优化方法论"><a href="#性能优化方法论" class="headerlink" title="性能优化方法论"></a>性能优化方法论</h2><ul><li><p><a href="https://blog.csdn.net/huangwenyi1010/article/details/72673447?ref=myread" target="_blank" rel="external">《15天的性能优化工作，5方面的调优经验》</a></p><ul><li>代码层面、业务层面、数据库层面、服务器层面、前端优化。</li></ul></li><li><p><a href="https://blog.csdn.net/tenglizhe/article/details/44563135" target="_blank" rel="external">《系统性能优化的几个方面》</a></p></li></ul><h2 id="容量评估"><a href="#容量评估" class="headerlink" title="容量评估"></a>容量评估</h2><ul><li><a href="https://blog.csdn.net/u012528360/article/details/70054156" target="_blank" rel="external">《联网性能与容量评估的方法论和典型案例》</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651959542&amp;idx=1&amp;sn=2494bbea9a855e0e1c3ccd6d2562a600&amp;scene=21#wechat_redirect" target="_blank" rel="external">《互联网架构，如何进行容量设计？》</a><ul><li>评估总访问量、评估平均访问量QPS、评估高峰QPS、评估系统、单机极限QPS</li></ul></li></ul><h2 id="CDN-网络"><a href="#CDN-网络" class="headerlink" title="CDN 网络"></a>CDN 网络</h2><ul><li><a href="https://www.cnblogs.com/wxiaona/p/5867685.html" target="_blank" rel="external">《CDN加速原理》</a></li><li><a href="https://www.zhihu.com/question/20536932" target="_blank" rel="external">《国内有哪些比较好的 CDN？》</a></li></ul><h2 id="连接池"><a href="#连接池" class="headerlink" title="连接池"></a>连接池</h2><ul><li><a href="https://blog.csdn.net/fysuccess/article/details/66972554" target="_blank" rel="external">《主流Java数据库连接池比较与开发配置实战》</a></li></ul><h2 id="性能调优"><a href="#性能调优" class="headerlink" title="性能调优"></a>性能调优</h2><ul><li><a href="https://blog.csdn.net/yethyeth/article/details/73266455" target="_blank" rel="external">《九大Java性能调试工具，必备至少一款》</a></li></ul><h1 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h1><h2 id="流式计算"><a href="#流式计算" class="headerlink" title="流式计算"></a>流式计算</h2><h3 id="Storm"><a href="#Storm" class="headerlink" title="Storm"></a>Storm</h3><ul><li><a href="http://storm.apache.org/" target="_blank" rel="external">官方网站</a></li><li><a href="https://blog.csdn.net/uisoul/article/details/77989927" target="_blank" rel="external">《最详细的Storm入门教程》</a></li></ul><h3 id="Flink"><a href="#Flink" class="headerlink" title="Flink"></a>Flink</h3><ul><li><a href="https://blog.csdn.net/lisi1129/article/details/54844919" target="_blank" rel="external">《Flink之一 Flink基本原理介绍》</a></li></ul><h3 id="Kafka-Stream"><a href="#Kafka-Stream" class="headerlink" title="Kafka Stream"></a>Kafka Stream</h3><ul><li><a href="https://yq.aliyun.com/articles/58382" target="_blank" rel="external">《Kafka Stream调研：一种轻量级流计算模式》</a></li></ul><h3 id="应用场景-1"><a href="#应用场景-1" class="headerlink" title="应用场景"></a>应用场景</h3><p>例如：</p><ul><li>广告相关实时统计；</li><li>推荐系统用户画像标签实时更新；</li><li>线上服务健康状况实时监测；</li><li>实时榜单；</li><li>实时数据统计。</li></ul><h2 id="Hadoop"><a href="#Hadoop" class="headerlink" title="Hadoop"></a>Hadoop</h2><ul><li><a href="https://blog.csdn.net/houbin0912/article/details/72967178" target="_blank" rel="external">《用通俗易懂的话说下hadoop是什么,能做什么》</a></li><li><a href="http://gitbook.cn/books/5954c9600326c7705af8a92a/index.html" target="_blank" rel="external">《史上最详细的Hadoop环境搭建》</a></li></ul><h3 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h3><ul><li><a href="https://segmentfault.com/a/1190000011575458" target="_blank" rel="external">《【Hadoop学习】HDFS基本原理》</a></li></ul><h3 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h3><ul><li><a href="https://blog.csdn.net/oppo62258801/article/details/72884633" target="_blank" rel="external">《用通俗易懂的大白话讲解Map/Reduce原理》</a></li><li><a href="https://blog.csdn.net/foye12/article/details/78358292" target="_blank" rel="external">《 简单的map-reduce的java例子》</a></li></ul><h3 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h3><ul><li><a href="http://www.cnblogs.com/codeOfLife/p/5492740.html" target="_blank" rel="external">《初步掌握Yarn的架构及原理》</a></li></ul><h2 id="Spark"><a href="#Spark" class="headerlink" title="Spark"></a>Spark</h2><ul><li><a href="http://www.cnblogs.com/tgzhu/p/5818374.html" target="_blank" rel="external">《Spark(一): 基本架构及原理》</a></li></ul><h1 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h1><h2 id="web-安全"><a href="#web-安全" class="headerlink" title="web 安全"></a>web 安全</h2><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><ul><li><a href="https://blog.csdn.net/qq_21956483/article/details/54377947" target="_blank" rel="external">《xss攻击原理与解决方法》</a><h3 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h3></li><li><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/641-web-an-quan-fang-fan/6412-csrf.html" target="_blank" rel="external">《CSRF原理及防范》</a></li></ul><h3 id="SQL-注入"><a href="#SQL-注入" class="headerlink" title="SQL 注入"></a>SQL 注入</h3><ul><li><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/641-web-an-quan-fang-fan/6413-sql-zhu-ru.html" target="_blank" rel="external">《SQL注入》</a></li></ul><h3 id="Hash-Dos"><a href="#Hash-Dos" class="headerlink" title="Hash Dos"></a>Hash Dos</h3><ul><li><a href="http://www.freebuf.com/articles/web/14199.html" target="_blank" rel="external">《邪恶的JAVA HASH DOS攻击》</a><ul><li>利用JsonObject 上传大Json，JsonObject 底层使用HashMap；不同的数据产生相同的hash值，使得构建Hash速度变慢，耗尽CPU。</li></ul></li><li><a href="http://blog.it2048.cn/article_hash-collision.html" target="_blank" rel="external">《一种高级的DoS攻击-Hash碰撞攻击》</a></li><li><a href="http://www.iteye.com/news/23939/" target="_blank" rel="external">《关于Hash Collision DoS漏洞：解析与解决方案》</a></li></ul><h3 id="脚本注入"><a href="#脚本注入" class="headerlink" title="脚本注入"></a>脚本注入</h3><ul><li><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/641-web-an-quan-fang-fan/6414-shang-chuan-wen-jian-guo-lv.html" target="_blank" rel="external">《上传文件漏洞原理及防范》</a></li></ul><h3 id="漏洞扫描工具"><a href="#漏洞扫描工具" class="headerlink" title="漏洞扫描工具"></a>漏洞扫描工具</h3><ul><li><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/6421-dvwa.html" target="_blank" rel="external">《DVWA》</a></li><li><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/w3af.html" target="_blank" rel="external">W3af</a></li><li><a href="https://blog.csdn.net/xygg0801/article/details/53610640" target="_blank" rel="external">OpenVAS详解</a></li></ul><h3 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h3><ul><li><p><a href="https://blog.csdn.net/niaonao/article/details/51112686" target="_blank" rel="external">《验证码原理分析及实现》</a></p></li><li><p><a href="https://my.oschina.net/jiangbianwanghai/blog/1031031" target="_blank" rel="external">《详解滑动验证码的实现原理》</a></p><ul><li>滑动验证码是根据人在滑动滑块的响应时间，拖拽速度，时间，位置，轨迹，重试次数等来评估风险。</li></ul></li><li><p><a href="https://www.cnblogs.com/xcj26/p/5242758.html" target="_blank" rel="external">《淘宝滑动验证码研究》</a></p></li></ul><h2 id="DDoS-防范"><a href="#DDoS-防范" class="headerlink" title="DDoS 防范"></a>DDoS 防范</h2><ul><li><a href="http://netsecurity.51cto.com/art/201601/503799.htm" target="_blank" rel="external">《学习手册：DDoS的攻击方式及防御手段》</a></li><li><a href="http://netsecurity.51cto.com/art/201406/442756.htm" target="_blank" rel="external">《免费DDoS攻击测试工具大合集》</a></li></ul><h2 id="用户隐私信息保护"><a href="#用户隐私信息保护" class="headerlink" title="用户隐私信息保护"></a>用户隐私信息保护</h2><ol><li>用户密码非明文保存，加动态salt。</li><li>身份证号，手机号如果要显示，用 “*” 替代部分字符。</li><li>联系方式在的显示与否由用户自己控制。</li><li>TODO</li></ol><ul><li><a href="https://zhidao.baidu.com/question/1988017976673661587.html" target="_blank" rel="external">《个人隐私包括哪些》</a></li><li><p><a href="https://www.zhihu.com/question/20137108" target="_blank" rel="external">《在互联网上，隐私的范围包括哪些？》</a></p></li><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/642-shu-ju-jia-mi/6425-jia-mi-chang-jing-ff1a-yong-hu-mi-ma-bao-cun.html" target="_blank" rel="external">《用户密码保存》</a></p></li></ul><h2 id="序列化漏洞"><a href="#序列化漏洞" class="headerlink" title="序列化漏洞"></a>序列化漏洞</h2><ul><li><a href="https://blog.chaitin.cn/2015-11-11_java_unserialize_rce/" target="_blank" rel="external">《Lib之过？Java反序列化漏洞通用利用分析》</a></li></ul><h2 id="加密解密"><a href="#加密解密" class="headerlink" title="加密解密"></a>加密解密</h2><h3 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h3><ul><li><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/642-shu-ju-jia-mi/6421-chang-jian-dui-cheng-jia-mi-suan-fa.html" target="_blank" rel="external">《常见对称加密算法》</a><ul><li>DES、3DES、Blowfish、AES</li><li>DES 采用 56位秘钥，Blowfish 采用1到448位变长秘钥，AES 128，192和256位长度的秘钥。</li><li>DES 秘钥太短（只有56位）算法目前已经被 AES 取代，并且 AES 有硬件加速，性能很好。</li></ul></li></ul><h3 id="哈希算法"><a href="#哈希算法" class="headerlink" title="哈希算法"></a>哈希算法</h3><ul><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/642-shu-ju-jia-mi/6422-chang-jian-ha-xi-suan-fa-and-hmac.html" target="_blank" rel="external">《常用的哈希算法》</a></p><ul><li>MD5 和 SHA-1 已经不再安全，已被弃用。</li><li>目前 SHA-256 是比较安全的。</li></ul></li><li><p><a href="https://blog.csdn.net/zhangruhong168/article/details/78033202" target="_blank" rel="external">《基于Hash摘要签名的公网URL签名验证设计方案》</a></p></li></ul><h3 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h3><ul><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/642-shu-ju-jia-mi/6424-chang-yong-fei-dui-cheng-jia-mi-suan-fa.html" target="_blank" rel="external">《常见非对称加密算法》</a></p><ul><li>RSA、DSA、ECDSA(螺旋曲线加密算法)</li><li>和 RSA 不同的是 DSA 仅能用于数字签名，不能进行数据加密解密，其安全性和RSA相当，但其性能要比RSA快。</li><li><p>256位的ECC秘钥的安全性等同于3072位的RSA秘钥。</p><p>  <a href="http://baijiahao.baidu.com/s?id=1578348858092033763&amp;wfr=spider&amp;for=pc" target="_blank" rel="external">《区块链的加密技术》</a>    </p></li></ul></li></ul><h2 id="服务器安全"><a href="#服务器安全" class="headerlink" title="服务器安全"></a>服务器安全</h2><ul><li><a href="http://www.freebuf.com/articles/system/121540.html" target="_blank" rel="external">《Linux强化论：15步打造一个安全的Linux服务器》</a></li></ul><h2 id="数据安全"><a href="#数据安全" class="headerlink" title="数据安全"></a>数据安全</h2><h3 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h3><p>TODO</p><h2 id="网络隔离"><a href="#网络隔离" class="headerlink" title="网络隔离"></a>网络隔离</h2><h3 id="内外网分离"><a href="#内外网分离" class="headerlink" title="内外网分离"></a>内外网分离</h3><p>TODO</p><h3 id="登录跳板机"><a href="#登录跳板机" class="headerlink" title="登录跳板机"></a>登录跳板机</h3><p>在内外环境中通过跳板机登录到线上主机。</p><ul><li><a href="http://blog.51cto.com/zero01/2062618" target="_blank" rel="external">《搭建简易堡垒机》</a></li></ul><h2 id="授权、认证"><a href="#授权、认证" class="headerlink" title="授权、认证"></a>授权、认证</h2><h3 id="RBAC"><a href="#RBAC" class="headerlink" title="RBAC"></a>RBAC</h3><ul><li><a href="https://www.cnblogs.com/zq8024/p/5003050.html" target="_blank" rel="external">《基于组织角色的权限设计》</a></li><li><a href="https://www.cnblogs.com/shijiaqi1066/p/3793894.html" target="_blank" rel="external">《权限系统与RBAC模型概述》</a></li><li><a href="https://blog.csdn.net/he90227/article/details/38663553" target="_blank" rel="external">《Spring整合Shiro做权限控制模块详细案例分析》</a></li></ul><h3 id="OAuth2-0"><a href="#OAuth2-0" class="headerlink" title="OAuth2.0"></a>OAuth2.0</h3><ul><li><a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html" target="_blank" rel="external">《理解OAuth 2.0》</a></li><li><a href="https://www.cnblogs.com/flashsun/p/7424071.html" target="_blank" rel="external">《一张图搞定OAuth2.0》</a></li></ul><h3 id="双因素认证（2FA）"><a href="#双因素认证（2FA）" class="headerlink" title="双因素认证（2FA）"></a>双因素认证（2FA）</h3><p>2FA - Two-factor authentication，用于加强登录验证</p><p>常用做法是 登录密码 + 手机验证码（或者令牌Key，类似于与网银的 USB key）</p><ul><li>【《双因素认证（2FA）教程》】(<a href="http://www.ruanyifeng.com/blog/2017/11/2fa-tutorial.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2017/11/2fa-tutorial.html</a>)</li></ul><h3 id="单点登录-SSO"><a href="#单点登录-SSO" class="headerlink" title="单点登录(SSO)"></a>单点登录(SSO)</h3><ul><li><p><a href="https://www.cnblogs.com/ywlaker/p/6113927.html" target="_blank" rel="external">《单点登录原理与简单实现》</a></p></li><li><p><a href="https://github.com/apereo/cas" target="_blank" rel="external">CAS单点登录框架</a></p></li></ul><h1 id="常用开源框架"><a href="#常用开源框架" class="headerlink" title="常用开源框架"></a>常用开源框架</h1><h2 id="开源协议"><a href="#开源协议" class="headerlink" title="开源协议"></a>开源协议</h2><ul><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/chapter1/di-yi-zhang-ff1a-zhun-bei-qi-cheng/12-guan-yu-kai-yuan/123-kai-yuan-xie-yi-de-xuan-ze.html" target="_blank" rel="external">《开源协议的选择》</a></p></li><li><p><a href="http://choosealicense.online/" target="_blank" rel="external">如何选择一个开源软件协议</a></p></li></ul><h2 id="日志框架"><a href="#日志框架" class="headerlink" title="日志框架"></a>日志框架</h2><h3 id="Log4j、Log4j2"><a href="#Log4j、Log4j2" class="headerlink" title="Log4j、Log4j2"></a>Log4j、Log4j2</h3><ul><li><a href="https://blog.csdn.net/u012422446/article/details/51199724" target="_blank" rel="external">《log4j 详细讲解》</a></li><li><a href="https://blog.csdn.net/vbirdbest/article/details/71751835" target="_blank" rel="external">《log4j2 实际使用详解》</a></li><li><a href="https://my.oschina.net/OutOfMemory/blog/789267" target="_blank" rel="external">《Log4j1,Logback以及Log4j2性能测试对比》</a><ul><li>Log4J 异步日志性能优异。 </li></ul></li></ul><h3 id="Logback"><a href="#Logback" class="headerlink" title="Logback"></a>Logback</h3><ul><li><a href="https://blog.csdn.net/rulon147/article/details/52620541" target="_blank" rel="external">《最全LogBack 详解、含java案例和配置说明》</a></li></ul><h2 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h2><ul><li><a href="https://blog.csdn.net/sinat_34093604/article/details/53082000" target="_blank" rel="external">《ORM框架使用优缺点》</a><ul><li>主要目的是为了提高开发效率。 </li></ul></li></ul><p><strong>MyBatis：</strong></p><ul><li><p><a href="https://www.cnblogs.com/winclpt/articles/7511672.html" target="_blank" rel="external">《mybatis缓存机制详解》</a></p><ul><li>一级缓存是SqlSession级别的缓存，缓存的数据只在SqlSession内有效</li><li>二级缓存是mapper级别的缓存，同一个namespace公用这一个缓存，所以对SqlSession是共享的；使用 LRU 机制清理缓存，通过 cacheEnabled 参数开启。  </li></ul></li><li><p><a href="https://blog.csdn.net/baidu_32877851/article/details/53959268" target="_blank" rel="external">《MyBatis学习之代码生成器Generator》</a></p></li></ul><h2 id="网络框架"><a href="#网络框架" class="headerlink" title="网络框架"></a>网络框架</h2><p>TODO</p><h2 id="Web-框架"><a href="#Web-框架" class="headerlink" title="Web 框架"></a>Web 框架</h2><h3 id="Spring-家族"><a href="#Spring-家族" class="headerlink" title="Spring 家族"></a>Spring 家族</h3><p><strong>Spring</strong></p><ul><li><a href="https://www.w3cschool.cn/wkspring/" target="_blank" rel="external">Spring 简明教程</a></li></ul><p><strong>Spring Boot</strong></p><ul><li><a href="http://projects.spring.io/spring-boot/" target="_blank" rel="external">官方网站</a></li><li><a href="http://blog.didispace.com/Spring-Boot%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/" target="_blank" rel="external">《Spring Boot基础教程》</a></li></ul><p><strong>Spring Cloud</strong></p><ul><li><a href="http://springboot.fun/" target="_blank" rel="external">Spring Boot 中文索引站</a></li><li><a href="https://springcloud.cc/" target="_blank" rel="external">Spring Cloud 中文文档</a></li><li><a href="http://blog.didispace.com/Spring-Cloud%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/" target="_blank" rel="external">《Spring Cloud基础教程》</a></li></ul><h2 id="工具框架"><a href="#工具框架" class="headerlink" title="工具框架"></a>工具框架</h2><ul><li><a href="https://www.cnblogs.com/crazylqy/p/4872236.html" target="_blank" rel="external">《Apache Commons 工具类介绍及简单使用》</a></li><li><a href="http://ifeve.com/google-guava/" target="_blank" rel="external">《Google guava 中文教程》</a></li></ul><h1 id="分布式设计"><a href="#分布式设计" class="headerlink" title="分布式设计"></a>分布式设计</h1><h2 id="扩展性设计"><a href="#扩展性设计" class="headerlink" title="扩展性设计"></a>扩展性设计</h2><ul><li><p><a href="https://blog.csdn.net/hemin1003/article/details/53633926" target="_blank" rel="external">《架构师不可不知的十大可扩展架构》</a></p><ul><li>总结下来，通用的套路就是分布、缓存及异步处理。 </li></ul></li><li><p><a href="https://yq.aliyun.com/articles/38119" target="_blank" rel="external">《可扩展性设计之数据切分》</a></p><ul><li>水平切分+垂直切分</li><li>利用中间件进行分片如，MySQL Proxy。</li><li>利用分片策略进行切分，如按照ID取模。 </li></ul></li><li><p><a href="https://blog.csdn.net/deniro_li/article/details/78458306" target="_blank" rel="external">《说说如何实现可扩展性的大型网站架构》</a></p><ul><li>分布式服务+消息队列。</li></ul></li><li><p><a href="https://blog.csdn.net/chaofanwei/article/details/29191073" target="_blank" rel="external">《大型网站技术架构（七）–网站的可扩展性架构》</a></p></li></ul><h2 id="稳定性-amp-高可用"><a href="#稳定性-amp-高可用" class="headerlink" title="稳定性 &amp; 高可用"></a>稳定性 &amp; 高可用</h2><ul><li><a href="https://blog.csdn.net/hustspy1990/article/details/78008324" target="_blank" rel="external">《系统设计：关于高可用系统的一些技术方案》</a><ul><li>可扩展：水平扩展、垂直扩展。 通过冗余部署，避免单点故障。</li><li>隔离：避免单一业务占用全部资源。避免业务之间的相互影响 2. 机房隔离避免单点故障。</li><li>解耦：降低维护成本，降低耦合风险。减少依赖，减少相互间的影响。</li><li>限流：滑动窗口计数法、漏桶算法、令牌桶算法等算法。遇到突发流量时，保证系统稳定。</li><li>降级：紧急情况下释放非核心功能的资源。牺牲非核心业务，保证核心业务的高可用。</li><li>熔断：异常情况超出阈值进入熔断状态，快速失败。减少不稳定的外部依赖对核心服务的影响。</li><li>自动化测试：通过完善的测试，减少发布引起的故障。</li><li>灰度发布：灰度发布是速度与安全性作为妥协，能够有效减少发布故障。</li></ul></li></ul><ul><li><a href="https://coolshell.cn/articles/17459.html" target="_blank" rel="external">《关于高可用的系统》</a><ul><li>设计原则：数据不丢(持久化)；服务高可用(服务副本)；绝对的100%高可用很难，目标是做到尽可能多的9，如99.999%（全年累计只有5分钟）。     </li></ul></li></ul><h3 id="硬件负载均衡"><a href="#硬件负载均衡" class="headerlink" title="硬件负载均衡"></a>硬件负载均衡</h3><ul><li><p><a href="https://www.cnblogs.com/wuyun-blog/p/6186198.html" target="_blank" rel="external">《转！！负载均衡器技术Nginx和F5的优缺点对比》</a></p><ul><li>主要是和F5对比。</li></ul></li><li><p><a href="https://www.cnblogs.com/lcword/p/5773296.html" target="_blank" rel="external">《软/硬件负载均衡产品 你知多少？》</a></p></li></ul><h3 id="软件负载均衡"><a href="#软件负载均衡" class="headerlink" title="软件负载均衡"></a>软件负载均衡</h3><ul><li><a href="https://www.cnblogs.com/tianzhiliang/articles/2317808.html" target="_blank" rel="external">《几种负载均衡算法》</a><br>  轮寻、权重、负载、最少连接、QoS</li><li><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/611-dns-fang-shi.html" target="_blank" rel="external">《DNS负载均衡》</a><ul><li>配置简单，更新速度慢。 </li></ul></li><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/613-nginx-fu-zai-jun-heng.html" target="_blank" rel="external">《Nginx负载均衡》</a></p><ul><li>简单轻量、学习成本低；主要适用于web应用。</li></ul></li><li><p><a href="https://www.cnblogs.com/edisonchou/p/4281978.html" target="_blank" rel="external">《借助LVS+Keepalived实现负载均衡 》</a></p><ul><li>配置比较负载、只支持到4层，性能较高。</li></ul></li><li><p><a href="http://www.ttlsa.com/linux/haproxy-study-tutorial/" target="_blank" rel="external">《HAProxy用法详解 全网最详细中文文档》</a></p><ul><li>支持到七层（比如HTTP）、功能比较全面，性能也不错。</li></ul></li><li><p><a href="http://blog.itpub.net/25704976/viewspace-1319781/" target="_blank" rel="external">《Haproxy+Keepalived+MySQL实现读均衡负载》</a></p><ul><li>主要是用户读请求的负载均衡。</li></ul></li><li><p><a href="https://www.cnblogs.com/lylife/p/5584019.html" target="_blank" rel="external">《rabbitmq+haproxy+keepalived实现高可用集群搭建》</a></p></li></ul><h3 id="限流"><a href="#限流" class="headerlink" title="限流"></a>限流</h3><ul><li><a href="https://www.cnblogs.com/haoxinyue/p/6792309.html" target="_blank" rel="external">《谈谈高并发系统的限流》</a><ul><li>计数器：通过滑动窗口计数器，控制单位时间内的请求次数，简单粗暴。</li><li>漏桶算法：固定容量的漏桶，漏桶满了就丢弃请求，比较常用。</li><li>令牌桶算法：固定容量的令牌桶，按照一定速率添加令牌，处理请求前需要拿到令牌，拿不到令牌则丢弃请求，或进入丢队列，可以通过控制添加令牌的速率，来控制整体速度。Guava 中的 RateLimiter 是令牌桶的实现。</li><li>Nginx 限流：通过 <code>limit_req</code> 等模块限制并发连接数。</li></ul></li></ul><h3 id="应用层容灾"><a href="#应用层容灾" class="headerlink" title="应用层容灾"></a>应用层容灾</h3><ul><li><p><a href="https://segmentfault.com/a/1190000005988895" target="_blank" rel="external">《防雪崩利器：熔断器 Hystrix 的原理与使用》</a></p><ul><li>雪崩效应原因：硬件故障、硬件故障、程序Bug、重试加大流量、用户大量请求。 </li><li>雪崩的对策：限流、改进缓存模式(缓存预加载、同步调用改异步)、自动扩容、降级。</li><li>Hystrix设计原则：<ul><li>资源隔离：Hystrix通过将每个依赖服务分配独立的线程池进行资源隔离, 从而避免服务雪崩。</li><li>熔断开关：服务的健康状况 = 请求失败数 / 请求总数，通过阈值设定和滑动窗口控制开关。</li><li>命令模式：通过继承 HystrixCommand 来包装服务调用逻辑。 </li></ul></li></ul></li><li><p><a href="https://blog.csdn.net/zeb_perfect/article/details/54135506" target="_blank" rel="external">《缓存穿透，缓存击穿，缓存雪崩解决方案分析》</a></p></li><li><a href="https://blog.csdn.net/zeb_perfect/article/details/54135506" target="_blank" rel="external">《缓存击穿、失效以及热点key问题》</a> <ul><li>主要策略：失效瞬间：单机使用锁；使用分布式锁；不过期；</li><li>热点数据：热点数据单独存储；使用本地缓存；分成多个子key；</li></ul></li></ul><h3 id="跨机房容灾"><a href="#跨机房容灾" class="headerlink" title="跨机房容灾"></a>跨机房容灾</h3><ul><li><p><a href="http://dc.idcquan.com/ywgl/71559.shtml" target="_blank" rel="external">《“异地多活”多机房部署经验谈》</a></p><ul><li>通过自研中间件进行数据同步。 </li></ul></li><li><p><a href="https://blog.csdn.net/jeffreynicole/article/details/48135093" target="_blank" rel="external">《异地多活（异地双活）实践经验》</a></p><ul><li>注意延迟问题，多次跨机房调用会将延时放大数倍。</li><li>建房间专线很大概率会出现问题，做好运维和程序层面的容错。</li><li>不能依赖于程序端数据双写，要有自动同步方案。 </li><li>数据永不在高延迟和较差网络质量下，考虑同步质量问题。</li><li>核心业务和次要业务分而治之，甚至只考虑核心业务。</li><li>异地多活监控部署、测试也要跟上。</li><li>业务允许的情况下考虑用户分区，尤其是游戏、邮箱业务。</li><li>控制跨机房消息体大小，越小越好。</li><li>考虑使用docker容器虚拟化技术，提高动态调度能力。</li></ul></li><li><p><a href="https://blog.csdn.net/yoara/article/details/38013751" target="_blank" rel="external">容灾技术及建设经验介绍</a></p></li></ul><h3 id="容灾演练流程"><a href="#容灾演练流程" class="headerlink" title="容灾演练流程"></a>容灾演练流程</h3><ul><li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2650996320&amp;idx=1&amp;sn=0ed3be190bbee4a9277886ef88cbb2e5" target="_blank" rel="external">《依赖治理、灰度发布、故障演练，阿里电商故障演练系统的设计与实战经验》</a><ul><li>常见故障画像</li><li>案例：预案有效性、预案有效性、故障复现、架构容灾测试、参数调优、参数调优、故障突袭、联合演练。</li></ul></li></ul><h3 id="平滑启动"><a href="#平滑启动" class="headerlink" title="平滑启动"></a>平滑启动</h3><ul><li><p>平滑重启应用思路<br>1.端流量（如vip层）、2. flush 数据(如果有)、3, 重启应用</p></li><li><p><a href="https://blog.csdn.net/u011001084/article/details/73480432" target="_blank" rel="external">《JVM安全退出（如何优雅的关闭java服务）》</a><br>推荐推出方式：System.exit，Kill SIGTERM；不推荐 kill-9；用 Runtime.addShutdownHook 注册钩子。</p></li><li><a href="http://ju.outofmemory.cn/entry/337235" target="_blank" rel="external">《常见Java应用如何优雅关闭》</a><br>Java、Spring、Dubbo 优雅关闭方式。</li></ul><h2 id="数据库扩展"><a href="#数据库扩展" class="headerlink" title="数据库扩展"></a>数据库扩展</h2><h3 id="读写分离模式"><a href="#读写分离模式" class="headerlink" title="读写分离模式"></a>读写分离模式</h3><ul><li><a href="https://www.cnblogs.com/houdj/p/6563771.html" target="_blank" rel="external">《Mysql主从方案的实现》</a></li><li><a href="https://www.cnblogs.com/edisonchou/p/4133148.html" target="_blank" rel="external">《搭建MySQL主从复制经典架构》</a></li><li><p><a href="https://blog.csdn.net/nimasike/article/details/48048341" target="_blank" rel="external">《Haproxy+多台MySQL从服务器(Slave) 实现负载均衡》</a></p></li><li><p><a href="https://www.cnblogs.com/zhangsubai/p/6801764.html" target="_blank" rel="external">《DRBD+Heartbeat+Mysql高可用读写分离架构》</a></p><ul><li>DRDB 进行磁盘复制，避免单点问题。</li></ul></li><li><p><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/62-ke-kuo-zhan-de-shu-ju-ku-jia-gou/621-gao-ke-yong-mysql-de-ji-zhong-fang-an/6214-mysql-cluster-fang-an.html" target="_blank" rel="external">《MySQL Cluster 方式》</a></p></li></ul><h3 id="分片模式"><a href="#分片模式" class="headerlink" title="分片模式"></a>分片模式</h3><ul><li><p><a href="https://www.jianshu.com/p/32b3e91aa22c" target="_blank" rel="external">《分库分表需要考虑的问题及方案》</a></p><ul><li>中间件： 轻量级：sharding-jdbc、TSharding；重量级：Atlas、MyCAT、Vitess等。</li><li>问题：事务、Join、迁移、扩容、ID、分页等。</li><li>事务补偿：对数据进行对帐检查;基于日志进行比对;定期同标准数据来源进行同步等。</li><li>分库策略：数值范围；取模；日期等。</li><li>分库数量：通常 MySQL 单库 5千万条、Oracle 单库一亿条需要分库。 </li></ul></li><li><p><a href="https://www.2cto.com/database/201503/380348.html" target="_blank" rel="external">《MySql分表和表分区详解》</a></p><ul><li>分区：是MySQL内部机制，对客户端透明，数据存储在不同文件中，表面上看是同一个表。</li><li>分表：物理上创建不同的表、客户端需要管理分表路由。</li></ul></li></ul><h2 id="服务治理"><a href="#服务治理" class="headerlink" title="服务治理"></a>服务治理</h2><h3 id="服务注册与发现"><a href="#服务注册与发现" class="headerlink" title="服务注册与发现"></a>服务注册与发现</h3><ul><li><a href="https://blog.csdn.net/jiaolongdy/article/details/51188798" target="_blank" rel="external">《永不失联！如何实现微服务架构中的服务发现？》</a><ul><li>客户端服务发现模式：客户端直接查询注册表，同时自己负责负载均衡。Eureka 采用这种方式。</li><li>服务器端服务发现模式：客户端通过负载均衡查询服务实例。</li></ul></li><li><p><a href="https://blog.csdn.net/u010963948/article/details/71730165" target="_blank" rel="external">《SpringCloud服务注册中心比较:Consul vs Zookeeper vs Etcd vs Eureka》</a></p><ul><li>CAP支持：Consul（CA）、zookeeper（cp）、etcd（cp） 、euerka（ap）</li><li>作者认为目前 Consul 对 Spring cloud 的支持比较好。</li></ul></li><li><p><a href="http://mobile.51cto.com/news-502394.htm" target="_blank" rel="external">《基于Zookeeper的服务注册与发现》</a></p><ul><li>优点：API简单、Pinterest，Airbnb 在用、多语言、通过watcher机制来实现配置PUSH，能快速响应配置变化。 </li></ul></li></ul><h3 id="服务路由控制"><a href="#服务路由控制" class="headerlink" title="服务路由控制"></a>服务路由控制</h3><ul><li><a href="https://blog.csdn.net/xundh/article/details/59492750" target="_blank" rel="external">《分布式服务框架学习笔记4 服务路由》</a><ul><li>原则：透明化路由</li><li>负载均衡策略：随机、轮询、服务调用延迟、一致性哈希、粘滞连接</li><li>本地路由有限策略：injvm(优先调用jvm内部的服务)，innative(优先使用相同物理机的服务),原则上找距离最近的服务。</li><li>配置方式：统一注册表；本地配置；动态下发。</li></ul></li></ul><h2 id="分布式一致"><a href="#分布式一致" class="headerlink" title="分布式一致"></a>分布式一致</h2><h3 id="CAP-与-BASE-理论"><a href="#CAP-与-BASE-理论" class="headerlink" title="CAP 与 BASE 理论"></a>CAP 与 BASE 理论</h3><ul><li><a href="http://www.cnblogs.com/szlbm/p/5588543.html" target="_blank" rel="external">《从分布式一致性谈到CAP理论、BASE理论》</a><ul><li>一致性分类：强一致(立即一致)；弱一致(可在单位时间内实现一致，比如秒级)；最终一致(弱一致的一种，一定时间内最终一致)</li><li>CAP：一致性、可用性、分区容错性(网络故障引起)</li><li>BASE：Basically Available（基本可用）、Soft state（软状态）和Eventually consistent（最终一致性）</li><li>BASE理论的核心思想是：即使无法做到强一致性，但每个应用都可以根据自身业务特点，采用适当的方式来使系统达到最终一致性。</li></ul></li></ul><h3 id="分布式锁"><a href="#分布式锁" class="headerlink" title="分布式锁"></a>分布式锁</h3><ul><li><a href="http://www.hollischuang.com/archives/1716" target="_blank" rel="external">《分布式锁的几种实现方式》</a><ul><li>基于数据库的分布式锁：优点：操作简单、容易理解。缺点：存在单点问题、数据库性能够开销较大、不可重入；</li><li>基于缓存的分布式锁：优点：非阻塞、性能好。缺点：操作不好容易造成锁无法释放的情况。</li><li>Zookeeper 分布式锁：通过有序临时节点实现锁机制，自己对应的节点需要最小，则被认为是获得了锁。优点：集群可以透明解决单点问题，避免锁不被释放问题，同时锁可以重入。缺点：性能不如缓存方式，吞吐量会随着zk集群规模变大而下降。</li></ul></li><li><p><a href="https://www.tuicool.com/articles/VZJr6fY" target="_blank" rel="external">《基于Zookeeper的分布式锁》</a></p><ul><li>清楚的原理描述 + Java 代码示例。 </li></ul></li><li><p><a href="https://www.cnblogs.com/0201zcr/p/5942748.html" target="_blank" rel="external">《jedisLock—redis分布式锁实现》</a></p><ul><li>基于 setnx(set if ont exists)，有则返回false，否则返回true。并支持过期时间。</li></ul></li><li><p><a href="https://blog.csdn.net/albertfly/article/details/77412333" target="_blank" rel="external">《Memcached 和 Redis 分布式锁方案》</a></p><ul><li>利用 memcached 的 add（有别于set）操作，当key存在时，返回false。</li></ul></li></ul><h3 id="分布式一致性算法"><a href="#分布式一致性算法" class="headerlink" title="分布式一致性算法"></a>分布式一致性算法</h3><h4 id="PAXOS"><a href="#PAXOS" class="headerlink" title="PAXOS"></a>PAXOS</h4><ul><li><a href="https://www.cnblogs.com/linbingdong/p/6253479.html" target="_blank" rel="external">《分布式系列文章——Paxos算法原理与推导》</a></li><li><a href="https://blog.csdn.net/u010039929/article/details/70171672" target="_blank" rel="external">《Paxos–&gt;Fast Paxos–&gt;Zookeeper分析》</a></li><li><a href="https://www.cnblogs.com/leesf456/p/6012777.html" target="_blank" rel="external">《【分布式】Zookeeper与Paxos》</a></li></ul><h4 id="Zab"><a href="#Zab" class="headerlink" title="Zab"></a>Zab</h4><ul><li><a href="https://www.jianshu.com/p/fb527a64deee" target="_blank" rel="external">《Zab：Zookeeper 中的分布式一致性协议介绍》</a></li></ul><h4 id="Raft"><a href="#Raft" class="headerlink" title="Raft"></a>Raft</h4><ul><li><a href="http://www.cnblogs.com/mindwind/p/5231986.html" target="_blank" rel="external">《Raft 为什么是更易理解的分布式一致性算法》</a><ul><li>三种角色：Leader（领袖）、Follower（群众）、Candidate（候选人）</li><li>通过随机等待的方式发出投票，得票多的获胜。</li></ul></li></ul><h4 id="Gossip"><a href="#Gossip" class="headerlink" title="Gossip"></a>Gossip</h4><ul><li><a href="http://blog.51cto.com/tianya23/530743" target="_blank" rel="external">《Gossip算法》</a></li></ul><h4 id="两阶段提交、多阶段提交"><a href="#两阶段提交、多阶段提交" class="headerlink" title="两阶段提交、多阶段提交"></a>两阶段提交、多阶段提交</h4><ul><li><a href="http://blog.jobbole.com/95632/" target="_blank" rel="external">《关于分布式事务、两阶段提交协议、三阶提交协议》</a></li></ul><h3 id="幂等"><a href="#幂等" class="headerlink" title="幂等"></a>幂等</h3><ul><li><a href="https://www.cnblogs.com/wxgblogs/p/6639272.html" target="_blank" rel="external">《分布式系统—幂等性设计》</a><ul><li>幂等特性的作用：该资源具备幂等性，请求方无需担心重复调用会产生错误。</li><li>常见保证幂等的手段：MVCC（类似于乐观锁）、去重表(唯一索引)、悲观锁、一次性token、序列号方式。 </li></ul></li></ul><h3 id="分布式一致方案"><a href="#分布式一致方案" class="headerlink" title="分布式一致方案"></a>分布式一致方案</h3><ul><li><a href="http://www.infoq.com/cn/articles/solution-of-distributed-system-transaction-consistency" target="_blank" rel="external">《分布式系统事务一致性解决方案》</a></li><li><a href="https://weibo.com/ttarticle/p/show?id=2309403965965003062676" target="_blank" rel="external">《保证分布式系统数据一致性的6种方案》</a></li></ul><h3 id="分布式-Leader-节点选举"><a href="#分布式-Leader-节点选举" class="headerlink" title="分布式 Leader 节点选举"></a>分布式 Leader 节点选举</h3><ul><li><a href="https://blog.csdn.net/johnson_moon/article/details/78809995" target="_blank" rel="external">《利用zookeeper实现分布式leader节点选举》</a></li></ul><h3 id="TCC-Try-Confirm-Cancel-柔性事务"><a href="#TCC-Try-Confirm-Cancel-柔性事务" class="headerlink" title="TCC(Try/Confirm/Cancel) 柔性事务"></a>TCC(Try/Confirm/Cancel) 柔性事务</h3><ul><li><a href="https://www.jianshu.com/p/ab1a1c6b08a1" target="_blank" rel="external">《传统事务与柔性事务》</a><ul><li>基于BASE理论：基本可用、柔性状态、最终一致。</li><li>解决方案：记录日志+补偿（正向补充或者回滚）、消息重试(要求程序要幂等)；“无锁设计”、采用乐观锁机制。</li></ul></li></ul><h2 id="分布式文件系统"><a href="#分布式文件系统" class="headerlink" title="分布式文件系统"></a>分布式文件系统</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/27666295" target="_blank" rel="external">说说分布式文件存储系统-基本架构</a> ？</li><li><a href="https://blog.csdn.net/gatieme/article/details/44982961" target="_blank" rel="external">《各种分布式文件系统的比较》</a> ？<ul><li>HDFS：大批量数据读写，用于高吞吐量的场景，不适合小文件。</li><li>FastDFS：轻量级、适合小文件。</li></ul></li></ul><h2 id="唯一ID-生成"><a href="#唯一ID-生成" class="headerlink" title="唯一ID 生成"></a>唯一ID 生成</h2><h3 id="全局唯一ID"><a href="#全局唯一ID" class="headerlink" title="全局唯一ID"></a>全局唯一ID</h3><ul><li><p><a href="https://www.cnblogs.com/baiwa/p/5318432.html" target="_blank" rel="external">《高并发分布式系统中生成全局唯一Id汇总》</a></p><ul><li>Twitter 方案（Snowflake 算法）：41位时间戳+10位机器标识（比如IP，服务器名称等）+12位序列号(本地计数器)</li><li>Flicker 方案：MySQL自增ID + “REPLACE INTO XXX:SELECT LAST_INSERT_ID();” </li><li>UUID：缺点，无序，字符串过长，占用空间，影响检索性能。</li><li>MongoDB 方案：利用 ObjectId。缺点：不能自增。</li></ul></li><li><p><a href="https://blog.csdn.net/hdu09075340/article/details/79103851" target="_blank" rel="external">《TDDL 在分布式下的SEQUENCE原理》</a></p><ul><li>在数据库中创建 sequence 表，用于记录，当前已被占用的id最大值。</li><li>每台客户端主机取一个id区间（比如 1000~2000）缓存在本地，并更新 sequence 表中的id最大值记录。</li><li>客户端主机之间取不同的id区间，用完再取，使用乐观锁机制控制并发。</li></ul></li></ul><h2 id="一致性Hash算法"><a href="#一致性Hash算法" class="headerlink" title="一致性Hash算法"></a>一致性Hash算法</h2><ul><li><a href="https://coderxing.gitbooks.io/architecture-evolution/di-san-pian-ff1a-bu-luo/631-yi-zhi-xing-ha-xi.html" target="_blank" rel="external">《一致性哈希算法》</a></li></ul><h1 id="设计思想-amp-开发模式"><a href="#设计思想-amp-开发模式" class="headerlink" title="设计思想 &amp; 开发模式"></a>设计思想 &amp; 开发模式</h1><h2 id="DDD-Domain-driven-Design-领域驱动设计"><a href="#DDD-Domain-driven-Design-领域驱动设计" class="headerlink" title="DDD(Domain-driven Design - 领域驱动设计)"></a>DDD(Domain-driven Design - 领域驱动设计)</h2><ul><li><p><a href="https://www.cnblogs.com/netfocus/p/5548025.html" target="_blank" rel="external">《浅谈我对DDD领域驱动设计的理解》</a></p><ul><li>概念：DDD 主要对传统软件开发流程(分析-设计-编码)中各阶段的割裂问题而提出，避免由于一开始分析不明或在软件开发过程中的信息流转不一致而造成软件无法交付（和需求方设想不一致）的问题。DDD 强调一切以领域（Domain）为中心，强调领域专家（Domain Expert）的作用，强调先定义好领域模型之后在进行开发，并且领域模型可以指导开发（所谓的驱动）。</li><li>过程：理解领域、拆分领域、细化领域，模型的准确性取决于模型的理解深度。</li><li>设计：DDD 中提出了建模工具，比如聚合、实体、值对象、工厂、仓储、领域服务、领域事件来帮助领域建模。</li></ul></li><li><p><a href="https://www.cnblogs.com/butterfly100/p/7827870.html" target="_blank" rel="external">《领域驱动设计的基础知识总结》</a></p><ul><li>领域（Doamin）本质上就是问题域，比如一个电商系统，一个论坛系统等。</li><li>界限上下文（Bounded Context）：阐述子域之间的关系，可以简单理解成一个子系统或组件模块。</li><li>领域模型（Domain Model）：DDD的核心是建立（用通用描述语言、工具—领域通用语言）正确的领域模型；反应业务需求的本质，包括实体和过程；其贯穿软件分析、设计、开发 的整个过程；常用表达领域模型的方式：图、代码或文字；</li><li>领域通用语言：领域专家、开发设计人员都能立即的语言或工具。</li><li>经典分层架构：用户界面/展示层、应用层、领域层、基础设施层，是四层架构模式。</li><li>使用的模式：<ul><li>关联尽量少，尽量单项，尽量降低整体复杂度。</li><li>实体（Entity）：领域中的唯一标示，一个实体的属性尽量少，少则清晰。</li><li>值对象（Value Object）：没有唯一标识，且属性值不可变，小二简单的对象，比如Date。</li><li>领域服务（Domain Service）： 协调多个领域对象，只有方法没有状态(不存数据)；可以分为应用层服务，领域层服务、基础层服务。</li><li>聚合及聚合根（Aggregate，Aggregate Root）：聚合定义了一组具有内聚关系的相关对象的集合；聚合根是对聚合引用的唯一元素；当修改一个聚合时，必须在事务级别；大部分领域模型中，有70%的聚合通常只有一个实体，30%只有2~3个实体；如果一个聚合只有一个实体，那么这个实体就是聚合根；如果有多个实体，那么我们可以思考聚合内哪个对象有独立存在的意义并且可以和外部直接进行交互；</li><li>工厂（Factory）：类似于设计模式中的工厂模式。</li><li>仓储（Repository）：持久化到DB，管理对象，且只对聚合设计仓储。</li></ul></li></ul></li><li><p><a href="http://www.cnblogs.com/Leo_wl/p/3866629.html" target="_blank" rel="external">《领域驱动设计(DDD)实现之路》</a></p><ul><li>聚合：比如一辆汽车（Car）包含了引擎（Engine）、车轮（Wheel）和油箱（Tank）等组件，缺一不可。</li></ul></li><li><p><a href="http://www.hollischuang.com/archives/553" target="_blank" rel="external">《领域驱动设计系列（2）浅析VO、DTO、DO、PO的概念、区别和用处》</a></p></li></ul><h3 id="命令查询职责分离-CQRS"><a href="#命令查询职责分离-CQRS" class="headerlink" title="命令查询职责分离(CQRS)"></a>命令查询职责分离(CQRS)</h3><p>CQRS — Command Query Responsibility Seperation</p><ul><li><p><a href="https://www.cnblogs.com/cnblogsfans/p/4551990.html" target="_blank" rel="external">《领域驱动设计系列 (六)：CQRS》</a></p><ul><li>核心思想：读写分离（查询和更新在不同的方法中），不同的流程只是不同的设计方式，CQ代码分离，分布式环境中会有明显体现（有冗余数据的情况下），目的是为了高性能。</li></ul></li><li><p><a href="http://www.techweb.com.cn/network/system/2017-07-07/2553563.shtml" target="_blank" rel="external">《DDD CQRS架构和传统架构的优缺点比较》</a></p><ul><li>最终一致的设计理念；依赖于高可用消息中间件。</li></ul></li><li><p><a href="http://www.cnblogs.com/netfocus/p/4055346.html" target="_blank" rel="external">《CQRS架构简介》</a></p><ul><li>一个实现 CQRS 的抽象案例。</li></ul></li><li><p><a href="http://www.uml.org.cn/zjjs/201609221.asp" target="_blank" rel="external">《深度长文：我对CQRS/EventSourcing架构的思考》</a></p><ul><li>CQRS 模式分析 + 12306 抢票案例</li></ul></li></ul><h3 id="贫血，充血模型"><a href="#贫血，充血模型" class="headerlink" title="贫血，充血模型"></a>贫血，充血模型</h3><ul><li><a href="https://kb.cnblogs.com/page/520743/" target="_blank" rel="external">《贫血，充血模型的解释以及一些经验》</a><ul><li>失血模型：老子和儿子分别定义，相互不知道，二者实体定义中完全没有业务逻辑，通过外部Service进行关联。</li><li>贫血模型：老子知道儿子，儿子也知道老子；部分业务逻辑放到实体中；优点：各层单项依赖，结构清楚，易于维护；缺点：不符合OO思想，相比于充血模式，Service层较为厚重；</li><li>充血模型：和贫血模型类似，区别在于如何划分业务逻辑。优点：Service层比较薄，只充当Facade的角色，不和DAO打交道、复合OO思想；缺点：非单项依赖，DO和DAO之间双向依赖、和Service层的逻辑划分容易造成混乱。</li><li>肿胀模式：是一种极端情况，取消Service层、全部业务逻辑放在DO中；优点：符合OO思想、简化了分层；缺点：暴露信息过多、很多非DO逻辑也会强行并入DO。这种模式应该避免。</li><li>作者主张使用贫血模式。</li></ul></li></ul><h2 id="Actor-模式"><a href="#Actor-模式" class="headerlink" title="Actor 模式"></a>Actor 模式</h2><p>TODO</p><h2 id="响应式编程"><a href="#响应式编程" class="headerlink" title="响应式编程"></a>响应式编程</h2><h3 id="Reactor"><a href="#Reactor" class="headerlink" title="Reactor"></a>Reactor</h3><p>TODO</p><h3 id="RxJava"><a href="#RxJava" class="headerlink" title="RxJava"></a>RxJava</h3><p>TODO</p><h3 id="Vert-x"><a href="#Vert-x" class="headerlink" title="Vert.x"></a>Vert.x</h3><p>TODO</p><h2 id="DODAF2-0"><a href="#DODAF2-0" class="headerlink" title="DODAF2.0"></a>DODAF2.0</h2><ul><li><a href="http://www.360doc.com/content/16/0627/19/33945750_571201779.shtml" target="_blank" rel="external">《DODAF2.0方法论》</a></li><li><a href="http://blog.51cto.com/xiaoyong/1553164" target="_blank" rel="external">《DODAF2.0之能力视角如何落地》</a></li></ul><h2 id="Serverless"><a href="#Serverless" class="headerlink" title="Serverless"></a>Serverless</h2><p>无需过多关系服务器的服务架构理念。</p><ul><li><p><a href="http://www.jdon.com/soa/serverless.html" target="_blank" rel="external">《什么是Serverless无服务器架构？》</a></p><ul><li>Serverless 不代表出去服务器，而是去除对服务器运行状态的关心。</li><li>Serverless 代表一思维方式的转变，从“构建一套服务在一台服务器上，对对个事件进行响应转变为构建一个为服务器，来响应一个事件”。</li><li>Serverless 不代表某个具体的框架。</li></ul></li><li><p><a href="http://www.infoq.com/cn/news/2017/10/how-to-understand-serverless" target="_blank" rel="external">《如何理解Serverless？》</a></p><ul><li>依赖于 Baas （(Mobile) Backend as a Service） 和 Faas （Functions as a service）</li></ul></li></ul><h2 id="Service-Mesh"><a href="#Service-Mesh" class="headerlink" title="Service Mesh"></a>Service Mesh</h2><ul><li><a href="https://time.geekbang.org/article/2355" target="_blank" rel="external">《什么是Service Mesh？》</a></li><li><p><a href="https://www.jianshu.com/p/e23e3e74538e" target="_blank" rel="external">《初识 Service Mesh》</a></p></li><li><p><a href="https://time.geekbang.org/article/2355" target="_blank" rel="external">《什么是Service Mesh？》</a></p></li></ul><h1 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h1><h2 id="架构评审"><a href="#架构评审" class="headerlink" title="架构评审"></a>架构评审</h2><ul><li><a href="http://developer.51cto.com/art/201506/478486.htm" target="_blank" rel="external">《架构设计之如何评审架构设计说明书》</a></li><li><a href="https://blog.csdn.net/wireless_com/article/details/45935591" target="_blank" rel="external">《人人都是架构师：非功能性需求》</a></li></ul><h2 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h2><ul><li><a href="http://www.infoq.com/cn/articles/architect-12-rules-complete/" target="_blank" rel="external">《架构之重构的12条军规》</a></li></ul><h2 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h2><ul><li><a href="https://github.com/alibaba/p3c" target="_blank" rel="external">《阿里巴巴Java开发手册》</a></li></ul><h2 id="代码-Review"><a href="#代码-Review" class="headerlink" title="代码 Review"></a>代码 Review</h2><p>制度还是制度!<br>另外，每个公司需要根据自己的需求和目标制定自己的 check list</p><ul><li><p><a href="http://www.sohu.com/a/229745352_181657" target="_blank" rel="external">《为什么你做不好 Code Review？》</a></p><ul><li>代码 review 做的好，在于制度建设。</li></ul></li><li><p><a href="https://blog.csdn.net/uxyheaven/article/details/49773619" target="_blank" rel="external">《从零开始Code Review》</a></p></li><li><p><a href="https://www.cnblogs.com/zuoping/p/5477047.html" target="_blank" rel="external">《Code Review Checklist》</a></p></li><li><p><a href="https://dzone.com/articles/java-code-review-checklist" target="_blank" rel="external">《Java Code Review Checklist》</a></p></li><li><p><a href="https://blog.csdn.net/legend0011/article/details/45585575" target="_blank" rel="external">《如何用 gitlab 做 code review》</a></p></li></ul><h2 id="RUP"><a href="#RUP" class="headerlink" title="RUP"></a>RUP</h2><ul><li><a href="https://blog.csdn.net/apanious/article/details/51011946" target="_blank" rel="external">《运用RUP 4+1视图方法进行软件架构设计》</a></li></ul><h2 id="看板管理"><a href="#看板管理" class="headerlink" title="看板管理"></a>看板管理</h2><ul><li><a href="https://blog.csdn.net/tkchen/article/details/51637643" target="_blank" rel="external">《说说看板在项目中的应用》</a></li></ul><h2 id="SCRUM"><a href="#SCRUM" class="headerlink" title="SCRUM"></a>SCRUM</h2><p>SCRUM - 争球</p><ul><li>3个角色:Product Owner(PO) 产品负责人;Scrum Master（SM），推动Scrum执行;Team 开发团队。</li><li>3个工件：Product Backlog 产品TODOLIST，含优先级;Sprint Backlog 功能开发 TODO LIST；燃尽图；</li><li>五个价值观：专注、勇气、公开、承诺、尊重。</li></ul><ul><li><p><a href="https://blog.csdn.net/inny100_100/article/details/54633757" target="_blank" rel="external">《敏捷项目管理流程-Scrum框架最全总结！》</a></p></li><li><p><a href="https://blog.csdn.net/superkunkun/article/details/52951142" target="_blank" rel="external">《敏捷其实很简单3—敏捷方法之scrum》</a></p></li></ul><h2 id="敏捷开发"><a href="#敏捷开发" class="headerlink" title="敏捷开发"></a>敏捷开发</h2><p>TODO</p><h2 id="极限编程（XP）"><a href="#极限编程（XP）" class="headerlink" title="极限编程（XP）"></a>极限编程（XP）</h2><p>XP - eXtreme Programming</p><ul><li><p><a href="http://www.woshipm.com/pmd/406917.html" target="_blank" rel="external">《主流敏捷开发方法：极限编程XP》</a></p><ul><li>是一种指导开发人员的方法论。</li><li><p>4大价值：</p><ul><li>沟通：鼓励口头沟通，提高效率。</li><li>简单：够用就好。</li><li>反馈：及时反馈、通知相关人。</li><li>勇气：提倡拥抱变化，敢于重构。</li></ul></li><li><p>5个原则：快速反馈、简单性假设、逐步修改、提倡更改（小步快跑）、优质工作（保证质量的前提下保证小步快跑）。</p></li><li>5个工作：阶段性冲刺；冲刺计划会议；每日站立会议；冲刺后review；回顾会议。</li></ul></li></ul><h2 id="结对编程"><a href="#结对编程" class="headerlink" title="结对编程"></a>结对编程</h2><p>边写码，边review。能够增强代码质量、减少bug。</p><ul><li><a href="http://www.baike.com/wiki/%E7%BB%93%E5%AF%B9%E7%BC%96%E7%A8%8B" target="_blank" rel="external">《结对编程》</a></li></ul><h2 id="PDCA-循环质量管理"><a href="#PDCA-循环质量管理" class="headerlink" title="PDCA 循环质量管理"></a>PDCA 循环质量管理</h2><p>P——PLAN 策划，D——DO 实施，C——CHECK 检查，A——ACT 改进</p><ul><li><a href="http://www.baike.com/wiki/PDCA" target="_blank" rel="external">《PDCA》</a></li></ul><h2 id="FMEA管理模式"><a href="#FMEA管理模式" class="headerlink" title="FMEA管理模式"></a>FMEA管理模式</h2><p>TODO</p><h1 id="通用业务术语"><a href="#通用业务术语" class="headerlink" title="通用业务术语"></a>通用业务术语</h1><p>TODO</p><h1 id="技术趋势"><a href="#技术趋势" class="headerlink" title="技术趋势"></a>技术趋势</h1><p>TODO</p><h1 id="政策、法规"><a href="#政策、法规" class="headerlink" title="政策、法规"></a>政策、法规</h1><p>TODO</p><h2 id="法律"><a href="#法律" class="headerlink" title="法律"></a>法律</h2><h3 id="严格遵守刑法253法条"><a href="#严格遵守刑法253法条" class="headerlink" title="严格遵守刑法253法条"></a>严格遵守刑法253法条</h3><p>我国刑法第253条之一规定：</p><blockquote><ul><li>国家机关或者金融、电信、交通、教育、医疗等单位的工作人员，违反国家规定，将本单位在履行职责或者提供服务过程中获得的公民个人信息，出售或者非法提供给他人，情节严重的，处3年以下有期徒刑或者拘役，并处或者单处罚金。</li><li>窃取或者以其他方法非法获取上述信息，情节严重的，依照前款的规定处罚。 </li><li>单位犯前两款罪的，对单位判处罚金，并对其直接负责的主管人员和其他直接责任人员，依照各该款的规定处罚。</li></ul></blockquote><p>最高人民法院、最高人民检察院关于执行《中华人民共和国刑法》确定罪名的补充规定（四）规定：触犯刑法第253条之一第1款之规定，构成“出售、非法提供公民个人信息罪”；触犯刑法第253条之一第2款之规定，构成“非法获取公民个人信息罪”</p><ul><li><a href="https://baike.baidu.com/item/%E9%9D%9E%E6%B3%95%E8%8E%B7%E5%8F%96%E5%85%AC%E6%B0%91%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E7%BD%AA" target="_blank" rel="external">《非法获取公民个人信息罪》</a></li></ul><h1 id="架构师素质"><a href="#架构师素质" class="headerlink" title="架构师素质"></a>架构师素质</h1><ul><li><p><a href="http://hellojava.info/?p=430" target="_blank" rel="external">《架构师画像》</a></p><ul><li>业务理解和抽象能力</li><li>NB的代码能力</li><li>全面：1. 在面对业务问题上，架构师脑海里是否会浮现出多种技术方案；2. 在做系统设计时是否考虑到了足够多的方方面面；3. 在做系统设计时是否考虑到了足够多的方方面面； </li><li>全局：是否考虑到了对上下游的系统的影响。</li><li>权衡：权衡投入产出比；优先级和节奏控制；</li></ul></li><li><p><a href="http://www.infoq.com/cn/articles/architecture-optimization-and-design-the-architect-must-know" target="_blank" rel="external">《关于架构优化和设计，架构师必须知道的事情》</a></p><ul><li>要去考虑的细节：模块化、轻耦合、无共享架构；减少各个组件之前的依赖、注意服务之间依赖所有造成的链式失败及影响等。</li><li>基础设施、配置、测试、开发、运维综合考虑。</li><li>考虑人、团队、和组织的影响。 </li></ul></li><li><p><a href="https://www.zhihu.com/question/19841397" target="_blank" rel="external">《如何才能真正的提高自己，成为一名出色的架构师？》</a> </p></li><li><p><a href="https://blog.csdn.net/sanbingyutuoniao123/article/details/54144129" target="_blank" rel="external">《架构师的必备素质和成长途径》</a></p><ul><li>素质：业务理解、技术广度、技术深度、丰富经验、沟通能力、动手能力、美学素养。</li><li>成长路径：2年积累知识、4年积累技能和组内影响力、7年积累部门内影响力、7年以上积累跨部门影响力。 </li></ul></li><li><p><a href="http://blog.51cto.com/frankfan/1248401" target="_blank" rel="external">《架构设计师—你在哪层楼？》</a></p><ul><li>第一层的架构师看到的只是产品本身</li><li>第二层的架构师不仅看到自己的产品，还看到了整体的方案</li><li>第三层的架构师看到的是商业价值 </li></ul></li></ul><h1 id="团队管理"><a href="#团队管理" class="headerlink" title="团队管理"></a>团队管理</h1><p>TODO</p><h2 id="招聘"><a href="#招聘" class="headerlink" title="招聘"></a>招聘</h2><h1 id="资讯"><a href="#资讯" class="headerlink" title="资讯"></a>资讯</h1><h2 id="行业资讯"><a href="#行业资讯" class="headerlink" title="行业资讯"></a>行业资讯</h2><ul><li><a href="http://36kr.com/" target="_blank" rel="external">36kr</a></li><li><a href="http://www.techweb.com.cn/" target="_blank" rel="external">Techweb</a></li></ul><h2 id="公众号列表"><a href="#公众号列表" class="headerlink" title="公众号列表"></a>公众号列表</h2><p>TODO</p><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><h3 id="团队博客"><a href="#团队博客" class="headerlink" title="团队博客"></a>团队博客</h3><ul><li><a href="http://jm.taobao.org/" target="_blank" rel="external">阿里中间件博客</a></li><li><a href="https://tech.meituan.com" target="_blank" rel="external">美团点评技术团队博客</a></li></ul><h3 id="个人博客"><a href="#个人博客" class="headerlink" title="个人博客"></a>个人博客</h3><ul><li><a href="http://www.ruanyifeng.com/" target="_blank" rel="external">阮一峰的网络日志</a></li><li><a href="https://coolshell.cn/" target="_blank" rel="external">酷壳 - COOLSHELL-陈皓</a></li><li><a href="http://hellojava.info/" target="_blank" rel="external">hellojava-阿里毕玄</a></li><li><a href="http://cmsblogs.com/" target="_blank" rel="external">Cm’s Blog</a></li><li><a href="http://blog.didispace.com/" target="_blank" rel="external">程序猿DD-翟永超-《Spring Cloud微服务实战》作者</a></li></ul><h2 id="综合门户、社区"><a href="#综合门户、社区" class="headerlink" title="综合门户、社区"></a>综合门户、社区</h2><p><strong>国内：</strong></p><ul><li><a href="http://csdn.net" target="_blank" rel="external">CSDN</a><br>   老牌技术社区、不必解释。</li><li><a href="http://www.51cto.com/" target="_blank" rel="external">51cto.com</a></li><li><a href="http://www.iteye.com/" target="_blank" rel="external">ITeye</a><ul><li>偏 Java 方向 </li></ul></li><li><a href="https://www.cnblogs.com" target="_blank" rel="external">博客园</a></li><li><a href="http://www.tom.net/" target="_blank" rel="external">ChinaUnix</a><ul><li>偏 Linux 方向 </li></ul></li><li><a href="https://www.oschina.net/" target="_blank" rel="external">开源中国社区</a></li><li><a href="http://www.open-open.com/" target="_blank" rel="external">深度开源</a></li><li><p><a href="http://www.jobbole.com/" target="_blank" rel="external">伯乐在线</a></p><ul><li>涵盖 IT职场、Web前端、后端、移动端、数据库等方面内容，偏技术端。</li></ul></li><li><p><a href="http://www.itpub.net/" target="_blank" rel="external">ITPUB</a></p></li><li><a href="https://cloud.tencent.com/developer/column" target="_blank" rel="external">腾讯云— 云+社区</a></li><li><a href="https://yq.aliyun.com/" target="_blank" rel="external">阿里云— 云栖社区</a></li><li><a href="https://www.ibm.com/developerworks/cn/" target="_blank" rel="external">IBM DeveloperWorks</a></li><li><a href="https://toutiao.io/" target="_blank" rel="external">开发者头条</a></li><li><a href="http://www.linkedkeeper.com" target="_blank" rel="external">LinkedKeeper</a></li></ul><p><strong>国外：</strong></p><ul><li><a href="https://dzone.com" target="_blank" rel="external">DZone</a></li><li><a href="https://www.reddit.com" target="_blank" rel="external">Reddit</a></li></ul><h2 id="问答、讨论类社区"><a href="#问答、讨论类社区" class="headerlink" title="问答、讨论类社区"></a>问答、讨论类社区</h2><ul><li><a href="https://segmentfault.com" target="_blank" rel="external">segmentfault</a><ul><li>问答+专栏 </li></ul></li><li><a href="https://www.zhihu.com/" target="_blank" rel="external">知乎</a></li><li><a href="https://stackoverflow.com/" target="_blank" rel="external">stackoverflow</a></li></ul><h2 id="行业数据分析"><a href="#行业数据分析" class="headerlink" title="行业数据分析"></a>行业数据分析</h2><ul><li><a href="http://report.iresearch.cn/" target="_blank" rel="external">艾瑞网</a></li><li><p><a href="https://www.questmobile.com.cn" target="_blank" rel="external">QUEST MOBILE</a></p></li><li><p><a href="http://data.stats.gov.cn/" target="_blank" rel="external">国家数据</a></p></li><li><p><a href="http://www.talkingdata.com/" target="_blank" rel="external">TalkingData</a></p></li></ul><h2 id="专项网站"><a href="#专项网站" class="headerlink" title="专项网站"></a>专项网站</h2><ul><li><p>测试:</p><ul><li><a href="http://www.ltesting.net/" target="_blank" rel="external">领测国际</a> </li><li><a href="https://www.testwo.com/" target="_blank" rel="external">测试窝</a></li><li><a href="https://testerhome.com" target="_blank" rel="external">TesterHome</a></li></ul></li><li><p>运维:</p><pre><code>* [运维派](http://www.yunweipai.com/) * [Abcdocker](https://www.abcdocker.com/)</code></pre></li><li><p>Java:</p><ul><li><a href="http://www.importnew.com/" target="_blank" rel="external">ImportNew</a><ul><li>专注于 Java 技术分享</li></ul></li><li><a href="https://howtodoinjava.com/" target="_blank" rel="external">HowToDoInJava</a><ul><li>英文博客</li></ul></li></ul></li><li><p>安全</p><ul><li><a href="https://www.2cto.com/" target="_blank" rel="external">红黑联盟</a> </li><li><a href="http://www.freebuf.com/" target="_blank" rel="external">FreeBuf</a></li></ul></li><li><p>大数据</p><ul><li><a href="http://www.thebigdata.cn/" target="_blank" rel="external">中国大数据</a> </li></ul></li><li><p>其他专题网站：</p><ul><li><a href="http://www.infoq.com/cn/" target="_blank" rel="external">InfoQ</a><ul><li>偏重于基础架构、运维方向</li></ul></li><li><a href="http://www.dockerinfo.net/" target="_blank" rel="external">DockerInfo</a><ul><li>专注于 Docker 应用及咨询、教程的网站</li></ul></li><li><a href="https://www.linuxidc.com/" target="_blank" rel="external">Linux公社</a><ul><li>Linux 主题社区</li></ul></li></ul></li></ul><h2 id="其他类"><a href="#其他类" class="headerlink" title="其他类"></a>其他类</h2><ul><li><a href="https://github.com/TeamStuQ/skill-map" target="_blank" rel="external">程序员技能图谱</a></li></ul><h2 id="推荐参考书"><a href="#推荐参考书" class="headerlink" title="推荐参考书"></a>推荐参考书</h2><h3 id="在线电子书"><a href="#在线电子书" class="headerlink" title="在线电子书"></a>在线电子书</h3><ul><li><a href="https://github.com/forezp/SpringCloudLearning" target="_blank" rel="external">《深入理解Spring Cloud与微服务构建》</a></li></ul><ul><li><a href="http://techforum-img.cn-hangzhou.oss-pub.aliyun-inc.com/1523849261680/AliTech101_RD.pdf" target="_blank" rel="external">《阿里技术参考图册-研发篇》</a></li><li><p><a href="http://techforum-img.cn-hangzhou.oss-pub.aliyun-inc.com/1523848064814/AliTech101_Algorithms.pdf" target="_blank" rel="external">《阿里技术参考图册-算法篇》</a></p></li><li><p><a href="http://dpurl.cn/n/1lqcX" target="_blank" rel="external">《2018美团点评技术年货（合辑）》70M</a></p></li><li><p><a href="http://www.infoq.com/cn/architect/" target="_blank" rel="external">InfoQ《架构师》月刊</a></p></li><li><p><a href="https://www.w3cschool.cn/architectroad/" target="_blank" rel="external">《架构师之路》</a></p></li></ul><h3 id="纸质书"><a href="#纸质书" class="headerlink" title="纸质书"></a>纸质书</h3><h4 id="开发方面"><a href="#开发方面" class="headerlink" title="开发方面"></a>开发方面</h4><ul><li>《阿里巴巴Java开发手册》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=BfL5CR" target="_blank" rel="external">详情</a></li></ul><h4 id="架构方面"><a href="#架构方面" class="headerlink" title="架构方面"></a>架构方面</h4><ul><li>《软件架构师的12项修炼：技术技能篇》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=rTlo0m" target="_blank" rel="external">详情</a></li><li>《架构之美》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=1KECBZ" target="_blank" rel="external">详情</a> </li><li>《分布式服务架构》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=hkzqtK" target="_blank" rel="external">详情</a> </li><li>《聊聊架构》 <a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=A8Nd6Z" target="_blank" rel="external">详情</a> </li><li>《云原生应用架构实践》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=D4WCpd" target="_blank" rel="external">详情</a> </li><li>《亿级流量网站架构核心技术》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=Rdmd21" target="_blank" rel="external">详情</a></li><li>《淘宝技术这十年》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=CoUdGG" target="_blank" rel="external">详情</a></li><li><p>《企业IT架构转型之道-中台战略思想与架构实战》 <a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=BxS6eI" target="_blank" rel="external">详情</a> </p></li><li><p>《高可用架构（第1卷）》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=BcjUwS" target="_blank" rel="external">详情</a> </p></li></ul><h4 id="技术管理方面"><a href="#技术管理方面" class="headerlink" title="技术管理方面"></a>技术管理方面</h4><ul><li>《CTO说》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=Gl3QAo" target="_blank" rel="external">详情</a> </li><li>《技术管理之巅》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=MeloLt" target="_blank" rel="external">详情</a></li><li>《网易一千零一夜：互联网产品项目管理实战》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=qPuqMg" target="_blank" rel="external">详情</a> </li></ul><h4 id="基础理论-1"><a href="#基础理论-1" class="headerlink" title="基础理论"></a>基础理论</h4><ul><li>《数学之美》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=0seUpO" target="_blank" rel="external">详情</a> </li><li>《编程珠玑》<a href="https://www.coderxing.com/r.php?r=https://union-click.jd.com/jdc?d=I7jj9r" target="_blank" rel="external">详情</a> </li></ul><h4 id="工具方面"><a href="#工具方面" class="headerlink" title="工具方面"></a>工具方面</h4><p>TODO</p><h4 id="大数据方面"><a href="#大数据方面" class="headerlink" title="大数据方面"></a>大数据方面</h4><h1 id="技术资源"><a href="#技术资源" class="headerlink" title="技术资源"></a>技术资源</h1><h2 id="开源资源"><a href="#开源资源" class="headerlink" title="开源资源"></a>开源资源</h2><ul><li><p><a href="https://github.com" target="_blank" rel="external">github</a></p></li><li><p><a href="https://www.apache.org/index.html" target="_blank" rel="external">Apache 软件基金会</a></p></li></ul><h2 id="手册、文档、教程"><a href="#手册、文档、教程" class="headerlink" title="手册、文档、教程"></a>手册、文档、教程</h2><p><strong>国内：</strong></p><ul><li><a href="http://w3cschool.cn" target="_blank" rel="external">W3Cschool</a> </li><li><p><a href="http://www.runoob.com/" target="_blank" rel="external">Runoob.com</a></p><ul><li>HTML 、 CSS、XML、Java、Python、PHP、设计模式等入门手册。</li></ul></li><li><p><a href="https://love2.io/" target="_blank" rel="external">Love2.io</a></p><ul><li>很多很多中文在线电子书，是一个全新的开源技术文档分享平台。</li></ul></li><li><a href="http://gitbook.cn/" target="_blank" rel="external">gitbook.cn</a><ul><li>付费电子书。 </li></ul></li><li><a href="http://www.apachecn.org/" target="_blank" rel="external">ApacheCN</a><ul><li>AI、大数据方面系列中文文档。</li></ul></li></ul><p><strong>国外：</strong></p><ul><li><a href="http://www.quickcode.co/" target="_blank" rel="external">Quick Code</a><ul><li>免费在线技术教程。</li></ul></li><li><a href="http://gitbook.com" target="_blank" rel="external">gitbook.com</a><ul><li>有部分中文电子书。</li></ul></li><li><a href="https://www.cheatography.com/" target="_blank" rel="external">Cheatography</a><ul><li>Cheat Sheets 大全，单页文档网站。</li></ul></li><li><a href="https://www.tutorialspoint.com/index.htm" target="_blank" rel="external">Tutorialspoint</a><ul><li>知名教程网站，提供Java、Python、JS、SQL、大数据等高质量入门教程。</li></ul></li></ul><h2 id="在线课堂"><a href="#在线课堂" class="headerlink" title="在线课堂"></a>在线课堂</h2><ul><li><a href="http://www.xuetuwuyou.com/" target="_blank" rel="external">学徒无忧</a></li><li><a href="https://time.geekbang.org/" target="_blank" rel="external">极客时间</a></li><li><a href="https://segmentfault.com/lives" target="_blank" rel="external">segmentfault</a></li><li><a href="https://new.stuq.org/course/explore" target="_blank" rel="external">斯达克学院</a></li><li><a href="http://nowcoder.com" target="_blank" rel="external">牛客网</a></li><li><a href="https://www.jikexueyuan.com/" target="_blank" rel="external">极客学院</a></li><li><a href="http://edu.51cto.com/" target="_blank" rel="external">51CTO学院</a></li></ul><h2 id="会议、活动"><a href="#会议、活动" class="headerlink" title="会议、活动"></a>会议、活动</h2><ul><li><a href="http://www.infoq.com/cn/qcon/" target="_blank" rel="external">QCon</a></li><li><a href="https://archsummit.com" target="_blank" rel="external">ArchSummit</a></li><li><a href="http://www.thegitc.com/" target="_blank" rel="external">GITC全球互联网技术大会</a></li></ul><p><strong>活动发布平台:</strong> </p><ul><li><a href="http://www.huodongxing.com/" target="_blank" rel="external">活动行</a></li></ul><h2 id="常用APP"><a href="#常用APP" class="headerlink" title="常用APP"></a>常用APP</h2><ul><li><a href="https://time.geekbang.org" target="_blank" rel="external">极客时间</a></li><li><a href="https://www.igetget.com" target="_blank" rel="external">得到</a></li></ul><h2 id="找工作"><a href="#找工作" class="headerlink" title="找工作"></a>找工作</h2><ul><li><a href="https://www.zhipin.com" target="_blank" rel="external">Boss直聘</a></li><li><a href="https://www.lagou.com" target="_blank" rel="external">拉勾网</a></li><li><a href="https://www.liepin.com" target="_blank" rel="external">猎聘</a></li><li><a href="https://cn.100offer.com/" target="_blank" rel="external">100Offer</a></li></ul><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li><a href="https://s.geekbang.org/" target="_blank" rel="external">极客搜索</a><ul><li>技术文章搜索引擎。</li></ul></li></ul><h2 id="代码托管"><a href="#代码托管" class="headerlink" title="代码托管"></a>代码托管</h2><ul><li><a href="https://coding.net" target="_blank" rel="external">Coding</a></li><li><a href="https://gitee.com/" target="_blank" rel="external">码云</a></li></ul><h2 id="文件服务"><a href="#文件服务" class="headerlink" title="文件服务"></a>文件服务</h2><ul><li>七牛</li><li>又拍云</li></ul><h2 id="综合云服务商"><a href="#综合云服务商" class="headerlink" title="综合云服务商"></a>综合云服务商</h2><ul><li>阿里云</li><li><a href="https://cloud.tencent.com/redirect.php?redirect=1012&amp;cps_key=c2665015d90871c0cb20fef91b7afc3c" target="_blank" rel="external">腾讯云</a></li><li>百度云</li><li>新浪云</li><li>金山云</li><li><a href="https://amazonaws-china.com/cn/" target="_blank" rel="external">亚马逊云(AWS)</a></li><li><a href="https://cloud.google.com/?hl=zh-cn" target="_blank" rel="external">谷歌云</a></li><li><a href="https://azure.microsoft.com/zh-cn/" target="_blank" rel="external">微软云</a></li></ul><h3 id="VPS"><a href="#VPS" class="headerlink" title="VPS"></a>VPS</h3><ul><li><a href="http://linode.com" target="_blank" rel="external">Linode</a></li><li><a href="https://www.digitalocean.com" target="_blank" rel="external">DigitalOcean</a></li><li><a href="https://www.vultr.com/" target="_blank" rel="external">Vultr</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;原文地址&lt;/code&gt;&lt;a href=&quot;https://github.com/xingshaocheng/architect-awesome&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xingshaoc
      
    
    </summary>
    
    
      <category term="学习资料" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>Python小实践   微博爬虫之数据分析</title>
    <link href="lovemefan.win/2018/06/20/python%20%E8%AF%8D%E4%BA%91/"/>
    <id>lovemefan.win/2018/06/20/python 词云/</id>
    <published>2018-06-20T03:39:00.000Z</published>
    <updated>2018-09-05T01:53:45.889Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-词云"><a href="#python-词云" class="headerlink" title="python 词云"></a>python 词云</h1><h2 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1. 前期准备"></a>1. 前期准备</h2><h3 id="1-1-下载相关库"><a href="#1-1-下载相关库" class="headerlink" title="1.1 下载相关库"></a>1.1 下载相关库</h3><ul><li>jieba (用于分词)</li><li>matplotlib</li><li>wordcloud<br><code>注意事项:</code><br>如果相关库安装失败,请到<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="external">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a>下载相应包手动安装,注意python版本号与操作系统位数,如下图,例如python3.6,64位操作系统则选择<code>cp36-win_amd64.whl</code>文件下载<br><img src="http://oskhhyaq3.bkt.clouddn.com/img/180905/6Ch55mcee6.png?imageslim" alt="mark"><h3 id="使用命令行安装相关库"><a href="#使用命令行安装相关库" class="headerlink" title="使用命令行安装相关库"></a>使用命令行安装相关库</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install 包名或本地包路径</div></pre></td></tr></table></figure></li></ul><h2 id="2-wordcloud"><a href="#2-wordcloud" class="headerlink" title="2. wordcloud"></a>2. wordcloud</h2><blockquote><p>wordcloud基于Python的词云生成类库,很好用,而且功能强大<br><a href="https://github.com/amueller/word_cloud" target="_blank" rel="external">Github</a><br><a href="https://amueller.github.io/word_cloud" target="_blank" rel="external">官方文档</a><br><a href="https://blog.csdn.net/fly910905/article/details/77763086" target="_blank" rel="external">参考博文</a></p></blockquote><h2 id="3-小试牛刀"><a href="#3-小试牛刀" class="headerlink" title="3. 小试牛刀"></a>3. 小试牛刀</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding: utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line"><span class="keyword">import</span> jieba.analyse</div><div class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</div><div class="line"><span class="keyword">from</span> scipy.misc <span class="keyword">import</span> imread</div><div class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</div><div class="line"></div><div class="line"><span class="comment"># mpl.use('TkAgg')</span></div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">keywords</span><span class="params">(mblogs)</span>:</span></div><div class="line">    text = []</div><div class="line">    <span class="keyword">for</span> blog <span class="keyword">in</span> mblogs:</div><div class="line">        keyword = jieba.analyse.extract_tags(blog[<span class="string">'text'</span>])</div><div class="line">        text.extend(keyword)</div><div class="line">    <span class="keyword">return</span> text</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_img</span><span class="params">(texts, img_file)</span>:</span></div><div class="line">    data = <span class="string">' '</span>.join(text <span class="keyword">for</span> text <span class="keyword">in</span> texts)</div><div class="line">    image_coloring = imread(img_file)</div><div class="line">    wc = WordCloud(</div><div class="line">        background_color=<span class="string">'white'</span>,</div><div class="line">        mask=image_coloring,</div><div class="line">        max_font_size=<span class="number">500</span>,  <span class="comment"># 设置字体最大值</span></div><div class="line">        font_path=<span class="string">'Fonts/HYC6GFM.TTF'</span>,</div><div class="line">        random_state = <span class="number">30</span>  <span class="comment"># 设置有多少种随机生成状态，即有多少种配色方案</span></div><div class="line">    )</div><div class="line">    wc.generate(data)</div><div class="line">    <span class="comment"># plt.figure()</span></div><div class="line">    <span class="comment"># plt.imshow(wc, interpolation="bilinear")</span></div><div class="line">    <span class="comment"># plt.axis("off")</span></div><div class="line">    <span class="comment"># plt.show()</span></div><div class="line"></div><div class="line">    wc.to_file(img_file.split(<span class="string">'.'</span>)[<span class="number">0</span>] + <span class="string">'_wc.png'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    keyword = <span class="string">'shida'</span></div><div class="line">    mblogs = json.loads(open(<span class="string">'result_&#123;&#125;.json'</span>.format(keyword), <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>).read())</div><div class="line">    print(<span class="string">'微博总数：'</span>, len(mblogs))</div><div class="line"></div><div class="line">    words = []</div><div class="line">    <span class="keyword">for</span> blog <span class="keyword">in</span> mblogs:</div><div class="line">        words.extend(jieba.analyse.extract_tags(blog[<span class="string">'text'</span>]))</div><div class="line"></div><div class="line">    print(<span class="string">"总词数："</span>, len(words))</div><div class="line">    print(words)</div><div class="line">    gen_img(words, <span class="string">'love.jpg'</span>)</div></pre></td></tr></table></figure><p>效果图</p><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180905/EhLH9dKA6g.png?imageslim" alt="mark"><br><img src="http://oskhhyaq3.bkt.clouddn.com/img/180905/02i70841eb.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;python-词云&quot;&gt;&lt;a href=&quot;#python-词云&quot; class=&quot;headerlink&quot; title=&quot;python 词云&quot;&gt;&lt;/a&gt;python 词云&lt;/h1&gt;&lt;h2 id=&quot;1-前期准备&quot;&gt;&lt;a href=&quot;#1-前期准备&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Python小实践   下载漫画</title>
    <link href="lovemefan.win/2018/06/12/%E7%88%AC%E5%8F%96%E5%89%8D%E5%87%86%E5%A4%87/"/>
    <id>lovemefan.win/2018/06/12/爬取前准备/</id>
    <published>2018-06-12T12:49:00.000Z</published>
    <updated>2018-09-04T03:15:21.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="爬取前准备"><a href="#爬取前准备" class="headerlink" title="爬取前准备"></a>爬取前准备</h1><p><a href="https://github.com/lovemefan/python_tools" target="_blank" rel="external">GitHub项目</a><br>目标网站:<a href="http://www.omanhua.com/comic/17521/" target="_blank" rel="external">http://www.omanhua.com/comic/17521/</a><br><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/jm0j3bkaiB.png?imageslim" alt="mark"></p><h2 id="分析网页"><a href="#分析网页" class="headerlink" title="分析网页"></a>分析网页</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"subBookList"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/comic/17521/366691/'</span> <span class="attr">title</span>=<span class="string">'332'</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">class</span>=<span class="string">'new'</span>&gt;</span>332<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/comic/17521/364901/'</span> <span class="attr">title</span>=<span class="string">'331'</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">class</span>=<span class="string">'new'</span>&gt;</span>331<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/comic/17521/364900/'</span> <span class="attr">title</span>=<span class="string">'腾讯动漫6周年福利活动！'</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">class</span>=<span class="string">'new'</span>&gt;</span>腾讯动漫6周年福利活动！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/comic/17521/364899/'</span> <span class="attr">title</span>=<span class="string">'330。他们也是我们'</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">class</span>=<span class="string">'new'</span>&gt;</span>330。他们也是我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/comic/17521/364730/'</span> <span class="attr">title</span>=<span class="string">'329'</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">class</span>=<span class="string">'new'</span>&gt;</span>329<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure><p>这里很明显 每个&amp;lta&amp;gt标签的href属性的值就是具体每一话的url<br>先点进一话的页面看看<br><a href="http://www.omanhua.com/comic/17521/366691/" target="_blank" rel="external">http://www.omanhua.com/comic/17521/366691/</a></p><h2 id="抓包分析"><a href="#抓包分析" class="headerlink" title="抓包分析"></a>抓包分析</h2><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/aJDLmKLIc8.png?imageslim" alt="mark"><br>哈哈,没错这个,这是当前显示的一张漫画.但是只有一张.再看看下一张<br><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/iij3m7cKh7.png?imageslim" alt="mark"><br>对比URL路径,我特么..,没有丝毫规律,陷入了僵局…,于是没有了后文.</p><p>我就像看个漫画嘛,要不是腾讯收费,我&amp;<em>%^</em>&amp;%.<br>但我还没有放弃,我打算看看js代码里有没有请求什么的痕迹<br>就在我垂头顿足的时候,我发现了再网页里的一段神奇的代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="xml">  var pVars = pVars || &#123;&#125;; var uzmh = uzmh || &#123;&#125;;eval(function(p,a,c,k,e,d)</span></div><div class="line">&#123;</div><div class="line">e=function(c)&#123;return(c</div><div class="line">    <span class="tag">&lt;<span class="name">a?"":e(parseInt(c</span>/<span class="attr">a</span>)))+((<span class="attr">c</span>=<span class="string">c%a)</span>&gt;</span>35?String.fromCharCode(c+29):c.toString(36))&#125;;</div><div class="line">if(!''.replace(/^/,String))&#123;while(c--)d[e(c)]=k[c]||e(c);k=[function(e)&#123;return d[e]&#125;];</div><div class="line">e=function()&#123;return'\\w+'&#125;;c=1;&#125;;</div><div class="line">while(c--)</div><div class="line">if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);</div><div class="line">return p;</div><div class="line">&#125;('h i=&#123;"g":1,"e":"4","f":"1.0","m":"/n/1/2/l.j","k":2,"6":"3","7":["8.0","c.0","5.0","b.0","9.0","a.0","d.0","o.0","D.0","E.0","C.0","A.0","B.0","I.0","J.0","H.0","F.0","G.0","z.0","s.0","t.0","r.0"],"p":q,"x":y,"w":"/u/v/4/3/"&#125;||&#123;&#125;;</div><div class="line">',46,46,'jpg|17521|366691|332|一人之下|388594b38e|cname|files|38ba1443ba|38f89724c3|381bce4fb2|3886aef5b2|38b823d13d|3857d21ce5|bname|bpic|bid|var|cInfo|html|cid|index|burl|comic|38779d6852|finished|false|3971856aff|399a8af80e|39cc4b3915|tu|undefined|path|len|22|39f92a9dae|387ed1275c|38e5f2512a|385573db27|387ab75347|3866af1df0|38d7d1fc53|382c0123f1|386a165c3e|3859ad824b|38e85b3b5a'.split('|'),0,&#123;&#125;))</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="小有成就"><a href="#小有成就" class="headerlink" title="小有成就"></a>小有成就</h2><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/G5L5cHjgFf.png?imageslim" alt="mark"><br>通过一比对<br>哇!!!我抑制不住内心的激动,这不就是图片名吗?<br>以上代码为例,包含了漫画编号(17521),漫画集数编号(36691),漫画集数(332),漫画名(一人之下),当前集的漫画图片数(len=22),以及每张图片的文件名(比如38ba1443ba.jpg)<br>大功告成!!!</p><h1 id="爬取图片"><a href="#爬取图片" class="headerlink" title="爬取图片"></a>爬取图片</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>有之前准备已经可以再页面上得到每一话的URL,每一话中的图片URL,剩下的就是对页面里的数据提取,分别下载了</p><h2 id="python-代码"><a href="#python-代码" class="headerlink" title="python 代码"></a>python 代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- codeing: utf-8 -*-</span></div><div class="line"><span class="comment"># @Time:2018/3/13 22:20</span></div><div class="line"><span class="comment"># @Author:lovemefan</span></div><div class="line"><span class="comment"># @File:一人之下漫画爬虫.py</span></div><div class="line"><span class="comment"># @Software:PyCharm</span></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> imp <span class="keyword">import</span> reload</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> requests</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"></div><div class="line">requestSession = requests.session()</div><div class="line"><span class="comment"># 保存一张图片</span></div><div class="line"><span class="comment"># 输入参数imgUrl 图片路径,imgPath 保存路径</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">savePicture</span><span class="params">(imgUrl, imgPath)</span>:</span></div><div class="line">    response = requests.get(imgUrl)</div><div class="line">    codimg = response.content</div><div class="line">    fn = open(imgPath, <span class="string">'wb'</span>)</div><div class="line">    fn.write(codimg)</div><div class="line">    fn.close()</div><div class="line"></div><div class="line"><span class="comment"># 一人之下的漫画路径</span></div><div class="line">url = <span class="string">"http://www.omanhua.com/comic/17521/"</span></div><div class="line">html = requests.get(url)</div><div class="line">html.encoding = <span class="string">'UTF-8'</span></div><div class="line"><span class="comment"># print(html.text)</span></div><div class="line"><span class="comment"># 先获取每一话</span></div><div class="line"><span class="comment"># 先将数据块取出</span></div><div class="line">bookListBlock = re.findall(<span class="string">r'&lt;div class="subBookList"&gt;(.*?)&lt;/div&gt;&lt;/div&gt;'</span>, html.text, re.S)</div><div class="line"><span class="comment"># booklist 为每一话的URL的列表</span></div><div class="line">bookList = re.findall(<span class="string">"&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='(.*?)' title='(.*?)'"</span>, bookListBlock[<span class="number">0</span>],re.S)</div><div class="line"></div><div class="line"><span class="comment"># 逐话操作</span></div><div class="line"><span class="keyword">for</span> index <span class="keyword">in</span> bookList:</div><div class="line">    indexUrl = <span class="string">"http://www.omanhua.com/"</span>+index[<span class="number">0</span>]+<span class="string">'index.html'</span></div><div class="line">    indexHtml = requests.get(indexUrl)</div><div class="line">    indexHtml.encoding = <span class="string">'UTF-8'</span></div><div class="line">    print(indexHtml.url)</div><div class="line">    <span class="comment"># 获得当前话的每张图片路径</span></div><div class="line">    picList = re.findall(<span class="string">"一人之下\|(.*?)'\."</span>, indexHtml.text)[<span class="number">0</span>].split(<span class="string">'|'</span>)</div><div class="line">    <span class="comment">#删去piclist无用的信息</span></div><div class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> picList[:]:</div><div class="line">        <span class="keyword">if</span> item.__len__() != <span class="number">10</span>:</div><div class="line">            picList.remove(item)</div><div class="line"></div><div class="line">    print(index[<span class="number">1</span>]+<span class="string">'共有%d页'</span>%picList.__len__())</div><div class="line">    picUrlRoot = <span class="string">u'http://pic.fxdm.cc/tu/undefined/一人之下/'</span></div><div class="line">    <span class="comment"># 指定存储位置</span></div><div class="line">    location = <span class="string">"J:/一人之下"</span></div><div class="line">    <span class="comment"># 分开放图片</span></div><div class="line">    <span class="comment"># for page in range(len(picList)):</span></div><div class="line">    <span class="comment">#     if not os.path.exists("%s/%s/"%(location,index[1])):</span></div><div class="line">    <span class="comment">#         os.makedirs("%s/%s/"%(location,index[1]))</span></div><div class="line">    <span class="comment">#     picUrl = picUrlRoot+ index[1]+'/'+picList[page]+'.jpg'</span></div><div class="line">    <span class="comment">#     path = "%s/%s/%d.jpg"%(location,index[1],page)</span></div><div class="line">    <span class="comment">#     picUrl.encode('UTF-8')</span></div><div class="line">    <span class="comment">#     #不下载已经下载过的图片,便于更新</span></div><div class="line">    <span class="comment">#     if not os.path.exists(path):</span></div><div class="line">    <span class="comment">#         savePicture(picUrl,path)</span></div><div class="line">    <span class="comment">#         print(picUrl + ' 保存到了 ' + path)</span></div><div class="line">    <span class="comment">#</span></div><div class="line"></div><div class="line">    <span class="comment"># 一起放图片</span></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(location):</div><div class="line">        os.makedirs(location)</div><div class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(len(picList)):</div><div class="line">        picUrl = picUrlRoot+ index[<span class="number">1</span>]+<span class="string">'/'</span>+picList[page]+<span class="string">'.jpg'</span></div><div class="line">        path = <span class="string">"%s/%s_%d.jpg"</span>%(location,index[<span class="number">1</span>],page)</div><div class="line">        picUrl.encode(<span class="string">'UTF-8'</span>)</div><div class="line">        <span class="comment"># 不下载已经下载过的图片,便于更新</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</div><div class="line">            savePicture(picUrl,path)</div><div class="line">            print(picUrl + <span class="string">' 保存到了 '</span> + path)</div></pre></td></tr></table></figure><p>如果想要图片分开放,取消掉注释的代码,注释掉后面一段代码</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/idJgkeGKgi.png?imageslim" alt="mark"></p><h3 id="分开放"><a href="#分开放" class="headerlink" title="分开放"></a>分开放</h3><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/8iDf2611JC.png?imageslim" alt="mark"></p><h3 id="一起放"><a href="#一起放" class="headerlink" title="一起放"></a>一起放</h3><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/J4gh2Gb514.png?imageslim" alt="mark"></p><p>我要去看漫画了,不要打扰我(/≧▽≦)/~┴┴ </p><h2 id="源码在这"><a href="#源码在这" class="headerlink" title="源码在这"></a><a href="https://github.com/lovemefan/python_tools/blob/master/%E6%BC%AB%E7%94%BB/%E4%B8%80%E4%BA%BA%E4%B9%8B%E4%B8%8B%E6%BC%AB%E7%94%BB%E7%88%AC%E8%99%AB.py" target="_blank" rel="external"><code>源码在这</code></a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;爬取前准备&quot;&gt;&lt;a href=&quot;#爬取前准备&quot; class=&quot;headerlink&quot; title=&quot;爬取前准备&quot;&gt;&lt;/a&gt;爬取前准备&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lovemefan/python_tools&quot; target
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Python小实践   微博爬虫</title>
    <link href="lovemefan.win/2018/05/28/%E6%8A%93%E5%8F%96%E5%A5%B3%E7%A5%9E%E5%BE%AE%E5%8D%9A%E5%8A%A8%E6%80%81%E5%B9%B6%E4%BF%9D%E5%AD%98%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>lovemefan.win/2018/05/28/抓取女神微博动态并保存到数据库/</id>
    <published>2018-05-28T10:25:00.000Z</published>
    <updated>2018-09-04T02:39:21.263Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抓取女神微博动态并保存到数据库"><a href="#抓取女神微博动态并保存到数据库" class="headerlink" title="抓取女神微博动态并保存到数据库"></a>抓取女神微博动态并保存到数据库</h1><p>偶少有刷微博,常常错过女神的动态.微博客户端也常常不给我推送动态,于是我想自己给自己推送,而且还想把数据保存到自己的数据库里,于是有了接下来的尝试</p><h2 id="使用chrome浏览器抓包"><a href="#使用chrome浏览器抓包" class="headerlink" title="使用chrome浏览器抓包"></a>使用chrome浏览器抓包</h2><p>这里随便用什么软件都可以,目的只是抓包.本人使用chrome抓包<br>按下F12,查看这两个getindex的数据包<br>需要获得两个参数<code>uid</code>和<code>containerid</code><br><img src="http://oskhhyaq3.bkt.clouddn.com/img/180528/7HhB9BliF2.png?imageslim" alt="mark"><br>这里需要通过手机版weibo <a href="http://m.weibo.com来进行模拟请求，不是通过分析html代码再通过筛选来完成数据抓取。" target="_blank" rel="external">http://m.weibo.com来进行模拟请求，不是通过分析html代码再通过筛选来完成数据抓取。</a><br>笔者先用postmen软件模拟一次post请求,返回结果如下<br><img src="http://oskhhyaq3.bkt.clouddn.com/img/180528/8c54K4H2E1.png?imageslim" alt="mark"><br>返回的是json数据,接下来就是处理数据了</p><h2 id="模拟请求"><a href="#模拟请求" class="headerlink" title="模拟请求"></a>模拟请求</h2><p>以下是python模拟的post请求<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line">cursor = db.cursor()</div><div class="line">url=<span class="string">"https://m.weibo.cn/api/container/getIndex"</span></div><div class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">    <span class="comment"># 用户的uid,containerid,以及页数.每页最多为十条记录</span></div><div class="line">    payload=&#123;<span class="string">'type'</span>:<span class="string">'uid'</span>,<span class="string">'value'</span>:<span class="string">'56xxxxxx00'</span>,<span class="string">'containerid'</span>:<span class="string">'1076xxxxxxxx5400'</span>,<span class="string">'page'</span>: <span class="string">'%d'</span>%page&#125;</div><div class="line">    r=requests.post(url,data=payload)</div><div class="line">    raw_text=r.text</div><div class="line">    d=json.loads(raw_text)</div><div class="line">``` </div><div class="line">由于每页只有最新的十条记录,所以需要把每一页的数据都存起来</div><div class="line"></div><div class="line"><span class="comment">## 数据库建表</span></div><div class="line">笔者选择了一些基本信息存储,并没有保存评论信息.其中包括</div><div class="line">* itemid 每条微博的ID</div><div class="line">* scheme 每条微博的跳转链接(方便查看)</div><div class="line">* id 也是用于表示每条微博的ID,具体与itemid的区别笔者未深究</div><div class="line">* created_at 发微博的时间,精确到天</div><div class="line">* text 微博内容</div><div class="line">* source 微博来源,比如手机型号</div><div class="line">* user_id 发微博的用户ID </div><div class="line">``` sql</div><div class="line">SET FOREIGN_KEY_CHECKS=<span class="number">0</span>;</div><div class="line"></div><div class="line">-- ----------------------------</div><div class="line">-- Table structure <span class="keyword">for</span> mblog</div><div class="line">-- ----------------------------</div><div class="line">DROP TABLE IF EXISTS `mblog`;</div><div class="line">CREATE TABLE `mblog` (</div><div class="line">  `itemid` varchar(<span class="number">40</span>) NOT NULL,</div><div class="line">  `scheme` varchar(<span class="number">100</span>) DEFAULT NULL,</div><div class="line">  `id` varchar(<span class="number">20</span>) DEFAULT NULL,</div><div class="line">  `created_at` varchar(<span class="number">10</span>) DEFAULT NULL,</div><div class="line">  `text` text,</div><div class="line">  `source` varchar(<span class="number">20</span>) DEFAULT NULL,</div><div class="line">  `user_id` varchar(<span class="number">20</span>) DEFAULT NULL,</div><div class="line">  PRIMARY KEY (`itemid`)</div><div class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</div></pre></td></tr></table></figure></p><h2 id="分析数据并插入表中"><a href="#分析数据并插入表中" class="headerlink" title="分析数据并插入表中"></a>分析数据并插入表中</h2><p>这里直接贴代码了,代码有详细注释<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- codeing: utf-8 -*-</span></div><div class="line"><span class="comment"># @Time:2018/5/28 14:31</span></div><div class="line"><span class="comment"># @Author:lovemefan</span></div><div class="line"><span class="comment"># @File:抓取女神微博动态保存到数据库.py</span></div><div class="line"><span class="comment"># @Software:PyCharm</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#原始URL:https://m.weibo.cn/p/100xxxxxxxx15400</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"><span class="comment"># 打开数据库连接</span></div><div class="line">db = pymysql.connect(<span class="string">"localhost"</span>, <span class="string">"账号"</span>, <span class="string">"密码"</span>, <span class="string">"数据库名"</span>, charset=<span class="string">'utf8'</span>)</div><div class="line"><span class="comment"># 使用cursor()方法获取操作游标</span></div><div class="line">cursor = db.cursor()</div><div class="line">url=<span class="string">"https://m.weibo.cn/api/container/getIndex"</span></div><div class="line">page = <span class="number">1</span></div><div class="line">sum = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">35</span>):</div><div class="line">    <span class="comment"># 用户的uid,containerid,以及页数.每页最多为十条记录</span></div><div class="line">    payload=&#123;<span class="string">'type'</span>:<span class="string">'uid'</span>,<span class="string">'value'</span>:<span class="string">'56xxxxxx00'</span>,<span class="string">'containerid'</span>:<span class="string">'10760xxxxxxxx400'</span>,<span class="string">'page'</span>: <span class="string">'%d'</span>%page&#125;</div><div class="line">    r=requests.post(url,data=payload)</div><div class="line">    raw_text=r.text</div><div class="line">    d=json.loads(raw_text)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">            print(<span class="string">"第%d页第%d条"</span>% (page,i))</div><div class="line">            print(d[<span class="string">"data"</span>][<span class="string">"cards"</span>])</div><div class="line">            itemid = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"itemid"</span>])</div><div class="line">            scheme = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"scheme"</span>])</div><div class="line">            id = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"mblog"</span>][<span class="string">"id"</span>])</div><div class="line">            create_at = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"mblog"</span>][<span class="string">"created_at"</span>])</div><div class="line">            <span class="comment">#将内容中的单引号换成双引号,否则插入数据库中会报错</span></div><div class="line">            text = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"mblog"</span>][<span class="string">"text"</span>]).replace(<span class="string">"'"</span>,<span class="string">"\""</span>)</div><div class="line">            source = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"mblog"</span>][<span class="string">"source"</span>])</div><div class="line">            user_id = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"mblog"</span>][<span class="string">"user"</span>][<span class="string">"id"</span>])</div><div class="line">            <span class="comment"># sql插入语句</span></div><div class="line">            sql = <span class="string">"insert ignore into mblog(itemid,scheme,id,created_at,text,source,user_id) VALUES('%s','%s','%s','%s','%s','%s','%s')"</span> % (itemid,scheme,id,create_at,text,source,user_id)</div><div class="line">            print(sql)</div><div class="line">            <span class="comment"># 执行sql语句</span></div><div class="line">            cursor.execute(sql)</div><div class="line">            <span class="comment"># 执行sql语句</span></div><div class="line">            db.commit()</div><div class="line">            sum = sum + <span class="number">1</span></div><div class="line">    <span class="keyword">except</span> IndexError:</div><div class="line">        <span class="comment"># 但记录不满10条的时候,捕获list越界异常,自动跳过</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line">    page = page + <span class="number">1</span></div><div class="line">    print(<span class="string">"第%d页执行成功"</span>%page)</div><div class="line">        <span class="comment"># print(["text"])</span></div><div class="line">db.close()</div><div class="line">print(<span class="string">"一共插入了%d的条记录"</span>% sum)</div></pre></td></tr></table></figure></p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180528/ICjHHa2I31.png?imageslim" alt="mark"><br>保存成功,然后就可以去翻数据库里的数据了.</p><h2 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h2><ul><li>只能一次性的保存至今的记录,后续添加监听并邮箱推送</li><li>后续可以添加数据分析,关键子词云</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;抓取女神微博动态并保存到数据库&quot;&gt;&lt;a href=&quot;#抓取女神微博动态并保存到数据库&quot; class=&quot;headerlink&quot; title=&quot;抓取女神微博动态并保存到数据库&quot;&gt;&lt;/a&gt;抓取女神微博动态并保存到数据库&lt;/h1&gt;&lt;p&gt;偶少有刷微博,常常错过女神的动态.微
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Android学习笔记 (三)   MP3播放器</title>
    <link href="lovemefan.win/2017/11/12/MP3%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <id>lovemefan.win/2017/11/12/MP3播放器/</id>
    <published>2017-11-12T05:58:00.000Z</published>
    <updated>2017-11-16T04:59:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Android学习笔记 (三)   MP3播放器：</strong> <excerpt in="" index="" |="" 首页摘要=""><br> 利用Intent 唤醒其他Activity或其他APP<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="MP3播放器"><a href="#MP3播放器" class="headerlink" title="MP3播放器"></a>MP3播放器</h1><p>整个音乐播放器设计模仿网易云音乐风格<br>工程源代码已上传至Github: <a href="https://github.com/lovemefan/MP3Player" target="_blank" rel="external">源码下载</a></p><p><strong>实现的功能</strong>:</p><ul><li><strong>1.</strong>暂停,开始音乐,后台播放</li><li><strong>2.</strong>进度条可拖动,能实现音乐跳转</li><li><strong>3.</strong>能够循环切换上一曲和下一曲</li><li><strong>4.</strong>播放完毕后自动下一曲</li><li><strong>5.</strong>歌曲封面有旋转的动画</li><li><strong>6.</strong>背景图片毛玻璃美化</li></ul><p><strong>待实现的功能</strong></p><ul><li>音乐列表</li><li>本地音乐读取播放</li><li>网络音乐播放</li></ul><h2 id="Music-java设计"><a href="#Music-java设计" class="headerlink" title="Music.java设计"></a>Music.java设计</h2><p>要播放多首音乐,首先设计一个音乐类用于存放歌曲信息,如歌曲名,封面图片的ID,音乐文件的ID<br><code>Music.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.lovemefan.mp3player;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.os.Parcel;</div><div class="line"><span class="keyword">import</span> android.os.Parcelable;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by Lovemefan on 2017/11/7.</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Music</span> <span class="keyword">implements</span> <span class="title">Parcelable</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> String name;<span class="comment">//歌曲名</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> coverId;<span class="comment">//封面的ID</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> resourceId;<span class="comment">//资源路径ID</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Music</span><span class="params">(String name, <span class="keyword">int</span> coverId, <span class="keyword">int</span> resourceId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">        <span class="keyword">this</span>.coverId = coverId;</div><div class="line">        <span class="keyword">this</span>.resourceId = resourceId;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCoverId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> coverId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCoverId</span><span class="params">(<span class="keyword">int</span> coverId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.coverId = coverId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getResourceId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> resourceId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResourceId</span><span class="params">(<span class="keyword">int</span> resourceId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.resourceId = resourceId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="comment">//    实现接口Parcelable需要重写下面两个方法</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel parcel, <span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line">        parcel.writeString(getName());</div><div class="line">        Bundle bundle = <span class="keyword">new</span> Bundle();</div><div class="line">        bundle.putInt(<span class="string">"coverId"</span>,getCoverId());</div><div class="line">        bundle.putInt(<span class="string">"resourceId"</span>,getResourceId());</div><div class="line">        parcel.writeBundle(bundle);</div><div class="line">    &#125;<span class="comment">//将成员变量一一写入Parcel中</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Creator&lt;Music&gt; CREATOR = <span class="keyword">new</span> Creator&lt;Music&gt;() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> Music <span class="title">createFromParcel</span><span class="params">(Parcel parcel)</span> </span>&#123;</div><div class="line">            Bundle bundle = parcel.readBundle();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Music(parcel.readString(), bundle.getInt(<span class="string">"coverId"</span>), bundle.getInt(<span class="string">"resourceId"</span>));</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="keyword">public</span> Music[] newArray(<span class="keyword">int</span> i) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Music[i];</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="后台服务类"><a href="#后台服务类" class="headerlink" title="后台服务类"></a>后台服务类</h2><p>为了让音乐能够在app后台运行,就要设计一个Service.<br><code>MusicPlayService.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.lovemefan.mp3player;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.Service;</div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.media.MediaPlayer;</div><div class="line"><span class="keyword">import</span> android.os.Binder;</div><div class="line"><span class="keyword">import</span> android.os.IBinder;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MusicPlayService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayer = <span class="keyword">null</span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MusicPlayService</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span></span>&#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> MediaPlayer <span class="title">getMediaPlayer</span><span class="params">()</span></span>&#123;</div><div class="line">            <span class="keyword">return</span> mediaPlayer;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyBinder();</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">        mediaPlayer = MediaPlayer.create(<span class="keyword">this</span>,R.raw.aimer_ninelie);<span class="comment">//设置初始值</span></div><div class="line"><span class="comment">//        mediaPlayer.start();</span></div><div class="line">        <span class="keyword">super</span>.onCreate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><p>由MainActivity绑定MusicPlayService服务,让音乐在服务中运行.另外还要创建一个线程来更新进度条和当前时间.<br><code>MainActivity.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.lovemefan.mp3player;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.ComponentName;</div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.content.ServiceConnection;</div><div class="line"><span class="keyword">import</span> android.content.res.AssetFileDescriptor;</div><div class="line"><span class="keyword">import</span> android.content.res.Resources;</div><div class="line"><span class="keyword">import</span> android.graphics.Bitmap;</div><div class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</div><div class="line"><span class="keyword">import</span> android.graphics.drawable.BitmapDrawable;</div><div class="line"><span class="keyword">import</span> android.media.AudioAttributes;</div><div class="line"><span class="keyword">import</span> android.media.MediaPlayer;</div><div class="line"><span class="keyword">import</span> android.os.Build;</div><div class="line"><span class="keyword">import</span> android.os.Handler;</div><div class="line"><span class="keyword">import</span> android.os.IBinder;</div><div class="line"><span class="keyword">import</span> android.os.Message;</div><div class="line"><span class="keyword">import</span> android.support.annotation.RequiresApi;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.view.Window;</div><div class="line"><span class="keyword">import</span> android.view.WindowManager;</div><div class="line"><span class="keyword">import</span> android.view.animation.Animation;</div><div class="line"><span class="keyword">import</span> android.view.animation.AnimationUtils;</div><div class="line"><span class="keyword">import</span> android.view.animation.LinearInterpolator;</div><div class="line"><span class="keyword">import</span> android.view.animation.RotateAnimation;</div><div class="line"><span class="keyword">import</span> android.widget.ImageView;</div><div class="line"><span class="keyword">import</span> android.widget.LinearLayout;</div><div class="line"><span class="keyword">import</span> android.widget.ProgressBar;</div><div class="line"><span class="keyword">import</span> android.widget.SeekBar;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">ServiceConnection</span> </span>&#123;</div><div class="line">    ArrayList&lt;Music&gt; musics = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    MediaPlayer mediaPlayer;<span class="comment">//媒体播放器</span></div><div class="line">    ImageView playButton;<span class="comment">//播放按钮</span></div><div class="line">    SeekBar progressBar ;<span class="comment">//进度条</span></div><div class="line">    TextView title;<span class="comment">//标题,用于显示歌名</span></div><div class="line">    TextView currentTime;<span class="comment">//显示当前播放的时间</span></div><div class="line">    TextView duration;<span class="comment">//显示歌曲时长</span></div><div class="line">    Handler handler ;<span class="comment">//用于其他线程更新</span></div><div class="line">    CircleImageView cover;<span class="comment">//显示歌曲的封面</span></div><div class="line">    LinearLayout root;<span class="comment">//根面板</span></div><div class="line">    <span class="keyword">int</span> musicProcess=<span class="number">0</span>;<span class="comment">//歌曲的进度;</span></div><div class="line">    <span class="keyword">int</span> musicCurIndex = <span class="number">0</span>;<span class="comment">//当前播放的歌曲的下标</span></div><div class="line">    Animation rotateAnimation ;</div><div class="line"></div><div class="line">    <span class="comment">//用于handle的handleMessage处理不同的事件</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UpdateCurrentTime=<span class="number">0</span>;<span class="comment">//刷新当前播放时间标识符</span></div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.LOLLIPOP)</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        supportRequestWindowFeature(Window.FEATURE_NO_TITLE);;<span class="comment">//去掉标题栏</span></div><div class="line">        <span class="keyword">this</span>.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);<span class="comment">//去掉信息栏</span></div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        activityInit();<span class="comment">//相关控件初始化</span></div><div class="line">        bindService(<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,MusicPlayService.class), MainActivity.<span class="keyword">this</span>, Context.BIND_AUTO_CREATE);<span class="comment">//绑定服务</span></div><div class="line"></div><div class="line">        musics.add(<span class="keyword">new</span> Music(<span class="string">"ninelie"</span>,R.drawable.nineliecover,R.raw.aimer_ninelie));</div><div class="line">        musics.add(<span class="keyword">new</span> Music(<span class="string">"像风一样"</span>,R.drawable.linkwinds,R.raw.like_winds));</div><div class="line">        musics.add(<span class="keyword">new</span> Music(<span class="string">"Let It Out"</span>,R.drawable.let_it_out,R.raw.let_it_out));</div><div class="line">        refreshMusicInfo(musics.get(<span class="number">0</span>));</div><div class="line">        <span class="comment">//</span></div><div class="line">        progressBar.setOnSeekBarChangeListener(<span class="keyword">new</span> SeekBar.OnSeekBarChangeListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgressChanged</span><span class="params">(SeekBar seekBar, <span class="keyword">int</span> i, <span class="keyword">boolean</span> b)</span> </span>&#123;</div><div class="line">                musicProcess = i;</div><div class="line">                <span class="comment">//自动播放下一曲</span></div><div class="line">                <span class="keyword">if</span>(mediaPlayer.getDuration() - musicProcess &lt; <span class="number">500</span>)&#123;</div><div class="line">                    musicCurIndex = (musicCurIndex + <span class="number">1</span>) % musics.size();</div><div class="line">                    refreshMusicInfo(musics.get(musicCurIndex));</div><div class="line">                    play();<span class="comment">//播放音乐</span></div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStopTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</div><div class="line">                mediaPlayer.seekTo(musicProcess);<span class="comment">//跳转到</span></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        handler = <span class="keyword">new</span> Handler(<span class="keyword">new</span> Handler.Callback()&#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">handleMessage</span><span class="params">(Message message)</span> </span>&#123;</div><div class="line">            <span class="keyword">switch</span> (message.what)&#123;</div><div class="line">                <span class="keyword">case</span> UpdateCurrentTime:currentTime.setText(secondsToMinutes(mediaPlayer.getCurrentPosition()));<span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        &#125;);</div><div class="line">        findViewById(R.id.playButton).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">                play();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">activityInit</span><span class="params">()</span></span>&#123;</div><div class="line">        playButton = (ImageView) findViewById(R.id.playButton);</div><div class="line">        progressBar = ( SeekBar) <span class="keyword">this</span>.findViewById(R.id.progressBar);</div><div class="line">        currentTime = (TextView) findViewById(R.id.curTime);</div><div class="line">        duration = (TextView) findViewById(R.id.duration);</div><div class="line">        title = (TextView) findViewById(R.id.musicName);</div><div class="line">        cover = (CircleImageView) findViewById(R.id.musicCover);</div><div class="line">        root = (LinearLayout) findViewById(R.id.root);</div><div class="line">        rotateAnimation =  AnimationUtils.loadAnimation(<span class="keyword">this</span>,R.anim.rotation);</div><div class="line">        rotateAnimation.setFillEnabled(<span class="keyword">true</span>);</div><div class="line">        rotateAnimation.setFillAfter(<span class="keyword">true</span>);</div><div class="line">        rotateAnimation.setInterpolator(<span class="keyword">new</span> LinearInterpolator());</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">        unbindService(MainActivity.<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"绑定成功"</span>);</div><div class="line">        mediaPlayer = ((MusicPlayService.MyBinder)iBinder).getMediaPlayer();</div><div class="line">        progressBar.setMax(mediaPlayer.getDuration());<span class="comment">//设置进度条</span></div><div class="line">        duration.setText(<span class="string">""</span>+secondsToMinutes(mediaPlayer.getDuration()));</div><div class="line">        currentTime.setText(<span class="string">"00:00"</span>);</div><div class="line">        System.out.println(mediaPlayer.getDuration());</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">secondsToMinutes</span><span class="params">(<span class="keyword">int</span> seconds)</span></span>&#123;</div><div class="line">        <span class="keyword">int</span> minute = seconds/<span class="number">60000</span>;</div><div class="line">        <span class="keyword">int</span> second = (seconds/<span class="number">1000</span>)%<span class="number">60</span>;</div><div class="line">        String  m = <span class="string">""</span>+ minute;</div><div class="line">        String  s = <span class="string">""</span> + second;</div><div class="line">        <span class="keyword">if</span> (minute&lt;<span class="number">10</span>)&#123;</div><div class="line">            m = <span class="string">"0"</span> + minute;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(second&lt;<span class="number">10</span>)&#123;</div><div class="line">           s = <span class="string">"0"</span> + second;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> m + <span class="string">":"</span> + s;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(mediaPlayer == <span class="keyword">null</span> )&#123;</div><div class="line">            System.out.println(<span class="string">"mediaplayer初始化失败"</span>);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">if</span>(mediaPlayer.isPlaying())&#123;</div><div class="line">                mediaPlayer.pause();</div><div class="line">                cover.clearAnimation();</div><div class="line">                playButton.setImageResource(R.drawable.play);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                mediaPlayer.start();</div><div class="line"></div><div class="line">                cover.startAnimation(rotateAnimation);</div><div class="line">                playButton.setImageResource(R.drawable.pause);</div><div class="line">            &#125;</div><div class="line">            System.out.println(mediaPlayer.isPlaying());</div><div class="line">            <span class="keyword">new</span> MyThread().start();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.LOLLIPOP)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refreshMusicInfo</span><span class="params">(Music curMusic)</span></span>&#123;</div><div class="line">        title.setText(curMusic.getName());<span class="comment">//设置歌曲名</span></div><div class="line">        <span class="comment">//        获取需要被模糊的原图bitmap</span></div><div class="line">        Resources res = getResources();</div><div class="line">        Bitmap scaledBitmap = BitmapFactory.decodeResource(res, curMusic.getCoverId());</div><div class="line">        <span class="comment">//        scaledBitmap为目标图像，25是缩放的倍数（越大模糊效果越高）</span></div><div class="line">        Bitmap blurBitmap = BlurImage.toBlur(scaledBitmap, <span class="number">50</span>);</div><div class="line">        root.setBackground(<span class="keyword">new</span> BitmapDrawable(blurBitmap));<span class="comment">//设置根面板背景</span></div><div class="line">        cover.setImageResource(curMusic.getCoverId());<span class="comment">//设置封面</span></div><div class="line">        <span class="keyword">if</span>(mediaPlayer == <span class="keyword">null</span>)&#123;</div><div class="line">            System.out.println(<span class="string">"mediaplayer初始化失败"</span>);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                AssetFileDescriptor afd = <span class="keyword">this</span>.getResources().openRawResourceFd(curMusic.getResourceId());</div><div class="line">                <span class="keyword">if</span> (afd == <span class="keyword">null</span>) &#123;</div><div class="line">                    Toast.makeText(<span class="keyword">this</span>,<span class="string">"音乐打开失败"</span>,Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;<span class="keyword">else</span>&#123;</div><div class="line">                    mediaPlayer.stop();</div><div class="line">                    <span class="keyword">final</span> AudioAttributes aa = <span class="keyword">new</span> AudioAttributes.Builder().build();</div><div class="line">                    mediaPlayer.setAudioAttributes(aa);</div><div class="line">                    mediaPlayer.setAudioSessionId(mediaPlayer.getAudioSessionId() + <span class="number">1</span>);</div><div class="line">                    mediaPlayer.setDataSource(afd.getFileDescriptor(), afd.getStartOffset(), afd.getLength());<span class="comment">//设置音乐源</span></div><div class="line">                    afd.close();<span class="comment">//关闭文件</span></div><div class="line">                    mediaPlayer.prepare();<span class="comment">//音乐准备</span></div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                Toast.makeText(<span class="keyword">this</span>,<span class="string">"音乐播放失败"</span>,Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">                currentTime.setText(<span class="string">"00:00"</span>);<span class="comment">//设置开始时间</span></div><div class="line">                duration.setText(secondsToMinutes(mediaPlayer.getDuration()));<span class="comment">//获取音乐时长,并设置时间</span></div><div class="line">                progressBar.setProgress(<span class="number">0</span>);<span class="comment">//将播放进度条清零</span></div><div class="line">                playButton.setImageResource(R.drawable.play);<span class="comment">//重新将按钮设置为播放</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.LOLLIPOP)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">previouMusic</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="comment">//可实现循环切换</span></div><div class="line">        musicCurIndex = (musicCurIndex + musics.size() -<span class="number">1</span>) % musics.size() ;<span class="comment">//加上music.size()防止出现负数</span></div><div class="line">        refreshMusicInfo(musics.get(musicCurIndex));</div><div class="line">        play();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.LOLLIPOP)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">nextMusic</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="comment">//可实现循环切换</span></div><div class="line">        musicCurIndex = (musicCurIndex + <span class="number">1</span>) % musics.size();</div><div class="line">        refreshMusicInfo(musics.get(musicCurIndex));</div><div class="line">        play();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</div><div class="line">        <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</div><div class="line">            <span class="keyword">while</span>(mediaPlayer.isPlaying())&#123;</div><div class="line">                progressBar.setMax(mediaPlayer.getDuration());</div><div class="line">                progressBar.setProgress(mediaPlayer.getCurrentPosition());</div><div class="line">                handler.sendMessage(Message.obtain());</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    Thread.sleep(<span class="number">1000</span>);</div><div class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                    <span class="comment">// TODO Auto-generated catch block</span></div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="界面设计"><a href="#界面设计" class="headerlink" title="界面设计"></a>界面设计</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.lovemefan.mp3player.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/root"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"fill_parent"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">        &gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">            <span class="attr">android:alpha</span>=<span class="string">"0.4"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#3c3c3c"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/musicName"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">                <span class="attr">android:textAlignment</span>=<span class="string">"center"</span></div><div class="line">                <span class="attr">android:textColorHighlight</span>=<span class="string">"@color/colorAccent"</span></div><div class="line">                <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></div><div class="line">                <span class="attr">android:textColor</span>=<span class="string">"#fff"</span></div><div class="line">                <span class="attr">android:textSize</span>=<span class="string">"18pt"</span> /&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/centerArea"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"7.5"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"fill_parent"</span></div><div class="line">                <span class="attr">android:layout_marginBottom</span>=<span class="string">"20dp"</span>&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></div><div class="line">                    <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></div><div class="line">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></div><div class="line">                    <span class="attr">android:src</span>=<span class="string">"@drawable/record"</span> /&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">com.lovemefan.mp3player.CircleImageView</span> <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/musicCover"</span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"225dp"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"225dp"</span></div><div class="line">                    <span class="attr">android:src</span>=<span class="string">"@drawable/nineliecover"</span></div><div class="line">                    <span class="attr">app:civ_border_color</span>=<span class="string">"#3c3c3c"</span></div><div class="line">                    <span class="attr">app:civ_border_width</span>=<span class="string">"2dp"</span></div><div class="line">                    <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></div><div class="line">                    <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></div><div class="line">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></div><div class="line">                    /&gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"20dp"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"-20dp"</span></div><div class="line">                <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/curTime"</span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"0pt"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                    <span class="attr">android:textAlignment</span>=<span class="string">"center"</span></div><div class="line">                    <span class="attr">android:layout_weight</span>=<span class="string">"1.2"</span> /&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">SeekBar</span></span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/progressBar"</span></div><div class="line">                    <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyleHorizontal"</span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                    <span class="attr">android:layout_weight</span>=<span class="string">"7.6"</span> /&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/duration"</span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                    <span class="attr">android:layout_weight</span>=<span class="string">"1.2"</span> /&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/playBar"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"1.5"</span></div><div class="line">            <span class="attr">android:alpha</span>=<span class="string">"0.4"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#3c3c3c"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/previouButton"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">                <span class="attr">android:layout_weight</span>=<span class="string">"2"</span></div><div class="line">                <span class="attr">android:onClick</span>=<span class="string">"previouMusic"</span></div><div class="line">                <span class="attr">app:srcCompat</span>=<span class="string">"@drawable/previous"</span> /&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/playButton"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">                <span class="attr">android:layout_weight</span>=<span class="string">"2"</span></div><div class="line">                <span class="attr">app:srcCompat</span>=<span class="string">"@drawable/play"</span> /&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/nextButton"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">                <span class="attr">android:layout_weight</span>=<span class="string">"2"</span></div><div class="line">                <span class="attr">android:onClick</span>=<span class="string">"nextMusic"</span></div><div class="line">                <span class="attr">app:srcCompat</span>=<span class="string">"@drawable/next"</span> /&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="界面效果"><a href="#界面效果" class="headerlink" title="界面效果"></a>界面效果</h2><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171116/dlca6h3hAD.png?imageslim" alt="mark"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171116/0GCA5kkBc2.png?imageslim" alt="mark"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171116/hKd52055A0.png?imageslim" alt="mark"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171116/jbaI2K4LC3.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Android学习笔记 (三)   MP3播放器：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt; 利用Intent 唤醒其他Activity或其他APP&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="lovemefan.win/tags/Android/"/>
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Android学习笔记 (二)   Intent唤醒其他Activity或APP</title>
    <link href="lovemefan.win/2017/10/20/Android%20%E5%A6%82%E4%BD%95%E5%94%A4%E9%86%92%E7%AC%AC%E4%B8%89%E6%96%B9APP/"/>
    <id>lovemefan.win/2017/10/20/Android 如何唤醒第三方APP/</id>
    <published>2017-10-20T10:43:00.000Z</published>
    <updated>2017-10-20T10:53:10.723Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Android学习笔记 (二)   Intent唤醒其他Activity或APP：</strong> <excerpt in="" index="" |="" 首页摘要=""><br> 利用Intent 唤醒其他Activity或其他APP<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Android-如何唤醒第三方APP"><a href="#Android-如何唤醒第三方APP" class="headerlink" title="Android 如何唤醒第三方APP"></a>Android 如何唤醒第三方APP</h1><h2 id="Intent类的通常用法"><a href="#Intent类的通常用法" class="headerlink" title="Intent类的通常用法"></a>Intent类的通常用法</h2><h3 id="1-启动-Activity："><a href="#1-启动-Activity：" class="headerlink" title="1.启动 Activity："></a><code>1.启动 Activity：</code></h3><blockquote><p>Activity 表示应用中的一个屏幕。通过将 Intent 传递给 startActivity()，您可以启动新的 Activity 实例。Intent 描述了要启动的 Activity，并携带了任何必要的数据。<br>如果您希望在 Activity 完成后收到结果，请调用 startActivityForResult()。在 Activity 的 onActivityResult() 回调中，您的 Activity 将结果作为单独的 Intent 对象接收。如需了解详细信息，请参阅 Activity 指南。</p></blockquote><h3 id="2-启动服务："><a href="#2-启动服务：" class="headerlink" title="2.启动服务："></a><code>2.启动服务：</code></h3><blockquote><p>Service 是一个不使用用户界面而在后台执行操作的组件。通过将 Intent 传递给 startService()，您可以启动服务执行一次性操作（例如，下载文件）。Intent 描述了要启动的服务，并携带了任何必要的数据。<br>如果服务旨在使用客户端-服务器接口，则通过将 Intent 传递给 bindService()，您可以从其他组件绑定到此服务。如需了解详细信息，请参阅服务指南。</p></blockquote><h3 id="3-传递广播："><a href="#3-传递广播：" class="headerlink" title="3.传递广播："></a><code>3.传递广播：</code></h3><blockquote><p>广播是任何应用均可接收的消息。系统将针对系统事件（例如：系统启动或设备开始充电时）传递各种广播。通过将 Intent 传递给 sendBroadcast()、sendOrderedBroadcast() 或 sendStickyBroadcast()，您可以将广播传递给其他应用。</p></blockquote><h3 id="以下内容只讨论启动Activity"><a href="#以下内容只讨论启动Activity" class="headerlink" title="以下内容只讨论启动Activity"></a><code>以下内容只讨论启动Activity</code></h3><h2 id="Intent-启动Activity"><a href="#Intent-启动Activity" class="headerlink" title="Intent 启动Activity"></a>Intent 启动Activity</h2><h3 id="1-启动Activity"><a href="#1-启动Activity" class="headerlink" title="1.启动Activity"></a>1.启动Activity</h3><p><code>代码示例:</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//调用系统默认浏览器打开百度</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openBaidu</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW);</div><div class="line">        intent.setData(Uri.parse(<span class="string">"http://www.baidu.com"</span>));<span class="comment">//设置url</span></div><div class="line">        startActivity(intent);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//调用系统电话,拨打10086.需要添加权限</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openCall</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (ActivityCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            <span class="comment">// <span class="doctag">TODO:</span> Consider calling</span></div><div class="line">            <span class="comment">//    ActivityCompat#requestPermissions</span></div><div class="line">            <span class="comment">// here to request the missing permissions, and then overriding</span></div><div class="line">            <span class="comment">//   public void onRequestPermissionsResult(int requestCode, String[] permissions,</span></div><div class="line">            <span class="comment">//                                          int[] grantResults)</span></div><div class="line">            <span class="comment">// to handle the case where the user grants the permission. See the documentation</span></div><div class="line">            <span class="comment">// for ActivityCompat#requestPermissions for more details.</span></div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        startActivity(<span class="keyword">new</span> Intent(Intent.ACTION_CALL, Uri.parse(<span class="string">"tel:10086"</span>)));</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//调用系统信息应用</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openSms</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW);</div><div class="line">        intent.setType(<span class="string">"vnd.android-dir/mms-sms"</span>);</div><div class="line">        intent.putExtra(<span class="string">"sms_body"</span>,<span class="string">""</span>); <span class="comment">//第二个参数为短信内容</span></div><div class="line">        startActivity(intent);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//打开QQ,uin=10000为打开qq10000的用户的聊天界面</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openQQ</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        EditText editText = (EditText)findViewById(R.id.editText);</div><div class="line">        startActivity(<span class="keyword">new</span> Intent(Intent.ACTION_VIEW,Uri.parse(<span class="string">"mqqwpa://im/chat?chat_type=wpa&amp;uin="</span>+ editText.getText()+<span class="string">"&amp;version=1"</span>)));</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//打开系统相机</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openCamera</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        startActivity(<span class="keyword">new</span> Intent(<span class="string">"android.media.action.STILL_IMAGE_CAMERA"</span>));</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//打开微信</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openWechat</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent();</div><div class="line">        ComponentName cmp = <span class="keyword">new</span> ComponentName(<span class="string">"com.tencent.mm"</span>,<span class="string">"com.tencent.mm.ui.LauncherUI"</span>);</div><div class="line">        intent.setAction(Intent.ACTION_MAIN);</div><div class="line">        intent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">        intent.setComponent(cmp);</div><div class="line">        startActivityForResult(intent, <span class="number">0</span>);</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="comment">//打开新浪微博</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openBlog</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent();</div><div class="line">        ComponentName cmp = <span class="keyword">new</span> ComponentName(<span class="string">"com.sina.weibo"</span>,<span class="string">"com.sina.weibo.SplashActivity"</span>);</div><div class="line">        intent.setAction(Intent.ACTION_MAIN);</div><div class="line">        intent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">        intent.setComponent(cmp);</div><div class="line">        startActivityForResult(intent, <span class="number">0</span>);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><p><code>以上代码主要用了两种方法设置将要跳转的Activity的信息,第一个是设置Uri,第二种是设置Component来实现跳转</code></p><h3 id="2-启动APP"><a href="#2-启动APP" class="headerlink" title="2.启动APP"></a>2.启动APP</h3><p>对于第三方APP,笔者主要采用设置<code>Component</code>的方法</p><p>在监听器或其他区域,输入以下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent();</div><div class="line"><span class="comment">//ComponentName(String psk,String cls)</span></div><div class="line"><span class="comment">//PKG的组件存在的包的名字。不能为空。CLS的PKG实现组件的内部类的名字。不能为空。</span></div><div class="line">      ComponentName cmp = <span class="keyword">new</span> ComponentName(<span class="string">"com.tencent.mm"</span>,<span class="string">"com.tencent.mm.ui.LauncherUI"</span>);<span class="comment">//启动微信</span></div><div class="line">      intent.setAction(Intent.ACTION_MAIN);</div><div class="line">      intent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">      intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">      intent.setComponent(cmp);</div><div class="line">      startActivityForResult(intent, <span class="number">0</span>);</div></pre></td></tr></table></figure><h2 id="一些安卓应用的pkg和cls"><a href="#一些安卓应用的pkg和cls" class="headerlink" title="一些安卓应用的pkg和cls"></a>一些安卓应用的pkg和cls</h2><p><code>以下的APP都是根据笔者的当前手机的app导出得到的,所以只有部分常用的应用</code><br>导出App信息(pkg和cls)项目:<a href="https://github.com/lovemefan/PackageMangerDemo" target="_blank" rel="external">https://github.com/lovemefan/PackageMangerDemo</a><br>|应用|pkg |cls |<br>|:——–|:———-:|:————–:|<br>|阿里云|com.alibaba.aliyun|com.alibaba.aliyun.biz.login.WelcomeActivity|<br>|爱奇艺|com.qiyi.video|com.qiyi.video.WelcomeActivity|<br>|百度贴吧|com.baidu.tieba|com.baidu.tieba.LogoActivity|<br>|百度网盘|com.baidu.netdisk|com.baidu.netdisk.ui.Navigate|<br>|备忘录|com.samsung.android.app.memo|com.samsung.android.app.memo.Main|<br>|哔哩哔哩|tv.danmaku.bili|tv.danmaku.bili.ui.splash.SplashActivity|<br>|车来了|com.ygkj.chelaile.standard|dev.xesam.chelaile.app.module.func.SplashActivity|<br>|电话|com.android.contacts|com.android.dialer.DialtactsActivity|<br>|电子邮件|com.samsung.android.email.provider|com.samsung.android.email.ui.activity.MessageListXL|<br>|盖乐世空间|com.samsung.android.voc|com.samsung.android.voc.LauncherActivity|<br>|高德地图|com.autonavi.minimap|com.autonavi.map.activity.SplashActivity|<br>|高铁管家12306火车票|com.gtgj.view|com.gtgj.view.LaunchActivity|<br>|黑域|me.piebridge.brevent|me.piebridge.brevent.ui.BreventActivity|<br>|计算器|com.sec.android.app.popupcalculator|com.sec.android.app.popupcalculator.Calculator|<br>|交管12123|com.tmri.app.main|com.tmri.app.ui.activity.TmriActivity|<br>|京东|com.jingdong.app.mall|com.jingdong.app.mall.main.MainActivity|<br>|联系人|com.android.contacts|com.android.contacts.activities.PeopleActivity|<br>|猎吧出行|com.example.liabarcarandroid|com.liabarcar.guide.SplashActivity|<br>|浏览器|com.sec.android.app.sbrowser|com.sec.android.app.sbrowser.SBrowserMainActivity|<br>|录音机|com.sec.android.app.voicenote|com.sec.android.app.voicenote.main.VNMainActivity|<br>|南昌航空大学|com.eteasun.nanhang|com.eteasun.nanhang.activity.WelcomeActvity|<br>|全民K歌|com.tencent.karaoke|com.tencent.karaoke.module.splash.ui.SplashBaseActivity|<br>|三星健康|com.sec.android.app.shealth|com.samsung.android.app.shealth.home.HomeMainActivity|<br>|三星生活助手|com.samsung.android.app.sreminder|com.samsung.android.app.sreminder.phone.cardlist.SReminderActivity|<br>|三星视频|com.samsung.android.onlinevideo|com.samsung.android.onlinevideo.list.activity.VideoList|<br>|三星音乐|com.samsung.android.app.music.chn|com.samsung.android.app.music.common.activity.MusicMainActivity|<br>|三星阅读|com.mci.smagazine|com.chaozh.iReader.ui.activity.WelcomeActivity|<br>|三星云|com.samsung.multidevicecloud|com.kanbox.wp.Main|<br>|扫描全能王|com.intsig.camscanner|com.intsig.camscanner.WelcomeActivity|<br>|扇贝单词|com.shanbay.words|com.shanbay.words.startup.SplashActivity|<br>|设置|com.android.settings|com.android.settings.Settings|<br>|时钟|com.sec.android.app.clockpackage|com.sec.android.app.clockpackage.ClockPackage|<br>|手机淘宝|com.taobao.taobao|com.taobao.tao.welcome.Welcome|<br>|手机营业厅|com.sinovatech.unicom.ui|com.sinovatech.unicom.ui.WelcomeClient|<br>|搜狐视频|com.sohu.sohuvideo|com.sohu.sohuvideo.FirstNavigationActivityGroup|<br>|腾讯动漫|com.qq.ac.android|com.qq.ac.android.view.activity.SplashActivity|<br>|腾讯课堂|com.tencent.edu|com.tencent.edu.module.SplashActivity|<br>|腾讯视频|com.tencent.qqlive|com.tencent.qqlive.ona.activity.WelcomeActivity|<br>|通卡宝|com.nci.tkb|com.nci.tkb.ui.SplashActivity|<br>|网易有道词典|com.youdao.dict|com.youdao.dict.activity.DictSplashActivity|<br>|网易云音乐|com.netease.cloudmusic|com.netease.cloudmusic.activity.LoadingActivity|<br>|微博|com.sina.weibo|com.sina.weibo.SplashActivity|<br>|微信|com.tencent.mm|com.tencent.mm.ui.LauncherUI|<br>|我的文件|com.sec.android.app.myfiles|com.sec.android.app.myfiles.common.MainActivity|<br>|闲鱼|com.taobao.idlefish|com.taobao.fleamarket.home.activity.InitActivity.Round|<br>|相册|com.sec.android.gallery3d|com.sec.android.gallery3d.app.GalleryOpaqueActivity|<br>|相机|com.sec.android.app.camera|com.sec.android.app.camera.Camera|<br>|小米VR|com.mi.dlabs.vr.hulk|com.mi.dlabs.vr.hulk.launch.HulkLaunchActivity|<br>|信息|com.android.mms|com.android.mms.ui.ConversationComposer|<br>|一键锁屏|com.yujing.lockscreen|com.yujing.lockscreen.MainActivity|<br>|应用商店|com.sec.android.app.samsungapps|com.sec.android.app.samsungapps.SamsungAppsMainActivity|<br>|影梭|com.github.shadowsocks|com.github.shadowsocks.Shadowsocks|<br>|优酷|com.youku.phone|com.youku.phone.ActivityWelcome|<br>|悦动圈|com.yuedong.sport|com.yuedong.sport.main.WelcomeActivity_|<br>|支付宝|com.eg.android.AlipayGphone|com.eg.android.AlipayGphone.AlipayLogin|<br>|知乎|com.zhihu.android|com.zhihu.android.app.ui.activity.MainActivity|<br>|智能管理器|com.samsung.android.sm|com.samsung.android.sm.app.dashboard.SmartManagerDashBoardActivity|<br>|主题商店|com.samsung.android.themestore|com.samsung.android.themestore.activity.Launcher|<br>|租八戒|com.rentpig.customer|com.rentpig.customer.main.WelcomeActivity|<br>|AChm Free|com.pchen.achmfree|com.pchen.achm.MainActivity|<br>|Chrome|com.android.chrome|com.google.android.apps.chrome.Main|<br>|ES文件浏览器|com.estrongs.android.pop|com.estrongs.android.pop.app.openscreenad.NewSplashActivity|<br>|Excel|com.microsoft.office.excel|com.microsoft.office.apphost.LaunchActivity|<br>|Github|com.seasonfif.github|com.seasonfif.github.ui.activity.SplashScreenActivity|<br>|IT之家|com.ruanmei.ithome|com.ruanmei.ithome.ui.MainActivity|<br>|netkeeper|com.xinli.netkeeper|com.xinli.netkeeper.activitys.WelcomeActivity|<br>|ofo共享单车|so.ofo.labofo|so.ofo.labofo.activities.EntryActivity|<br>|QQ|com.tencent.mobileqq|com.tencent.mobileqq.activity.SplashActivity|<br>|RD Client Beta|com.microsoft.rdc.android.beta|com.microsoft.rdc.ui.activities.HomeActivity|<br>|S 换机助手|com.sec.android.easyMover|com.sec.android.easyMover.DistributionActivity|<br>|S 日历|com.android.calendar|com.android.calendar.AllInOneActivity|<br>|S Voice|com.samsung.voiceserviceplatform|com.samsung.voiceserviceplatform.ui.SVoiceMainActivity|<br>|Samsung Gear|com.samsung.android.app.watchmanager|com.samsung.android.app.watchmanager.setupwizard.SetupWizardWelcomeActivity|<br>|Super Pads|com.opalastudios.pads|com.opalastudios.pads.ui.MainActivity|<br>|Survival Online|com.gameline.survivalcraftfree|com.unity3d.player.UnityPlayerActivity|<br>|TapTap|com.taptap|com.play.taptap.ui.MainAct|<br>|UC浏览器|com.UCMobile|com.UCMobile.main.UCMobile|<br>|USIM卡应用|com.android.stk|com.android.stk.StkLauncherActivity|<br>|WiFi万能钥匙|com.snda.wifilocating|com.lantern.launcher.ui.MainActivity|<br>|Word|com.microsoft.office.word|com.microsoft.office.apphost.LaunchActivity|</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Android学习笔记 (二)   Intent唤醒其他Activity或APP：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt; 利用Intent 唤醒其他Activity或其他APP&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="lovemefan.win/tags/Android/"/>
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Excel 宏命令处理(一)</title>
    <link href="lovemefan.win/2017/10/18/Excel%20%E5%AE%8F%E5%91%BD%E4%BB%A4%E5%A4%84%E7%90%86/"/>
    <id>lovemefan.win/2017/10/18/Excel 宏命令处理/</id>
    <published>2017-10-18T05:58:00.000Z</published>
    <updated>2017-10-18T12:53:11.712Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Excel 宏命令处理(一)：</strong> <excerpt in="" index="" |="" 首页摘要=""></excerpt></p><a id="more"></a><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Excel-宏命令处理"><a href="#Excel-宏命令处理" class="headerlink" title="Excel 宏命令处理"></a>Excel 宏命令处理</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;在我们工作的时候,常常会遇到大量的数据处理.人工操作费时费力,于是笔者开始百度看看有没有什么自动化的方法,最后发现了excel可以使用宏指令来实现编程式处理.</p><h2 id="Excel-VBA"><a href="#Excel-VBA" class="headerlink" title="Excel VBA"></a>Excel VBA</h2><blockquote><p> Visual Basic for Applications(VBA)是Visual Basic的一种宏语言，是微软开发出来在其桌面应用程序中执行通用的自动化(OLE)任务的编程语言。主要能用来扩展Windows的应用程式功能，特别是Microsoft Office软件。也可说是一种应用程式视觉化的Basic 脚本。该语言于1993年由微软公司开发的的应用程序共享一种通用的自动化语言——–Visual Basic For Application(VBA)，实际上VBA是寄生于VB应用程序的版本。微软在1994年发行的Excel5.0版本中，即具备了VBA的宏功能。<br>要熟悉VBA，那么就不得不先了解宏和它们之间的关系。<br>VBA被称为宏语言，但是它决不能和宏划上等号，宏是一条指令或者几条指令的集合，控制WORD或EXCEL等执行一连串的操作。而VBA则是不折不扣的高级语言，通过面向对象的方法来实现不能实现的功能。在编辑一个宏的时候，visual basic 编辑器会将这个宏记录为一个VBA过程<br>VBA使应用程序具有生命的特征，以适应不同的环境，不同的应用，其主要表现为定制、自动化、协作化。<br>VBA的特点是将VB语言与应用对象模型结合起来，处理各种应用需求。WORD VBA则是将VB应用于Word对象模型，或者说是用VB语言来操控这些Word对象模型，以达到各种应用的要求。所以，如果你想通过VBA控制WORD或EXCEL，必须同时熟悉VB语言和Word对象模型。</p></blockquote><h2 id="如何使用VBA"><a href="#如何使用VBA" class="headerlink" title="如何使用VBA"></a>如何使用VBA</h2><p><code>视图-宏</code><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171018/hHHBK2h4eh.png?imageslim" alt="VBA"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171018/F7CBBaFhH3.png?imageslim" alt="mark"></p><p>如果不能使用宏,可能你的excel禁用了.启动即可<br>启用方式:<br><code>文件-选项-信任中心-信任中心设置-宏设置-启用所有宏</code><br>配合录制宏就可以试着写代码了</p><h2 id="Sheet-分割示例"><a href="#Sheet-分割示例" class="headerlink" title="Sheet 分割示例"></a>Sheet 分割示例</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Sub</span> 自动分类()</div><div class="line"></div><div class="line"><span class="comment">' 前提条件:总表已经根据某个要分类的标识字段排好了顺序</span></div><div class="line"><span class="comment">' 此方法是将一张数据量非常大的sheet表按某个字段进行分类并分割成不同的sheet表</span></div><div class="line"><span class="comment">' 同时将该sheet的名称命名为sheet内标识该sheet的字段的名称</span></div><div class="line">    <span class="keyword">Dim</span> sheetPage As Integer</div><div class="line">    <span class="keyword">Dim</span> length As Integer <span class="comment">'总表的最后一列的列数</span></div><div class="line">    <span class="keyword">Dim</span> i As Integer</div><div class="line">    <span class="keyword">Dim</span> Name As <span class="built_in">String</span></div><div class="line">    <span class="keyword">Dim</span> topLeft As Integer <span class="comment">'所选区域的左上角</span></div><div class="line">    <span class="keyword">Dim</span> bottomRight As Integer <span class="comment">'所选区域的右下角</span></div><div class="line">    </div><div class="line"> <span class="comment">'  参数初始化</span></div><div class="line">    Name = <span class="string">"2013"</span> <span class="comment">'总表的名称</span></div><div class="line">    length = <span class="number">1510</span> <span class="comment">'总表的最后一列的列数</span></div><div class="line">    sheetPage = <span class="number">4</span> <span class="comment">'从第几张sheet开始生成</span></div><div class="line">    topLeft = <span class="number">2</span>   <span class="comment">'初始从第几列开始</span></div><div class="line">    bottomRight = <span class="number">2</span> <span class="comment">'初始从第几列结束</span></div><div class="line"> <span class="comment">'</span></div><div class="line">    <span class="comment">'先建表</span></div><div class="line">        <span class="keyword">For</span> i = <span class="number">2</span> <span class="keyword">To</span> length</div><div class="line">            Sheets(Name).<span class="keyword">Select</span></div><div class="line">            bottomRight = i</div><div class="line">            <span class="keyword">If</span> Range(<span class="string">"A"</span> &amp; topLeft).Value &lt;&gt; Range(<span class="string">"A"</span> &amp; bottomRight).Value <span class="keyword">Then</span></div><div class="line">                Sheets.Add After:=ActiveSheet</div><div class="line">                topLeft = bottomRight</div><div class="line">            <span class="keyword">End</span> <span class="keyword">If</span></div><div class="line">        <span class="keyword">Next</span> i</div><div class="line">    <span class="comment">'割分</span></div><div class="line">    </div><div class="line">        topLeft = <span class="number">2</span></div><div class="line">        <span class="keyword">For</span> i = <span class="number">2</span> <span class="keyword">To</span> length</div><div class="line">           Sheets(Name).<span class="keyword">Select</span></div><div class="line">           </div><div class="line">           bottomRight = i</div><div class="line">           <span class="keyword">If</span> Range(<span class="string">"A"</span> &amp; topLeft).Value &lt;&gt; Range(<span class="string">"A"</span> &amp; bottomRight).Value <span class="keyword">Then</span></div><div class="line">                Sheets(Name).<span class="keyword">Select</span></div><div class="line">                Range(<span class="string">"A"</span> &amp; topLeft &amp; <span class="string">":"</span> &amp; <span class="string">"G"</span> &amp; (bottomRight - <span class="number">1</span>)).<span class="keyword">Select</span> <span class="comment">'选择从AtopLeft到Gbottom的区域等待复制</span></div><div class="line">                Selection.Copy</div><div class="line">                </div><div class="line">                Sheets(sheetPage).<span class="keyword">Select</span></div><div class="line">                Range(<span class="string">"A1"</span>).<span class="keyword">Select</span></div><div class="line">                ActiveSheet.Paste</div><div class="line">                Sheets(sheetPage).Name = Range(<span class="string">"A1"</span>).Value</div><div class="line">                sheetPage = sheetPage + <span class="number">1</span></div><div class="line">                topLeft = bottomRight</div><div class="line">           <span class="keyword">End</span> <span class="keyword">If</span></div><div class="line">            </div><div class="line">        <span class="keyword">Next</span> i</div><div class="line">        </div><div class="line">         Sheets(<span class="string">"2013"</span>).<span class="keyword">Select</span></div><div class="line">         Range(<span class="string">"A"</span> &amp; topLeft &amp; <span class="string">":"</span> &amp; <span class="string">"G"</span> &amp; (bottomRight - <span class="number">1</span>)).<span class="keyword">Select</span></div><div class="line">         Selection.Copy</div><div class="line">         </div><div class="line">         Sheets(sheetPage - <span class="number">1</span>).<span class="keyword">Select</span></div><div class="line">         Sheets.Add After:=ActiveSheet</div><div class="line">         Sheets(sheetPage).<span class="keyword">Select</span></div><div class="line">         </div><div class="line">         Range(<span class="string">"A1"</span>).<span class="keyword">Select</span></div><div class="line">         ActiveSheet.Paste</div><div class="line">         sheetName = Range(<span class="string">"A1"</span>).Value</div><div class="line">         Sheets(sheetPage).Name = sheetName</div><div class="line">         </div><div class="line">         topLeft = bottomRight</div><div class="line">    </div><div class="line">    </div><div class="line">    </div><div class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></div><div class="line"><span class="keyword">Sub</span> 排序()</div><div class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> Sh <span class="keyword">In</span> Worksheets</div><div class="line">        <span class="keyword">If</span> Sh.Index &gt; <span class="number">4</span> <span class="keyword">Then</span>  <span class="comment">'限定工作表范围</span></div><div class="line">            Sh.<span class="keyword">Select</span></div><div class="line">            Columns(<span class="string">"B:B"</span>).<span class="keyword">Select</span></div><div class="line">            Sh.Sort.SortFields.Clear</div><div class="line">            Sh.Sort.SortFields.Add Key:=Range(<span class="string">"B1"</span>), _</div><div class="line">                SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal</div><div class="line">            <span class="keyword">With</span> Sh.Sort</div><div class="line">                .SetRange Range(<span class="string">"A1:G69"</span>)</div><div class="line">                .Header = xlNo</div><div class="line">                .MatchCase = <span class="literal">False</span></div><div class="line">                .Orientation = xlTopToBottom</div><div class="line">                .SortMethod = xlPinYin</div><div class="line">                .Apply</div><div class="line">            <span class="keyword">End</span> <span class="keyword">With</span></div><div class="line">            <span class="keyword">End</span> <span class="keyword">If</span></div><div class="line">        <span class="keyword">Next</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></div></pre></td></tr></table></figure><h2 id="github源码下载"><a href="#github源码下载" class="headerlink" title="github源码下载"></a><a href="https://github.com/lovemefan/Excell-Macro" target="_blank" rel="external">github源码下载</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Excel 宏命令处理(一)：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;/excerpt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="VBA" scheme="lovemefan.win/tags/VBA/"/>
    
      <category term="Excel" scheme="lovemefan.win/tags/Excel/"/>
    
      <category term="宏命令" scheme="lovemefan.win/tags/%E5%AE%8F%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Java学习笔记 (一)   基于Robot类的一些自动测试类的一些应用</title>
    <link href="lovemefan.win/2017/10/17/Java%20Robot%E7%B1%BB%E7%9A%84%E4%B8%80%E4%BA%9B%E5%BA%94%E7%94%A8/"/>
    <id>lovemefan.win/2017/10/17/Java Robot类的一些应用/</id>
    <published>2017-10-17T13:03:00.000Z</published>
    <updated>2017-10-17T13:06:08.604Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Java学习笔记 (一)   基于Robot类的一些自动测试类的一些应用：</strong> <excerpt in="" index="" |="" 首页摘要=""></excerpt></p><a id="more"></a><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Java-Robot类的一些应用"><a href="#Java-Robot类的一些应用" class="headerlink" title="Java Robot类的一些应用"></a>Java Robot类的一些应用</h1><h2 id="Robot简介"><a href="#Robot简介" class="headerlink" title="Robot简介"></a>Robot简介</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;Robot类是JAVA程序实现自动测试，自动演示功能，或者是其它的一些鼠标和键盘控制的应用。出于这样的目的，自从JDK1.3开始，它就为我们提供了一个用来产生本机输入事件的机器人类－－java.awt.Robot.<br>&nbsp;&nbsp;&nbsp;&nbsp;此类本来是通过操作鼠标键盘来完成软件的自动测试使用的,我们可以利用Robot类来实现一些我们想要达到的结果</p><h2 id="Robot-API"><a href="#Robot-API" class="headerlink" title="Robot API"></a>Robot API</h2><p><a href="https://docs.oracle.com/javase/7/docs/api/java/awt/Robot.html" target="_blank" rel="external">官方英文API</a><br><code>Robot类其中的方法:</code><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171017/17j0LJJLEB.png?imageslim" alt="methods"></p><p>通过查看API,Robot类提供了<code>截屏</code> <code>获取屏幕某一点的像素的颜色``键盘按下和释放事件``鼠标点击和释放事件``鼠标移动事件``鼠标滑轮事件</code>.</p><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p>这个demo是来实现模拟键盘的一个例子.实现一个信息轰炸功能.<br>点击运行后,将光标移到输入区域,程序运行五秒之后会在光标出不断输出字符.<br>其中还要使用到java.awt.event.KeyEvent类中的键值<br>代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.awt.AWTException;</div><div class="line"><span class="keyword">import</span> java.awt.Robot;</div><div class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sendMessage</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> delayTime;</div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> range;</div><div class="line">Robot robot ;</div><div class="line">Map map;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">sendMessage</span><span class="params">(<span class="keyword">int</span> delayTime,<span class="keyword">int</span> range)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">this</span>.delayTime = delayTime;</div><div class="line"><span class="keyword">this</span>.range = range;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="comment">//使用map 将控制键盘的常量存起来，好方便取用。</span></div><div class="line">map = <span class="keyword">new</span> HashMap();</div><div class="line">map.put(<span class="number">0</span>, <span class="number">0x30</span>);<span class="comment">//键盘的0</span></div><div class="line">map.put(<span class="number">1</span>, <span class="number">0x31</span>);<span class="comment">//键盘的1</span></div><div class="line">map.put(<span class="number">2</span>, <span class="number">0x32</span>);</div><div class="line">map.put(<span class="number">3</span>, <span class="number">0x33</span>);</div><div class="line">map.put(<span class="number">4</span>, <span class="number">0x34</span>);</div><div class="line">map.put(<span class="number">5</span>, <span class="number">0x35</span>);</div><div class="line">map.put(<span class="number">6</span>, <span class="number">0x36</span>);</div><div class="line">map.put(<span class="number">7</span>, <span class="number">0x37</span>);</div><div class="line">map.put(<span class="number">8</span>, <span class="number">0x38</span>);</div><div class="line">map.put(<span class="number">9</span>, <span class="number">0x39</span>);</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">robot = <span class="keyword">new</span> Robot();</div><div class="line">robot.delay(<span class="number">5000</span>);<span class="comment">//延迟5秒供你打开编辑器</span></div><div class="line">editContent2();</div><div class="line"></div><div class="line">&#125; <span class="keyword">catch</span> (AWTException e) &#123;</div><div class="line"><span class="comment">// TODO Auto-generated catch block</span></div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line"><span class="comment">//每隔几毫秒,以及数值的范围</span></div><div class="line">sendMessage demo = <span class="keyword">new</span> sendMessage(<span class="number">1000</span>,<span class="number">200</span>);</div><div class="line">demo.send();</div><div class="line">&#125;</div><div class="line"><span class="comment">/*********************************************</span></div><div class="line"> *editContent1实验的功能输出从0到Range的一个方法</div><div class="line">    ********************************************/</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editContent1</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="comment">//让机器从0数到Range</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= range; i++) &#123;</div><div class="line">robot.delay(<span class="keyword">this</span>.delayTime);</div><div class="line"><span class="comment">// 个位数的处理</span></div><div class="line"><span class="keyword">if</span> (i &lt;= <span class="number">9</span>) &#123;</div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(i));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(i));</div><div class="line">robot.keyPress(KeyEvent.VK_ENTER);</div><div class="line">robot.keyRelease(KeyEvent.VK_ENTER);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 两位数的处理</span></div><div class="line"><span class="keyword">if</span> (i &gt; <span class="number">9</span> &amp;&amp; i &lt;= <span class="number">99</span>) &#123;</div><div class="line"><span class="keyword">int</span> a = i / <span class="number">10</span>;<span class="comment">// 十位</span></div><div class="line"><span class="keyword">int</span> b = i % <span class="number">10</span>;<span class="comment">// 个位</span></div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(a));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(a));</div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(b));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(b));</div><div class="line">robot.keyPress(KeyEvent.VK_ENTER);</div><div class="line">robot.keyRelease(KeyEvent.VK_ENTER);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 三位数的处理</span></div><div class="line"><span class="keyword">if</span> (i &gt; <span class="number">99</span> &amp;&amp; i &lt;= <span class="number">999</span>) &#123;</div><div class="line"><span class="keyword">int</span> a = i / <span class="number">100</span>;<span class="comment">// 百位</span></div><div class="line"><span class="keyword">int</span> b = (i % <span class="number">100</span>) / <span class="number">10</span>;<span class="comment">// 十位</span></div><div class="line"><span class="keyword">int</span> c = i % <span class="number">10</span>;<span class="comment">// 个位</span></div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(a));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(a));</div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(b));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(b));</div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(c));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(c));</div><div class="line">robot.keyPress(KeyEvent.VK_ENTER);</div><div class="line">robot.keyRelease(KeyEvent.VK_ENTER);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">/************************************************************************</span></div><div class="line"> *editContent2为模拟键盘输入,在英文输入法状态下输出为拼音字母,中文输入法状态下为中文</div><div class="line">    ************************************************************************/</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editContent2</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; range; i++) &#123;</div><div class="line">robot.delay(<span class="keyword">this</span>.delayTime/<span class="number">2</span>);</div><div class="line">robot.keyPress(KeyEvent.VK_C);</div><div class="line">robot.keyRelease(KeyEvent.VK_C);</div><div class="line">robot.keyPress(KeyEvent.VK_N);</div><div class="line">robot.keyRelease(KeyEvent.VK_N);</div><div class="line">robot.keyPress(KeyEvent.VK_M);</div><div class="line">robot.keyRelease(KeyEvent.VK_M);</div><div class="line">robot.keyPress(KeyEvent.VK_SPACE);</div><div class="line">robot.delay(<span class="keyword">this</span>.delayTime/<span class="number">2</span>); <span class="comment">//注意,不过不加delay,在按下之母后立即继续按下后续操作会让输入法来不及相应,所以要延迟一小段时间</span></div><div class="line">robot.keyPress(KeyEvent.VK_ENTER);</div><div class="line">robot.keyRelease(KeyEvent.VK_ENTER);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>上面有两个方法分别是<code>editContent1</code>和<code>editContent2</code>,前者仅仅是从键盘输入一些数字,后者是在打开中文输入法的情况下依次输入中文的拼音,模拟人为打字.</p><p>运行结果如下:<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171017/afljFb21L3.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Java学习笔记 (一)   基于Robot类的一些自动测试类的一些应用：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;/excerpt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Java" scheme="lovemefan.win/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (四)  安装scrapy框架</title>
    <link href="lovemefan.win/2017/09/23/scrapy%E6%A1%86%E6%9E%B6/"/>
    <id>lovemefan.win/2017/09/23/scrapy框架/</id>
    <published>2017-09-23T06:40:00.000Z</published>
    <updated>2017-09-23T07:07:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (四)  安装scrapy框架：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>安装scrapy框架<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="scrapy框架"><a href="#scrapy框架" class="headerlink" title="scrapy框架"></a>scrapy框架</h2><blockquote><p>Scrapy，Python开发的一个快速、高层次的屏幕抓取和web抓取框架，用于抓取web站点并从页面中提取结构化的数据。Scrapy用途广泛，可以用于数据挖掘、监测和自动化测试。<br>Scrapy吸引人的地方在于它是一个框架，任何人都可以根据需求方便的修改。它也提供了多种类型爬虫的基类，如BaseSpider、sitemap爬虫等，最新版本又提供了web2.0爬虫的支持。 –百度百科</p></blockquote><h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><ul><li>pip install whell</li><li>pip install lxml</li><li>pipi nstall twisted</li><li>pip install scrapy</li></ul><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><p>在控制台下输入:</p><ul><li>创建项目: scrapy startproject 项目名      </li><li>创建爬虫: scrapy genspider -t basic 爬虫名 目标URL</li></ul><p><strong>项目目录如下:</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170923/a4l4a8H3eJ.png?imageslim" alt="mark"></p><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><p>  在控制台下输入: scrapy crawl  爬虫名</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (四)  安装scrapy框架：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;安装scrapy框架&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Android学习笔记 (一)   按钮事件处理的五种方法</title>
    <link href="lovemefan.win/2017/09/12/Android%20%E6%8C%89%E9%92%AE%E4%BA%8B%E4%BB%B6%E7%9A%84%E4%BA%94%E7%A7%8D%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>lovemefan.win/2017/09/12/Android 按钮事件的五种处理方法/</id>
    <published>2017-09-12T05:58:00.000Z</published>
    <updated>2017-09-12T07:50:43.134Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Android学习笔记 (一)   按钮事件处理的五种方法：</strong> <excerpt in="" index="" |="" 首页摘要=""><br> 收集了五种处理按钮事件处理的方法<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Android-按钮事件的五种处理方法"><a href="#Android-按钮事件的五种处理方法" class="headerlink" title="Android 按钮事件的五种处理方法"></a>Android 按钮事件的五种处理方法</h1><p>这里用一个小例子来说明:<br>首先在新建的工程的activity_main.xml中添加一个Button和一个TextView.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.lovemefan.myapplication3.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/tv1"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></div><div class="line">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></div><div class="line">        <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></div><div class="line">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></div><div class="line">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/bt1"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"click"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="1-使用匿名内部类"><a href="#1-使用匿名内部类" class="headerlink" title="1.使用匿名内部类"></a><code>1.使用匿名内部类</code></h2><p>接下来在MainActivity.java文件中如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">       bt.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">                TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">                tv.setText(<span class="string">"hello android"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;);<span class="comment">//内部匿名类实现按键处理</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="2-使用自定义单击事件监听类"><a href="#2-使用自定义单击事件监听类" class="headerlink" title="2.使用自定义单击事件监听类"></a><code>2.使用自定义单击事件监听类</code></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">        bt.setOnClickListener(<span class="keyword">new</span> myButtonClick());<span class="comment">//自定义事件监听类实现按钮事件处理</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myButtonClick</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</div><div class="line"></div><div class="line">       <span class="meta">@Override</span></div><div class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">           TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">           tv.setText(<span class="string">"hello android"</span>);</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="3-使用lambda语法实现按钮处理"><a href="#3-使用lambda语法实现按钮处理" class="headerlink" title="3.使用lambda语法实现按钮处理"></a><code>3.使用lambda语法实现按钮处理</code></h2><p>首先确保环境支持<code>lambda</code>语法,即JDK在1.8及以上.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">        bt.setOnClickListener((view)-&gt;&#123;</div><div class="line">            TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">            tv.setText(<span class="string">"hello android"</span>);</div><div class="line">        &#125;);<span class="comment">//lambda语法实现按钮处理事件</span></div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>如果在Android Studio 下报错:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Error:Jack is required to support java 8 language features. Either enable Jack or remove sourceCompatibility JavaVersion.VERSION_1_8.</div></pre></td></tr></table></figure></p><p>请在<code>build.gradle(Module:app)</code>文件加入以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># 在 build.gradle 文件中加入如下代码</div><div class="line">defaultConfig &#123;</div><div class="line">    ...</div><div class="line">    jackOptions &#123;</div><div class="line">        enabled true</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">compileOptions &#123;</div><div class="line">    sourceCompatibility org.gradle.api.JavaVersion.VERSION_1_8</div><div class="line">    targetCompatibility org.gradle.api.JavaVersion.VERSION_1_8</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="4-Activity继承View-OnClickListener"><a href="#4-Activity继承View-OnClickListener" class="headerlink" title="4.Activity继承View.OnClickListener"></a><code>4.Activity继承View.OnClickListener</code></h2><p>由Activity实现OnClick(View view)方法，在OnClick(View view)方法中用switch-case对不同id代表的button进行相应的处理：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">        bt.setOnClickListener((view)-&gt;&#123;</div><div class="line">            TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">            tv.setText(<span class="string">"hello android"</span>);</div><div class="line">        &#125;);<span class="comment">//lambda语法实现按钮处理事件</span></div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;  </div><div class="line">  </div><div class="line">        <span class="keyword">switch</span> (view.getId())&#123;  </div><div class="line">            <span class="keyword">case</span> R.id.bt:  </div><div class="line">                TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">            tv.setText(<span class="string">"hello android"</span>);  </div><div class="line">            <span class="keyword">break</span>;  </div><div class="line">            <span class="keyword">default</span>:  </div><div class="line">            <span class="keyword">break</span>;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>这个方法适合多个按钮</p><h2 id="5-在XML文件指定按钮的onClick属性"><a href="#5-在XML文件指定按钮的onClick属性" class="headerlink" title="5.在XML文件指定按钮的onClick属性"></a><code>5.在XML文件指定按钮的onClick属性</code></h2><p>在XML文件中显示指定按钮的onClick属性，这样点击按钮时会利用反射的方式调用对应Activity中的click()方法：<br>在我之前学习的Windows 10 <code>UWP</code> 的app开发中都是用的这种方法.<br>UWP也是类似的在相应的XAML代码中设置click属性即可,并且Visual Studio会自动为其添加相应方法.<strong>\(▔＾▔)/ 微软大法好</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:onClick</span>=<span class="string">"sayHelloAndroid"</span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/bt1"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"click"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</div></pre></td></tr></table></figure></p><p>笔者经过百度了后,发现Android Studio 有快捷键来生成click相应的方法:点击onclick的属性值,然后按Alt+Enter<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170912/5jeDm9Klik.png?imageslim" alt="生成方法"><br>然后就生成了相应方法,这样可以避免手动写方法时不小心拼错单词了.<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170912/547A3AcCIg.png?imageslim" alt="mark"></p><p>我个人比较喜欢用第五种方法.界面与后台代码可以完全分开,代码量也少.不过反射最大的缺点就是影响性能和效率.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Android学习笔记 (一)   按钮事件处理的五种方法：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt; 收集了五种处理按钮事件处理的方法&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="lovemefan.win/tags/Android/"/>
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>查四六级准考证号的一种方法</title>
    <link href="lovemefan.win/2017/08/29/%E5%9B%9B%E5%85%AD%E7%BA%A7%E6%9F%A5%E8%AF%A2%E5%87%86%E8%80%83%E8%AF%81%E6%96%B9%E6%B3%95/"/>
    <id>lovemefan.win/2017/08/29/四六级查询准考证方法/</id>
    <published>2017-08-29T13:23:00.000Z</published>
    <updated>2017-08-29T13:35:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 查四六级准考证号的一种方法：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>利用某软件返回值,js代码查询准考证号<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="四六级查询准考证方法"><a href="#四六级查询准考证方法" class="headerlink" title="四六级查询准考证方法"></a>四六级查询准考证方法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>身边有好多小伙伴们有忘记四六级准考证号而且还找不回准考证的情况.<br>因为以前的九九宿舍不能用了,并且网上很少提供这种查询的网站(可能是我孤陋寡闻没听过)<br>所以这里分享一个贴吧大神公布的方法(该贴已被删).实际上是利用某一个软件的bug,也不知道什么时候会被封.</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>某一软件的一个查询口语的入口,即使没有报口语,在其内部的返回值中会包含准考证号的信息,利用这点获得准考证号</p><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><p>最好用<code>谷歌的chrome浏览器</code>,我试过edge和UC都没用.其他没测试过.<br>必要条件:</p><ul><li>身份证号</li><li>姓名</li></ul><p>下面以chrome为例:</p><ol><li>打开chrom,转到下面网址<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://app.cet.edu.cn:7066/baas/app/setuser.do?method=UserVerify</div></pre></td></tr></table></figure></li></ol><p>这时候会出现一堆错误,没关系,继续下一步<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/lFCj5E5CF5.png?imageslim" alt="chromerror"><br>2.按下F12打开开发者工具,点击Console切换到控制台<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/i6Gc65eAbg.png?imageslim" alt="控制台"><br>3.在下面空白光标出输入以下代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">d, s</span>)</span>&#123; d.body.appendChild(s = d.createElement(<span class="string">'script'</span>)).src = <span class="string">'http://code.jquery.com/jquery-1.9.1.min.js'</span>&#125;)(<span class="built_in">document</span>);</div></pre></td></tr></table></figure></p><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/JBGHkmkkm0.png?imageslim" alt="mark"><br>如果出现<code>Uncaught SyntaxError: Unexpected end of input</code>字样,应该是代码不完整或部分拼写错误.重新复制一遍就好了<br>4.接下来输入另一段代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> url = <span class="string">"http://app.cet.edu.cn:7066/baas/app/setuser.do?method=UserVerify"</span>;</div><div class="line"><span class="keyword">var</span> ks_data = &#123;</div><div class="line"><span class="string">"ks_xm"</span>: <span class="string">"姓名"</span>,</div><div class="line"><span class="string">"ks_sfz"</span>: <span class="string">"身份证号"</span>,</div><div class="line"><span class="string">"jb"</span>: <span class="string">"四级填1,六级填2"</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> postdata = &#123;</div><div class="line"><span class="string">"action"</span>: <span class="string">""</span>,</div><div class="line"><span class="string">"params"</span>: <span class="built_in">JSON</span>.stringify(ks_data)</div><div class="line">&#125;;</div><div class="line">$.post(url = url, data = postdata, callback = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">data = $.parseJSON(data)</div><div class="line"><span class="built_in">console</span>.log(data[<span class="string">"ks_bh"</span>])</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p>将上述代码的姓名,身份证等参数替换掉,回车确定<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/Icg2EBD67j.png?imageslim" alt="返回准考证号"><br>如果出现其他错误,可能你的<code>信息输入有误</code>,请核对再输一遍.如果还有错则该考生不存在(没报考).<br>这个只能查最近一次的准考证.<br>好了,大功告成<br>点击下面:<br><a href="http://cet.neea.edu.cn/cet/" target="_blank" rel="external">四级查询路口 http://cet.neea.edu.cn/cet/</a><br> 然后就可以查分数了.<br> 溜了溜了…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 查四六级准考证号的一种方法：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;利用某软件返回值,js代码查询准考证号&lt;br&gt;
    
    </summary>
    
    
      <category term="其他" scheme="lovemefan.win/tags/%E5%85%B6%E4%BB%96/"/>
    
      <category term="JavaScript" scheme="lovemefan.win/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (三)  简单爬虫实战</title>
    <link href="lovemefan.win/2017/08/19/Python%20%E5%AE%9E%E6%88%98/"/>
    <id>lovemefan.win/2017/08/19/Python 实战/</id>
    <published>2017-08-19T14:00:00.000Z</published>
    <updated>2017-08-20T14:00:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (三)  简单爬虫实战：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>Python实战 抓取网页<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Python-实战"><a href="#Python-实战" class="headerlink" title="Python 实战"></a>Python 实战</h1><h2 id="简单的静态文本抓取"><a href="#简单的静态文本抓取" class="headerlink" title="简单的静态文本抓取"></a>简单的静态文本抓取</h2><h3 id="request库命令安装"><a href="#request库命令安装" class="headerlink" title="request库命令安装"></a>request库命令安装</h3><p>windows下进入cmd ，定位到你Python的安装路径，我的是D:\Program Files\Python27\Scripts。因为以后常用，不妨加到环境变量中，以后就不用在定位到安装路径，直接调用。<br>然后在cmd、PowerShell、XShell中输入以下命令</p><ul><li>Windows :  pip install request</li><li>Linux :  sudo pip install request</li><li>Mac OS :  sudo pip install request  <h3 id="抓取目标："><a href="#抓取目标：" class="headerlink" title="抓取目标："></a>抓取目标：</h3></li><li><a href="http://my.0ff0.net/" target="_blank" rel="external">http://my.0ff0.net/</a></li><li><a href="https://get.freevpnss.me/#vpn" target="_blank" rel="external">https://get.freevpnss.me/#vpn</a></li></ul><p>以上是两个免费的VPN网站，目标是将网站中的VPN服务器IP、用户名、密码、IPSec密钥等相关信息抓取下来以便使用。本次程序需要用到request库，如果没有安装</p><h3 id="网站分析"><a href="#网站分析" class="headerlink" title="网站分析"></a>网站分析</h3><h4 id="第一个网站"><a href="#第一个网站" class="headerlink" title="第一个网站"></a>第一个网站</h4><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170726/i9GiJIBJcd.png?imageslim" alt="http://my.0ff0.net"><br>查看其源码如下：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170726/fj8DBkdhgD.png?imageslim" alt="my.0ff0.nety源码"><br>第一个网站结构和源码都比较简单，直接使用Python的正则表达式匹配其字符就行<br>直接上源代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line">html = requests.get(<span class="string">"http://my.0ff0.net/"</span>)</div><div class="line"><span class="comment"># html.encoding = 'utf-8'</span></div><div class="line">content = re.findall(<span class="string">'&lt;div class="content"&gt;(.*?)&lt;/div&gt;'</span>,html.text,re.S)[<span class="number">0</span>]</div><div class="line">serverip =re.findall(<span class="string">'&lt;span id="ip"&gt;(.*?)&lt;/span&gt;'</span>,content,re.S)</div><div class="line">user =re.findall(<span class="string">'&lt;span id="user"&gt;(.*?)&lt;/span&gt;'</span>,content,re.S)</div><div class="line">password =re.findall(<span class="string">'&lt;span id="pw"&gt;(.*?)\n&lt;/span&gt;'</span>,content,re.S)</div><div class="line">secret =re.findall(<span class="string">'&lt;span id="secret"&gt;(.*?)&lt;/span&gt;'</span>,content,re.S)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># print html.text</span></div><div class="line"><span class="keyword">print</span> <span class="string">"服务器地址: %s "</span>%str(serverip[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"用户名: %s"</span>%str(user[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"密码: %s"</span>%str(password[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"IPSec密钥: %s"</span>%str(secret[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"连接方式：PPTP和Cisco IPSec(IKEv1)"</span></div></pre></td></tr></table></figure></p><p>运行结果：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170726/maJClL2Ha4.png?imageslim" alt="运行结果"></p><h4 id="第二个网站"><a href="#第二个网站" class="headerlink" title="第二个网站"></a>第二个网站</h4><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170820/hkebHGd2L7.png?imageslim" alt="freeVPN"><br><strong>F12查看源码,同样用正则表达式吧需要的字符匹配出来.</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170820/L0g8L9L5C5.png?imageslim" alt="mark"></p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">from</span> encodings <span class="keyword">import</span> gb18030</div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line">html = requests.get(<span class="string">"http://jn9.org/indexcn.html"</span>)</div><div class="line">html.encoding = <span class="string">'utf-8'</span></div><div class="line"></div><div class="line">target = re.findall(<span class="string">'&lt;div class="panel-heading"&gt;(.*?)&lt;span class="label label-success"&gt;Active&lt;/span&gt;&lt;/p&gt;.*?&lt;/div&gt;.*?&lt;/div&gt;.*?&lt;/div&gt;&lt;!-- /.col-sm-4 --&gt;'</span>,html.text,re.S)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(target.__len__()):</div><div class="line">    adress = re.findall(<span class="string">'&lt;h2 class="panel-title"&gt;(.*?)&lt;/h2&gt;'</span>,target[i],re.S)</div><div class="line">    contend = re.findall(<span class="string">'&lt;p&gt;(.*?)&lt;/p&gt;'</span>,target[i],re.S)</div><div class="line">    <span class="keyword">if</span> adress:</div><div class="line">        <span class="keyword">print</span> <span class="string">"地区:"</span>,adress[<span class="number">0</span>]</div><div class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> contend:</div><div class="line">        result = re.sub(<span class="string">'&lt;span class="hidden"&gt;(.*?)&lt;/span&gt;'</span>, <span class="string">''</span>,each)</div><div class="line">        <span class="keyword">print</span> result</div><div class="line">    <span class="keyword">print</span> <span class="string">"\n\n"</span></div></pre></td></tr></table></figure><p>运行结果如下:<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170820/49jGcfChGJ.png?imageslim" alt="效果图"><br><code>好了,翻个墙出去玩耍了.</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (三)  简单爬虫实战：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;Python实战 抓取网页&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>数学建模论文格式分析</title>
    <link href="lovemefan.win/2017/08/10/%E8%AE%BA%E6%96%87%E6%A0%BC%E5%BC%8F%E5%88%86%E6%9E%90%E9%89%B4%E8%B5%8F/"/>
    <id>lovemefan.win/2017/08/10/论文格式分析鉴赏/</id>
    <published>2017-08-10T00:00:00.000Z</published>
    <updated>2017-08-10T03:24:35.190Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 数学建模论文格式分析：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>关于数学建模论文格式分析 教会你怎么写相关论文<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="论文格式分析鉴赏"><a href="#论文格式分析鉴赏" class="headerlink" title="论文格式分析鉴赏"></a>论文格式分析鉴赏</h1><h2 id="论文格式"><a href="#论文格式" class="headerlink" title="论文格式"></a>论文格式</h2><p>根据分析论文中的格式，可以总结出以下格式：</p><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>摘要的特点首先在于’短”，要简短扼要，高度浓缩，目的是节省老师的时间、提高效率。老师阅读        摘要后，就能够确切地了解论文的主要内容和结果，决定是否需要阅读全文。摘要最好能引人入胜，使之产生看完全文的兴趣。尽量简述对问题的解决思路，最好先一句话用什么方法解决了什么类型的问题。</p><ul><li>模型的数学归类（在数学上属于什么类型）</li><li>建模的思想（思路）</li><li>算法思想（求解思路）</li><li>建模特点（模型优点，建模思想或方法，算法特点，结果检验，灵敏度 分析，模型检验）</li><li>主要结果（数值结果，结论）（回答题目所问的全部“问题”） <h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3>根据题目给出的已知条件，结合自己的理解，分析问题的解决方法，引出解题的思路．一个一个问题有条理得分析问题．最后一段总结．</li></ul><h3 id="模型假设"><a href="#模型假设" class="headerlink" title="模型假设"></a>模型假设</h3><p>首先基本假设的合理性很重要。</p><ul><li>根据题目中条件和要求作出假设 </li><li>关键性假设不能缺，假设要切合题意 </li></ul><h3 id="符号说明"><a href="#符号说明" class="headerlink" title="符号说明"></a>符号说明</h3><p>根据范文分析，就是将本文将会出现的数学符号通过表格清晰明了得进行说明。<br>如下图<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170810/EfCjfI7k8d.png?imageslim" alt="符号说明"></p><h3 id="模型建立与求解"><a href="#模型建立与求解" class="headerlink" title="模型建立与求解"></a>模型建立与求解</h3><h4 id="基本模型："><a href="#基本模型：" class="headerlink" title="基本模型："></a>基本模型：</h4><ul><li>首先要有数学模型：数学公式、方案等 </li><li>基本模型，要求 完整，正确，简明<h4 id="简化模型"><a href="#简化模型" class="headerlink" title="简化模型:"></a>简化模型:</h4><ul><li>要明确说明：简化思想，依据 </li></ul></li><li>简化后模型，尽可能完整给出<br>模型要实用，有效，以解决问题有效为原则。 数学建模面临的、要解决的是实际问题，不追求数学上。高（级）、深（刻）、 难（度大）。<h4 id="模型要求："><a href="#模型要求：" class="headerlink" title="模型要求："></a>模型要求：</h4></li><li>能用初等方法解决的、就不用高级方法;</li><li>能用简单方法解决的，就不用复杂方法; </li><li>能用被更多人看懂、理解的方法;</li><li>就不用只能少数人看懂、理解的方法</li><li>鼓励创新，但要切实，不要离题搞标新立异数模创新可出现在 </li><li>建模中，模型本身，简化的好方法、好策略等， <h4 id="模型求解中"><a href="#模型求解中" class="headerlink" title="模型求解中"></a>模型求解中</h4></li><li>结果表示、分析、检验，模型检验 </li><li>推广部分 <h4 id="在问题分析推导过程中，需要注意的问题："><a href="#在问题分析推导过程中，需要注意的问题：" class="headerlink" title="在问题分析推导过程中，需要注意的问题："></a>在问题分析推导过程中，需要注意的问题：</h4></li><li>分析：中肯、确切 </li><li>术语：专业、内行；；  </li><li>原理、依据：正确、明确, </li><li>表述：简明，关键步骤要列出 </li><li>忌：外行话，专业术语不明确，表述混乱，冗长。</li></ul><h3 id="模型评价和推广"><a href="#模型评价和推广" class="headerlink" title="模型评价和推广"></a>模型评价和推广</h3><h4 id="模型评价"><a href="#模型评价" class="headerlink" title="模型评价:"></a>模型评价:</h4><ul><li>优点突出（预测问题关注精度，优化问题关注性能，分类问题关注准确性，等等，根据实际问题写模型优点，一定要写到点上）</li><li>缺点不回避，但是缺点要挑无关痛痒的讲，可以将假设中的不足或局限性作为缺点。<br>模型推广:</li><li>适用的场景、人群、范围等等（不可硬套，根据实际题目实际情况来写） </li><li>推广或改进方向时，不要玩弄新数学术语（让人看得懂，复杂也要简单化，切莫把简单的描述的过于复杂）</li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p>按要求的格式写<br>尽量引用好的文献、书籍、资料等等</p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>程序代码（基本上是代码）</li><li>详细的结果，详细的数据表格，可在此列出，但不要错，错的宁可不列。</li><li>主要结果数据应在正文中列出，不怕重复。 </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 数学建模论文格式分析：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;关于数学建模论文格式分析 教会你怎么写相关论文&lt;br&gt;
    
    </summary>
    
    
      <category term="数学建模" scheme="lovemefan.win/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
      <category term="论文" scheme="lovemefan.win/tags/%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (二)  第三方库安装</title>
    <link href="lovemefan.win/2017/07/22/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E5%AE%89%E8%A3%85/"/>
    <id>lovemefan.win/2017/07/22/第三方库安装/</id>
    <published>2017-07-22T13:00:00.000Z</published>
    <updated>2017-07-22T15:10:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (二)  第三方库安装：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>Python的第三方库的安装<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="第三方库安装"><a href="#第三方库安装" class="headerlink" title="第三方库安装"></a>第三方库安装</h2><h3 id="命令安装"><a href="#命令安装" class="headerlink" title="命令安装"></a>命令安装</h3><p>windows下进入cmd ，定位到你Python的安装路径，我的是D:\Program Files\Python27\Scripts。因为以后常用，不妨加到环境变量中，以后就不用在定位到安装路径，直接调用。<br>然后在cmd、PowerShell、XShell中输入以下命令</p><ul><li>Windows :  pip install xxx</li><li>Linux :  sudo pip install xxx</li><li>Mac OS :  sudo pip install xxx   </li></ul><p><code>少用easy_install 因为只能安装不能卸载</code></p><h3 id="自定义安装"><a href="#自定义安装" class="headerlink" title="自定义安装"></a>自定义安装</h3><p> 当出现问题或者不想用命令安装时  请戳&gt;&gt;<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="external">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a><br> 这个网站有Python所有的第三方库文件。将下载好的文件原后缀.whl改为.zip,并解压到python安装目录的Lib文件夹下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (二)  第三方库安装：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;Python的第三方库的安装&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (一)  初识Python</title>
    <link href="lovemefan.win/2017/07/22/%E5%88%9D%E8%AF%86Python/"/>
    <id>lovemefan.win/2017/07/22/初识Python/</id>
    <published>2017-07-22T12:00:00.000Z</published>
    <updated>2017-07-22T14:12:04.460Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (一)  初识Python：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>认识Python及搭建开发环境<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="初识Python"><a href="#初识Python" class="headerlink" title="初识Python"></a>初识Python</h1><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><blockquote><p>Python[1]  （英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。<br>Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议[2]  。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。<br>Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中[3]  有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。–百度百科</p></blockquote><p><strong><em>个人认为Python是一款非常适合初学者的语言，同时有面向过程和对象的特性，语法简单非常接近自然语言，功能强大</em></strong></p><h2 id="发展历程"><a href="#发展历程" class="headerlink" title="发展历程"></a>发展历程</h2><blockquote><p>自从20世纪90年代初Python语言诞生至今，它已被逐渐广泛应用于系统管理任务的处理和Web编程。<br>Python的创始人为Guido van Rossum。1989年圣诞节期间，在阿姆斯特丹，Guido为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，做为ABC 语言的一种继承。之所以选中Python（大蟒蛇的意思）作为该编程语言的名字，是因为他是一个叫Monty Python的喜剧团体的爱好者。<br>ABC是由Guido参加设计的一种教学语言。就Guido本人看来，ABC 这种语言非常优美和强大，是专门为非专业程序员设计的。但是ABC语言并没有成功，究其原因，Guido 认为是其非开放造成的。Guido 决心在Python 中避免这一错误。同时，他还想实现在ABC 中闪现过但未曾实现的东西。<br>就这样，Python在Guido手中诞生了。可以说，Python是从ABC发展起来，主要受到了Modula-3（另一种相当优美且强大的语言，为小型团体所设计的）的影响。并且结合了Unix shell和C的习惯。<br>Python[4]  已经成为最受欢迎的程序设计语言之一。2011年1月，它被TIOBE编程语言排行榜评为2010年度语言。自从2004年以后，python的使用率呈线性增长[5]  。<br>由于Python语言的简洁性、易读性以及可扩展性，在国外用Python做科学计算的研究机构日益增多，一些知名大学已经采用Python来教授程序设计课程。例如卡耐基梅隆大学的编程基础、麻省理工学院的计算机科学及编程导论就使用Python语言讲授。众多开源的科学计算软件包都提供了Python的调用接口，例如著名的计算机视觉库OpenCV、三维可视化库VTK、医学图像处理库ITK。而Python专用的科学计算扩展库就更多了，例如如下3个十分经典的科学计算扩展库：NumPy、SciPy和matplotlib，它们分别为Python提供了快速数组处理、数值运算以及绘图功能。因此Python语言及其众多的扩展库所构成的开发环境十分适合工程技术、科研人员处理实验数据、制作图表，甚至开发科学计算应用程序。<br>说起科学计算，首先会被提到的可能是MATLAB。然而除了MATLAB的一些专业性很强的工具箱还无法替代之外，MATLAB的大部分常用功能都可以在Python世界中找到相应的扩展库。和MATLAB相比，用Python做科学计算有如下优点：<br>● 首先，MATLAB是一款商用软件，并且价格不菲。而Python完全免费，众多开源的科学计算库都提供了Python的调用接口。用户可以在任何计算机上免费安装Python及其绝大多数扩展库。<br>● 其次，与MATLAB相比，Python是一门更易学、更严谨的程序设计语言。它能让用户编写出更易读、易维护的代码。<br>● 最后，MATLAB主要专注于工程和科学计算。然而即使在计算领域，也经常会遇到文件管理、界面设计、网络通信等各种需求。而Python有着丰富的扩展库，可以轻易完成各种高级任务，开发者可以用Python实现完整应用程序所需的各种功能。</p></blockquote><h2 id="风格"><a href="#风格" class="headerlink" title="风格"></a>风格</h2><blockquote><p>Python在设计上坚持了清晰划一的风格，这使得Python成为一门易读、易维护，并且被大量用户所欢迎的、用途广泛的语言。<br>设计者开发时总的指导思想是，对于一个特定的问题，只要有一种最好的方法来解决就好了。这在由Tim Peters写的Python格言（称为The Zen of Python）里面表述为：There should be one– and preferably only one –obvious way to do it. 这正好和Perl语言（另一种功能类似的高级动态语言）的中心思想TMTOWTDI（There’s More Than One Way To Do It）完全相反。<br>Python的作者有意的设计限制性很强的语法，使得不好的编程习惯（例如if语句的下一行不向右缩进）都不能通过编译。其中很重要的一项就是Python的缩进规则。<br>一个和其他大多数语言（如C）的区别就是，一个模块的界限，完全是由每行的首字符在这一行的位置来决定的（而C语言是用一对花括号{}来明确的定出模块的边界的，与字符的位置毫无关系）。这一点曾经引起过争议。因为自从C这类的语言诞生后，语言的语法含义与字符的排列方式分离开来，曾经被认为是一种程序语言的进步。不过不可否认的是，通过强制程序员们缩进（包括if，for和函数定义等所有需要使用模块的地方），Python确实使得程序更加清晰和美观。</p><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><h2 id="下载Python"><a href="#下载Python" class="headerlink" title="下载Python"></a>下载Python</h2><p>官网下载<a href="https://www.python.org/" target="_blank" rel="external">Python</a>,建议下载Python 2.X 版的。目前网上大部分教程为2.X版。3.X版改进很大。这里是一些关于2和3版本的区别和指导，请自己斟酌<br><a href="http://www.cnblogs.com/codingmylife/archive/2010/06/06/1752807.html" target="_blank" rel="external">Python3.x和Python2.x的区别</a><br><a href="https://www.zhihu.com/question/24549965" target="_blank" rel="external">应该学习最新版本的 Python 3 还是旧版本的 Python 2？</a><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170722/l6aFIFLfC3.png?imageslim" alt="mark"></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>我的电脑右键属性-高级系统变量-环境变量-向Path 添加Python的安装路径<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170722/Ebeb0LC1iE.png?imageslim" alt="mark"></p><h2 id="下载IDE"><a href="#下载IDE" class="headerlink" title="下载IDE"></a>下载IDE</h2><p>点击这里有推荐  <a href="http://www.oschina.net/news/57468/best-python-ide-for-developers" target="_blank" rel="external">提供给开发者 10 款最好的 Python IDE</a><br>另外VIsual Studio 也可以。我自己使用破解版的<code>JetBrains PyCharm</code><a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="external">下载</a> 。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170722/b4mFhHgAFj.png?imageslim" alt="PyCharm"><br>然后就愉快的玩耍了</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (一)  初识Python：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;认识Python及搭建开发环境&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>UWP学习笔记 (三)   XAML界面原理和语法</title>
    <link href="lovemefan.win/2017/07/10/%E4%BB%80%E4%B9%88%E6%98%AFXAML/"/>
    <id>lovemefan.win/2017/07/10/什么是XAML/</id>
    <published>2017-07-10T14:00:00.000Z</published>
    <updated>2017-07-15T02:51:16.807Z</updated>
    
    <content type="html"><![CDATA[<p><strong> UWP学习笔记 (三)   XAML界面原理和语法：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>学习XAML在UWP 中的原理及语法<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="什么是XAML"><a href="#什么是XAML" class="headerlink" title="什么是XAML"></a>什么是XAML</h2><blockquote><p>XAML是EXtensible Application Markup Language的英文缩写，相应的中文名称为可扩展应用程序标记语言，它是微软公司为构建应用程序用户界面而创建的一种新的描述性语言。XAML提供了一种便于扩展和定位的语法来定义和程序逻辑分离的用户界面，而这种实现方式和ASP.NET中的”代码后置”模型非常类似。XAML是一种解析性的语言，尽管它也可以被编译。它的优点是简化编程式上的用户创建过程，应用时要添加代码和配置等。 –百度百科</p></blockquote><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>&#160;&#160;&#160;&#160;XAML简化了.Net Framework 3.0编程模式上的用户界面创建过程，使用XAML开发人员可以对WPF程序的所有用户界面元素(例如文本、按钮、图像和列表框等)进行详细的定置，同时还可以对整个界面进行合理化的布局，这与使用HTML非常相似。但是由于XAML是基于XML的，所以它本身就是一个组织良好的XML文档，而且相对于HTML，它的语法更严谨、更明确。预计以后大部分的XAML都可由相应的软件自动生成，就如同我们现在制作一个静态页面时，几乎不用编写任何HTML代码就可以直接通过Dreamweaver软件生成一个美观的页面。但是最初通过手动编写XAML代码将是一次绝佳的学习体验，虽然实现的过程繁杂了些，但是将加深您对XAML语法和各个元素的理解。<br>大多数的WPF程序可能同时包含程序代码和 XAML。我们可以使用XAML定义应用程序的初始界面，而后才编写相应的功能实现代码。我们可以将逻辑代码直接嵌入到一个XAML文件中，也可以将它保留在一个单独的文件中。实际上，能够用XAML实现的所有功能我们都可以使用程序代码来完成。因此，我们根本无需使用任何的XAML就可以创建一个完好的WPF程序。一般来说，程序代码的优势在于流程处理和逻辑判断，而不是界面的构建上。而XAML则是集中关注于界面的编程，我们可以将它和其它的.NET语言配合使用，从而构建出一个功能完善、界面美观的WPF程序。XAML是一种纯正的、用来描述用户界面构成元件和编排方式的标记语言。尽管有部分的XAML语法具备程序设计语言的特性(例如XAML中的Trigger和TRansform)，但是XAML并不是一种用于程序设计的语言，它的功能也不是为了执行应用程序逻辑。<br>&#160;&#160;&#160;&#160;微软推荐XAML被编译成BAML(Binary Application Markup Language-二进制语言程序标记语言)。XAML和BAML都可以被WPF解析，并且将以一种和HTML相似的方式进行界面的呈现。但是和HTML不同的是，XAML是强类型化的。也就是说，HTML会忽略那些它不能识别的元素和属性，而XAML必须在识别所有的元素和属性的情况下，才对页面进行呈现。尽管在XAML中各个属性都是以一个个的字符串(例如Background)表示的，但是这些字符串实际上代表的是WPF中的对象，只有被WPF识别的对象才可以作为元素的属性，所以我们说XAML是强类型化的。</p><h3 id="新功能"><a href="#新功能" class="headerlink" title="新功能"></a>新功能</h3><p>微软Build 2013发布了一些已经被添加到Windows 8.1中的XAML新功能。[1]  </p><ul><li>Hub控件</li><li>命令栏</li><li>弹出（Flyout）控件</li><li>日期/时间选择控件</li><li>取消StandardStyles.xaml<h3 id="与HTML的区别"><a href="#与HTML的区别" class="headerlink" title="与HTML的区别"></a>与HTML的区别</h3>&#160;&#160;&#160;&#160;还有一点是我们反复强调的，XAML并不是HTML。尽管XAML在元素的声明、程序样式的设置和指定事件处理程序上都和HTML非常类似，但是XAML是基于XML的，它是WPF的外在表现形式。而HTML只是一种标记语言，仅仅是用来为浏览器呈现页面内容。XAML除了用来呈现信息和请求用户输入等基本的功能外，它还包含了一些高级的特性，例如它提供了对动画和3D众多方面的支持。<br>XAML是可扩展的，正如它的名字指明的那样。开发人员可以创建自定义的控件、元素和函数来扩展XAML。而且由于XAML各元素在本质上就是WPF类的映射，所以开发人员可以很轻松地使用面向对象的技术对XAML元素进行扩展。也就是说我们可以开发一些自定义控件和组合元素，并将它公开给用户界面设计人员和其它的开发人员使用。</li></ul><h2 id="XAML代码在UWP中的角色"><a href="#XAML代码在UWP中的角色" class="headerlink" title="XAML代码在UWP中的角色"></a>XAML代码在UWP中的角色</h2><ul><li>Page是UWP的用户界面主体。传统桌面程序是由一个个窗口组成的，而UWP是由一个Page（页面）组成的</li><li>Page是一个partial类</li><li>我们的任务是扩展Page这个类<ul><li>微软预制的Page为一个空的界面，没有内容</li><li>我们只能扩展它</li></ul></li><li>XAML代码是界面部分，用来实例化.NET对象的标记语言。它可以非常简单的创建对象。<br>如下图，这段XAML代码创建了一个Button 对象<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170711/L1H43BAcC0.jpg?imageslim" alt="XAML代码"><br>同样的用C#实现会怎么样呢？<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170711/Cabge4dJHj.jpg?imageslim" alt="C#代码"><br>&#160;&#160;&#160;&#160;&#160;XAML中的Margin是直接等于一个字符串，而C#中是需要给Margin赋值一个Thickness对象的。这归功于XAML的类型转换器。XAML在编译的时候，XAML语法分析器将字符串转换为对应的对象或枚举值，这样的话，我们可以直接用一个非常简单的值来代替冗长的类型名和枚举值来提高效率。<h2 id="XAML语法"><a href="#XAML语法" class="headerlink" title="XAML语法"></a>XAML语法</h2><h3 id="Content-Property-（内容属性）"><a href="#Content-Property-（内容属性）" class="headerlink" title="Content Property （内容属性）"></a>Content Property （内容属性）</h3>每个标签都有自己的默认的内容属性。比如<code>&lt;Grid/&gt;</code>的默认属性是<code>&lt;Grid.Children&gt;&lt;Grid.Children/&gt;</code>,<code>&lt;Button&gt;</code>的默认属性是<code>&lt;Button.Content&gt;</code>.通常内容属性可省略。<h3 id="self-closing"><a href="#self-closing" class="headerlink" title="self-closing"></a>self-closing</h3>XAML标签与其他标签类似有两种开闭形式</li><li><code>&lt;xxx&gt;&lt;xxx/&gt;</code></li><li><code>&lt;xxx/&gt;</code><h3 id="Attribute-与简单的property"><a href="#Attribute-与简单的property" class="headerlink" title="Attribute 与简单的property"></a>Attribute 与简单的property</h3>可以直接在标签内定义该控件的一些简单属性，比如<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Name</span>=<span class="string">"button"</span> <span class="attr">Height</span>=<span class="string">"200"</span> <span class="attr">Width</span>=<span class="string">"200"</span>/&gt;</span></div></pre></td></tr></table></figure></li></ul><h3 id="复杂的property与property标签"><a href="#复杂的property与property标签" class="headerlink" title="复杂的property与property标签"></a>复杂的property与property标签</h3><p>标签里的属性对象很复杂的时候，编译器无法将字符转化成对象是，就需要使用属性标签。<br>比如说，当我要设置背景颜色时，如果时简单的颜色可以直接这样<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Background</span>=<span class="string">"red"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></p><p>当然，我们肯定不能满足这种单一色调的背景，我想要一个渐变的漂亮的背景怎么做呢？<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">Grid.Background</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!--LinearGradientBrush为线性笔刷--&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">LinearGradientBrush</span> <span class="attr">EndPoint</span>=<span class="string">"0.5,1"</span> <span class="attr">StartPoint</span>=<span class="string">"0.5,0"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--从#FFAC6CC开始 偏移量为0，#FF2D7099 结束偏移量为1--&gt;</span>            </div><div class="line">                <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">"#FFACD6CC"</span> <span class="attr">Offset</span>=<span class="string">"0"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">"#FF2D7099"</span> <span class="attr">Offset</span>=<span class="string">"1"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">LinearGradientBrush</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Grid.Background</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></p><h3 id="特殊属性（UWP，WPF特有）"><a href="#特殊属性（UWP，WPF特有）" class="headerlink" title="特殊属性（UWP，WPF特有）"></a>特殊属性（UWP，WPF特有）</h3><ul><li>Dependency Property 依赖属性<br>依赖属性就是自己自己没有值，通过Binding从数据源获得值，就是依赖在别人身上，拥有依赖属性的对象称为依赖对象。<br>几种应用依赖属性的场景： <ol><li>希望可在样式中设置属性。 </li></ol></li></ul><ol><li>希望属性支持数据绑定。 </li><li>希望可使用动态资源引用设置属性。 </li><li>希望从元素树中的父元素自动继承属性值。 </li><li>希望属性可进行动画处理。 </li><li>希望属性系统在属性系统、环境或用户执行的操作或者读取并使用样式更改了属性以前的值时报告。 </li><li>希望使用已建立的、WPF 进程也使用的元数据约定，例如报告更改属性值时是否要求布局系统重新编写元素的可视化对象。<br>依赖对象创建时并不包含存储数据空间。WPF中必须使用依赖对象作为依赖属性的宿主。<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">x:Name</span>=<span class="string">"textBox1"</span> <span class="attr">Margin</span>=<span class="string">"10"</span>  <span class="attr">Text</span>=<span class="string">"&#123;Binding Path=Title&#125;"</span>/&gt;</span></div></pre></td></tr></table></figure></li></ol><ul><li>Attached Property 附加属性 。附加属性为本不应该是该控件的属性而在该控件下设置的属性。<br>比如<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--声明该Grid有三行--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"auto"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"auto"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"auto"</span>/&gt;</span></div><div class="line">       <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--这里的Grid.row本来是Grid的属性，却被当做是Button的属性。Grid.Row为Button的附加属性--&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Grid.Row</span>=<span class="string">"2"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; UWP学习笔记 (三)   XAML界面原理和语法：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;学习XAML在UWP 中的原理及语法&lt;br&gt;
    
    </summary>
    
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="UWP" scheme="lovemefan.win/tags/UWP/"/>
    
  </entry>
  
  <entry>
    <title>UWP学习笔记 (二)   UWP开发环境及项目工程解析</title>
    <link href="lovemefan.win/2017/07/09/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%8F%8A%E9%A1%B9%E7%9B%AE%E5%B7%A5%E7%A8%8B%E8%A7%A3%E6%9E%90/"/>
    <id>lovemefan.win/2017/07/09/开发环境及项目工程解析/</id>
    <published>2017-07-09T14:48:00.000Z</published>
    <updated>2017-07-10T14:02:48.993Z</updated>
    
    <content type="html"><![CDATA[<p><strong> UWP学习笔记 (二)   UWP开发环境及项目工程解析：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>介绍开发环境及UWP的组成部分<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="开发环境及项目工程解析"><a href="#开发环境及项目工程解析" class="headerlink" title="开发环境及项目工程解析"></a>开发环境及项目工程解析</h1><p>工欲善其事，必先利其器。本章将介绍如何搭建Windows 10通用应用开发的环境以<br>及开发第一个Windows 10通用应用程序，并解析其工程结构和代码以及如何适配不同平<br>台的特殊代码。</p><h2 id="搭建开发环境"><a href="#搭建开发环境" class="headerlink" title="搭建开发环境"></a>搭建开发环境</h2><h3 id="开发环境的要求"><a href="#开发环境的要求" class="headerlink" title="开发环境的要求"></a>开发环境的要求</h3><p>进行Windows 10的开发，计算机需要达到以下要求</p><ul><li>1.操作系统Windows 10(64位专业版)。</li><li>2.系统盘需要至少8G的剩余硬盘空间。</li><li>3.内存达到4GB以上。</li><li>4.Windows10的手机模拟器基于Hyper-V,需要CPU支持二级地址转换技术。</li></ul><p>注意部分计算机会默认关闭主板BIOS的虚拟化技术，这时需要进入主板BIOS设置<br>页面开启虚拟化技术，然后再启动或者关闭Windows功能界面启动Hyper-V服务。</p><p>###开发工具的安装</p><p>Windows10 SDK已集成在Visual Studio上o 2015最新的版本中。开发工具可以直接到敝<br>软的Windows开发者网站进行下载(<a href="https //dev.windows.com">https //dev.windows.com</a>)，由于开发工具的更新速<br>度较快，请以官方最新版本为准。安装完成后，里面包含了程序的SDK.运行模拟器和编程<br>工具。Windows 10 Developer Tools包含的工具集合详细信息如下</p><ul><li>1.Visual Stuio是Winoows 10的集成开发环境(IDE)，其中包括了C#和XAML.代码编辑<br>功能、简单界面的布局与设计功能、编译程序、连接模拟器、部署程序，以及调试程序等功能。</li><li>2.Emulator是Winows 10的模拟器，开发者可以把应用程序部署到各种分辨率的模拟器上来检查程序运行效果。如果用户有Windows 10手机，可以直接使用手机来调试和运行自己编的程序。<h2 id="创建Windows-10-通用应用"><a href="#创建Windows-10-通用应用" class="headerlink" title="创建Windows 10 通用应用"></a>创建Windows 10 通用应用</h2>打开Visual Studio 2015/2017。本人用的是Visual Studio 2017。新建一个C#通用项目<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/cAjddJLAIJ.png?imageslim" alt="mark"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/0LJL24D0fm.png?imageslim" alt="新建UWP项目"><br>编辑MainPage.xaml文件，添加以下代码<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Background</span>=<span class="string">"&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;"</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span> <span class="attr">Margin</span>=<span class="string">"125,105,0,0"</span> <span class="attr">TextWrapping</span>=<span class="string">"Wrap"</span> <span class="attr">Text</span>=<span class="string">"Hello World"</span> <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span> <span class="attr">FontSize</span>=<span class="string">"72"</span>/&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></li></ul><p>如图：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/G7JCl403Eg.png?imageslim" alt="hello world"><br>运行结果：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/KCl6BB6mAG.png?imageslim" alt="结果"></p><h2 id="解析Hello-World-应用"><a href="#解析Hello-World-应用" class="headerlink" title="解析Hello World 应用"></a>解析Hello World 应用</h2><p>Hello World 项目工程中里面包含了MainPage.xaml文件、MainPage.xaml.cs文件、App.xaml文件、App.xaml.cs文件、Package.appxmanifest文件、AssemblyInfo.cs文件和一些图片文件。</p><h3 id="MainPage-xaml-文件"><a href="#MainPage-xaml-文件" class="headerlink" title="MainPage.xaml 文件"></a>MainPage.xaml 文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Page</span></span></div><div class="line">    <span class="attr">x:Class</span>=<span class="string">"HelloWorld.MainPage"</span></div><div class="line">    <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></div><div class="line">    <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></div><div class="line">    <span class="attr">xmlns:local</span>=<span class="string">"using:HelloWorld"</span></div><div class="line">    <span class="attr">xmlns:d</span>=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></div><div class="line">    <span class="attr">xmlns:mc</span>=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></div><div class="line">    <span class="attr">mc:Ignorable</span>=<span class="string">"d"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Background</span>=<span class="string">"&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span> <span class="attr">Margin</span>=<span class="string">"125,105,0,0"</span> <span class="attr">TextWrapping</span>=<span class="string">"Wrap"</span> <span class="attr">Text</span>=<span class="string">"Hello World"</span> <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span> <span class="attr">FontSize</span>=<span class="string">"72"</span>/&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Page</span>&gt;</span></div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;Page元素是一个程序页面的根元素，表示当前的XAML代码是一个页面，当前页面的其他所有UI元素都必须在Page元素下面。在当前的页面里面有两个控件：Grid控件、TextBlock法控件。其中，Grid控件是布局容器控件，所以在可视化视图上并没有看到Grid控件的显示。Text131ock控件是一个文本框控件，用于显示文本的内容，在可视化视图上看到的。“TextBlock”就是TextBlock控件。在上面的页面代码中可以看到TextBlock控件里面还有很多属性，这些属性用于定义控件的各种特性的设置。例如，”x Name。属性定义了<br>控件的名称，在后台代码里就可以通过名称来访问控件。Text。属性定义了TextBlock控<br>件文本显示的内容，等等。</p><h3 id="MainPage-xmal-cs文件"><a href="#MainPage-xmal-cs文件" class="headerlink" title="MainPage.xmal.cs文件"></a>MainPage.xmal.cs文件</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System;</div><div class="line"><span class="keyword">using</span> System.Collections.Generic;</div><div class="line"><span class="keyword">using</span> System.IO;</div><div class="line"><span class="keyword">using</span> System.Linq;</div><div class="line"><span class="keyword">using</span> System.Runtime.InteropServices.WindowsRuntime;</div><div class="line"><span class="keyword">using</span> Windows.Foundation;</div><div class="line"><span class="keyword">using</span> Windows.Foundation.Collections;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls.Primitives;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Data;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Input;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Media;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Navigation;</div><div class="line"></div><div class="line"><span class="comment">// https://go.microsoft.com/fwlink/?LinkId=402352&amp;clcid=0x804 上介绍了“空白页”项模板</span></div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 可用于自身或导航至 Frame 内部的空白页。</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainPage</span> : <span class="title">Page</span></div><div class="line">    &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainPage</span>(<span class="params"></span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">this</span>.InitializeComponent();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;MainPage.xmal.cs文件就是MainPage.xmal文件对应的后台代码的处理，在MainPage.xmal.cs文件会完成程序页面的控件的初始化工作和处理控件的触发事件。</p><h3 id="App-xaml-文件"><a href="#App-xaml-文件" class="headerlink" title="App.xaml 文件"></a>App.xaml 文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Application</span></span></div><div class="line">    <span class="attr">x:Class</span>=<span class="string">"HelloWorld.App"</span></div><div class="line">    <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></div><div class="line">    <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></div><div class="line">    <span class="attr">xmlns:local</span>=<span class="string">"using:HelloWorld"</span></div><div class="line">    <span class="attr">RequestedTheme</span>=<span class="string">"Light"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">Application</span>&gt;</span></div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;App.xaml文件是应用程序的入口XAML文件，一个应用程序只有一个该文件，并且<br>它还会有一个对应的App.xaml.cs文件。App.xaml文件的根节点是Appplication元素，它<br>里面的属性定义和空间定义与上面的Mainpage.xaml页面是一样的，不一样的地方是在<br>App.xam]文件中定义的元素是对整个应用程序是公用的，例如你在App.xaml文件中，添<br>加了〈Application，Resources〉元素来定义一些资源文件或者样式，这些资源在整个应用程序的所有页面都可以引用，而在Page的页画所定义的资源或者控件就只能否在当前的页面使用。</p><h3 id="App-xaml-cs"><a href="#App-xaml-cs" class="headerlink" title="App.xaml.cs"></a>App.xaml.cs</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System;</div><div class="line"><span class="keyword">using</span> System.Collections.Generic;</div><div class="line"><span class="keyword">using</span> System.IO;</div><div class="line"><span class="keyword">using</span> System.Linq;</div><div class="line"><span class="keyword">using</span> System.Runtime.InteropServices.WindowsRuntime;</div><div class="line"><span class="keyword">using</span> Windows.ApplicationModel;</div><div class="line"><span class="keyword">using</span> Windows.ApplicationModel.Activation;</div><div class="line"><span class="keyword">using</span> Windows.Foundation;</div><div class="line"><span class="keyword">using</span> Windows.Foundation.Collections;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls.Primitives;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Data;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Input;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Media;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Navigation;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 提供特定于应用程序的行为，以补充默认的应用程序类。</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">sealed</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">App</span> : <span class="title">Application</span></div><div class="line">    &#123;</div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 初始化单一实例应用程序对象。这是执行的创作代码的第一行，</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 已执行，逻辑上等同于 main() 或 WinMain()。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">App</span>(<span class="params"></span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">this</span>.InitializeComponent();</div><div class="line">            <span class="keyword">this</span>.Suspending += OnSuspending;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 在应用程序由最终用户正常启动时进行调用。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 将在启动应用程序以打开特定文件等情况下使用。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="e"&gt;</span>有关启动请求和过程的详细信息。<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLaunched</span>(<span class="params">LaunchActivatedEventArgs e</span>)</span></div><div class="line">        &#123;</div><div class="line">            Frame rootFrame = Window.Current.Content <span class="keyword">as</span> Frame;</div><div class="line"></div><div class="line">            <span class="comment">// 不要在窗口已包含内容时重复应用程序初始化，</span></div><div class="line">            <span class="comment">// 只需确保窗口处于活动状态</span></div><div class="line">            <span class="keyword">if</span> (rootFrame == <span class="literal">null</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="comment">// 创建要充当导航上下文的框架，并导航到第一页</span></div><div class="line">                rootFrame = <span class="keyword">new</span> Frame();</div><div class="line"></div><div class="line">                rootFrame.NavigationFailed += OnNavigationFailed;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (e.PreviousExecutionState == ApplicationExecutionState.Terminated)</div><div class="line">                &#123;</div><div class="line">                    <span class="comment">//<span class="doctag">TODO:</span> 从之前挂起的应用程序加载状态</span></div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="comment">// 将框架放在当前窗口中</span></div><div class="line">                Window.Current.Content = rootFrame;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (e.PrelaunchActivated == <span class="literal">false</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">if</span> (rootFrame.Content == <span class="literal">null</span>)</div><div class="line">                &#123;</div><div class="line">                    <span class="comment">// 当导航堆栈尚未还原时，导航到第一页，</span></div><div class="line">                    <span class="comment">// 并通过将所需信息作为导航参数传入来配置</span></div><div class="line">                    <span class="comment">// 参数</span></div><div class="line">                    rootFrame.Navigate(<span class="keyword">typeof</span>(MainPage), e.Arguments);</div><div class="line">                &#125;</div><div class="line">                <span class="comment">// 确保当前窗口处于活动状态</span></div><div class="line">                Window.Current.Activate();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 导航到特定页失败时调用</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span><span class="doctag">&lt;param name="sender"&gt;</span>导航失败的框架<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span><span class="doctag">&lt;param name="e"&gt;</span>有关导航失败的详细信息<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">OnNavigationFailed</span>(<span class="params"><span class="keyword">object</span> sender, NavigationFailedEventArgs e</span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Failed to load Page "</span> + e.SourcePageType.FullName);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 在将要挂起应用程序执行时调用。  在不知道应用程序</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 无需知道应用程序会被终止还是会恢复，</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 并让内存内容保持不变。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="sender"&gt;</span>挂起的请求的源。<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="e"&gt;</span>有关挂起请求的详细信息。<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnSuspending</span>(<span class="params"><span class="keyword">object</span> sender, SuspendingEventArgs e</span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">var</span> deferral = e.SuspendingOperation.GetDeferral();</div><div class="line">            <span class="comment">//<span class="doctag">TODO:</span> 保存应用程序状态并停止任何后台活动</span></div><div class="line">            deferral.Complete();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;App.xaml.cs 文件是一个控制整个应用程序的全局文件，整个应用程序的生命周期都在该文件中定义和处理。应用程序在整个生命周期会有三个状态：Running（运行），NotRunning（未运行）和 Suspended（挂起）<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/DmKlm3EJ1b.png?imageslim" alt="应用程序生命周期"></p><h3 id="Package-appxmanifest文件"><a href="#Package-appxmanifest文件" class="headerlink" title="Package.appxmanifest文件"></a>Package.appxmanifest文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">Package</span></span></div><div class="line">  <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/foundation/windows10"</span></div><div class="line">  <span class="attr">xmlns:mp</span>=<span class="string">"http://schemas.microsoft.com/appx/2014/phone/manifest"</span></div><div class="line">  <span class="attr">xmlns:uap</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/uap/windows10"</span></div><div class="line">  <span class="attr">IgnorableNamespaces</span>=<span class="string">"uap mp"</span>&gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Identity</span></span></div><div class="line">    <span class="attr">Name</span>=<span class="string">"f85505e4-25a4-4f06-b489-dfc4750ab693"</span></div><div class="line">    <span class="attr">Publisher</span>=<span class="string">"CN=Lovemefan"</span></div><div class="line">    <span class="attr">Version</span>=<span class="string">"1.0.0.0"</span> /&gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">mp:PhoneIdentity</span> <span class="attr">PhoneProductId</span>=<span class="string">"f85505e4-25a4-4f06-b489-dfc4750ab693"</span> <span class="attr">PhonePublisherId</span>=<span class="string">"00000000-0000-0000-0000-000000000000"</span>/&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">DisplayName</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">DisplayName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">PublisherDisplayName</span>&gt;</span>Lovemefan<span class="tag">&lt;/<span class="name">PublisherDisplayName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Logo</span>&gt;</span>Assets\StoreLogo.png<span class="tag">&lt;/<span class="name">Logo</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">TargetDeviceFamily</span> <span class="attr">Name</span>=<span class="string">"Windows.Universal"</span> <span class="attr">MinVersion</span>=<span class="string">"10.0.0.0"</span> <span class="attr">MaxVersionTested</span>=<span class="string">"10.0.0.0"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Dependencies</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Resources</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Resource</span> <span class="attr">Language</span>=<span class="string">"x-generate"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Resources</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Applications</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Application</span> <span class="attr">Id</span>=<span class="string">"App"</span></span></div><div class="line">      <span class="attr">Executable</span>=<span class="string">"$targetnametoken$.exe"</span></div><div class="line">      <span class="attr">EntryPoint</span>=<span class="string">"HelloWorld.App"</span>&gt;</div><div class="line">      <span class="tag">&lt;<span class="name">uap:VisualElements</span></span></div><div class="line">        <span class="attr">DisplayName</span>=<span class="string">"HelloWorld"</span></div><div class="line">        <span class="attr">Square150x150Logo</span>=<span class="string">"Assets\Square150x150Logo.png"</span></div><div class="line">        <span class="attr">Square44x44Logo</span>=<span class="string">"Assets\Square44x44Logo.png"</span></div><div class="line">        <span class="attr">Description</span>=<span class="string">"HelloWorld"</span></div><div class="line">        <span class="attr">BackgroundColor</span>=<span class="string">"transparent"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">uap:DefaultTile</span> <span class="attr">Wide310x150Logo</span>=<span class="string">"Assets\Wide310x150Logo.png"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">uap:SplashScreen</span> <span class="attr">Image</span>=<span class="string">"Assets\SplashScreen.png"</span> /&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">uap:VisualElements</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">Application</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Applications</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Capabilities</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Capability</span> <span class="attr">Name</span>=<span class="string">"internetClient"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Capabilities</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Package</span>&gt;</span></div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;Package.appxmanifest文件是Windows 10应用程序的清单文件，声明应用的标识、应<br>用的功能以及用来进行部署和更新的信息。可以在清单文件对当前的应用程序进行配置，<br>例如添加磁帖图像和初始屏幕、指示应用支持的方向以及定义应用的功能种类、Package<br>元素是整个清单的根节点；Identity元素表示应用程序版本发布者名称等信息mp:<br>Phoneldentity元素表示应用程序相关的唯一标识符信息Properties元素包含了应用程序<br>的名称、发布者名称等信息的设置；Prerequisites元素则是用于设置应用程序所支持的系<br>统版本号；Resources元素表示应用程序所使用资源信息，例如语言资源Applications元<br>素里面则包含了与应用程序相关的logo设置、闪屏图片设置等可视化的设置信息<br>Capabilities元素表示当前应用程序所使用的一些手机特定功能，例如internetclient表示<br>使用网络的功能。</p><p>&#160;&#160;&#160;&#160;Page.appxmanifest文件可以支持在可视化图形中进行设置，可以双击解决方案中<br>的package.appxmanifest文件来打开此文件的可视化编辑视图。我们可以直接在可视化界<br>面上设置程序的logo、磁贴、功能权限等。在后续的应用程序开发里面有些功能会需要在<br>Package.appxmanifest清单文件上进行相关的配置，到时候再进行详细的讲解。</p><h2 id="不同平台设备的适配"><a href="#不同平台设备的适配" class="headerlink" title="不同平台设备的适配"></a>不同平台设备的适配</h2><p>&#160;&#160;&#160;&#160;Windows 10通用应用程序针对特定的平台还会有一个子API的集合，当我们要使用<br>到某个平台的特定API的时候(例如手机相机硬件按钮触发事件)，这时候就需要调用特定<br>平台的API.因为Winclows 10应用程序是一个安装包，可以部署到所有的Windows 10系<br>统平台，所以这里就涉及一个八PI适配的问题，对特定平台的API进行特殊处理。除了特<br>定平台的API,还有一个适配的工作就是界面适配，Windows 10也提供了一系列的API来<br>给我们做界面的适配工作。</p><p>###特定平台的API调用</p><p>&#160;&#160;&#160;&#160;目前在Winclows 10里面有Windows Mobile Extension SDK和田indows Desktop<br>Extension SDK两个扩展的SDK分别表示手机版本和桌面版本的扩展SDK(在后面<br>章节里面若用到特定平台的API,都会进行区分标识)。这两个SDK都是直接内置在<br>Windows 10的开发SDK里面的，但是默认情况下不会给项目工程添加上，需要使用时可以<br>在项目工程里面引用，路径为Project-&gt;Add Reference-&gt;-Windows Universal-&gt;Extensions.<br>在使用特定平台的API的时候，必须判断当前的环境是否支持(不支持的平台调用将会引<br>发异常)。判断的方法为Windows.Foundation.Metadata.ApiInformation.IsTypepresent<br>(String type Name)，type Name表示带完整的命名空间的API的名称，返回true表示支持，<br>返回false表示不支持。</p><p>##界面适配<br>&#160;&#160;&#160;&#160;Windows 10系统支持多种硬件平台和分辨率，Windows 10系统底层对界面的适配色<br>昼非常强大的，同样的控件在不同的硬件平台上显示也可能会有差异，这种适配就是由<br>Windows 10系统自己来完成适配，来匹配不同的硬件和分辨率的显示效果。虽然<br>Windpws 10底层完成了各种控件的适配，但是很多时候还是需要在程序里来实现适配。在<br>开发通用程序的时候，要充分地考虑各种不同分辨率下的显示效果，可以通过可视化设计界<br>面和各种分辨率的模拟器来进行测试。适配界面有几种常用的编程技巧</p><ul><li>使用相对的布局控件来进行排列，如Grid.Relativepanel等;</li><li>使用相对的属性来设置控件在容器的位置，如orizontalAlignment.VerticalAlignment属性;</li><li>设置长度宽度的最大值最小值限制;</li><li>根据设备实际分辨率来设置长度宽度或者位置。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; UWP学习笔记 (二)   UWP开发环境及项目工程解析：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;介绍开发环境及UWP的组成部分&lt;br&gt;
    
    </summary>
    
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="UWP" scheme="lovemefan.win/tags/UWP/"/>
    
  </entry>
  
  <entry>
    <title>UWP学习笔记 (一) 初识UWP</title>
    <link href="lovemefan.win/2017/07/08/%E4%BB%80%E4%B9%88%E6%98%AFUWP/"/>
    <id>lovemefan.win/2017/07/08/什么是UWP/</id>
    <published>2017-07-08T03:02:00.000Z</published>
    <updated>2017-07-10T03:23:15.509Z</updated>
    
    <content type="html"><![CDATA[<p><strong> UWP学习笔记 (一) 初识UWP：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>认识UWP及开发前的一些准备<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="什么是UWP"><a href="#什么是UWP" class="headerlink" title="什么是UWP"></a>什么是UWP</h2><blockquote><p>UWP即Windows 10 中的Universal Windows Platform简称。即Windows通用应用平台，在Win 10 Mobile/Surface(Windows平板电脑）/PC/Xbox/HoloLens等平台上运行，uwp不同于传统pc上的exe应用也跟只适用于手机端的app有本质区别。它并不是为某一个终端而设计，而是可以在所有windows10设备上运行。<br>微软在MWC 2015上首次展示了Win10统一平台战略的“代表作”：Win10通用应用（Windows10 Universal App）平台。在Win10中，所有设备将会运行在一个统一的Windows10系统核心之上。这样的设计使得一款应用可以在所有Win10设备上运行，今后Win10手机、平板电脑、笔记本电脑、PC、Xbox，甚至是3D全息眼镜HoloLens、巨屏触控Surface Hub和物联网设备例如Raspberry Pi 2等都不再有界限。新的通用平台允许新类型的Windows10通用应用真正实现一次编写、一套业务逻辑和统一的用户界面。应用在统一的Win10商店中将只会有一个安装包，而它将适用于所有Win10设备。[1]  在 Windows 10 Insider Preview 中的 Universal Windows Platform (UWP)借助 Windows 10 UWP 将在 Windows 应用中更上一层楼。UWP 会根据不同的设备类型使用相应的自适应 UI 控件，并使用运行 Windows 10 Insider Preview 的所有设备上必须具有的通用 API 集。简单的说，uwp就是通用应用的意思可以在电脑端，手机端，或其他设备通用。不用分别为不同的平台设计不同的软件。即一个软件就可以通吃。这是微软为win10系统定制的趋势。微软声称不管是开发者，还是使用者，都省事。   –百度百科</p></blockquote><p>首先来欣赏一下国内一些比较用心的UWP<br><strong>网易云音乐</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170708/HJG2J760dA.png?imageslim" alt="网易云音乐"></p><p><strong>IT之家</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170708/A65Aa9ECm6.png?imageslim" alt="IT之家"></p><h3 id="如何获取UWP"><a href="#如何获取UWP" class="headerlink" title="如何获取UWP"></a>如何获取UWP</h3><ul><li>1.从Window 应用商店获取。打开应用商店，搜索并选择下载。</li><li>2.<a href="https://www.windows10.pro/how-to-install-uwp-offline-packages" target="_blank" rel="external">离线部署</a><h2 id="开发准备"><a href="#开发准备" class="headerlink" title="开发准备"></a>开发准备</h2></li><li>开发环境：Windows 10 +Visual Studio 2015/2017    这里说明必须是<strong>Windows 10 </strong>，其他不行。VS 2015及以上才支持UWP开发，所以只能用VS 2015或2017。我目前的环境是 Win10 创意者 + VS 2017。</li><li>开发者模式。前往 设置-更新与安全-针对开发者-开发者模式</li><li>技术储备 C#/C++/VB 后期我们将使用C#进行开发程序的逻辑部分 <a href="http://bit.do/csharp-fundamentals" target="_blank" rel="external">C#微软官方教程（有中文字幕）</a></li><li>XAML(EXtensible Application Markup Language)。XAML是一种类似HTML的标记语言。用来设计UI部分后面会着重学习XAML语言。如果是有HTML基础的同学会很容易上手。<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>我对windows Phone有一种特有的情怀，从之前的Windows Phone 7 开始，我就喜欢Windows Phone上了其流畅顺滑的操作。到后来的Windows 10 mobile 。由于其软件生态太差，无法满足生活需求，我才不得不转向Android阵营。以前Android的卡慢是我无法忍受的，但随着Android 6.0/7.0，即将发布的Android 8.0，Android慢慢优化的系统也能适应大部分人的需求。Android，iOS是大势所趋，我为什么还要选择UWP这种有些人听都没听过的平台呢？</li><li>首先，我看重的是UWP的优势，一次编译，能在所有Win 10 设备运行，包括电脑、平板、手机(Win10 手机)、XBox、HoloLens、surface Hub、loT(物联网)。微软费尽心思推广Win10，就是为了增加UWP的运行环境。现在及未来Win10的装机量不容小视。而且UWP小巧轻便，前途无可限量。</li><li>其次，UWP有着自己的类似Google Play和Apple Store的应用商店，保证其安全性。</li><li>然后，我想尽自己一份微薄力量来完善Windows 生态，主要还是Windows phone的生态。<h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2></li><li>UWP微软官方学习课程 <a href="">官方MVA]</a> <a href="http://www.bilibili.com/video/av7997007/" target="_blank" rel="external">bilibili搬运</a><br>Microsoft Virtual Academy (MVA)   <a href="https://mva.microsoft.com/" target="_blank" rel="external">【链接】</a>是微软官方的一个免费的视频教学课堂。里面有大量的学习资源(有中文字幕)，强烈推荐。</li><li>深出浅入UWP （中文课程）<a href="http://www.bilibili.com/video/av3610677" target="_blank" rel="external">【bilibili】</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; UWP学习笔记 (一) 初识UWP：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;认识UWP及开发前的一些准备&lt;br&gt;
    
    </summary>
    
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="UWP" scheme="lovemefan.win/tags/UWP/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell篇 (一) 初识PowerShell</title>
    <link href="lovemefan.win/2017/07/05/PowerShell%E7%AF%87%20%20(%E4%B8%80)%E5%88%9D%E8%AF%86PowerShell/"/>
    <id>lovemefan.win/2017/07/05/PowerShell篇  (一)初识PowerShell/</id>
    <published>2017-07-05T12:53:23.000Z</published>
    <updated>2017-07-07T02:46:11.707Z</updated>
    
    <content type="html"><![CDATA[<p><strong> PowerShell篇 (一) 初识PowerShell：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>什么是PowerShell<br><a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><h1 id="初识PowerShell"><a href="#初识PowerShell" class="headerlink" title="初识PowerShell"></a>初识PowerShell</h1><p><code>作者：lovemefan</code> <code>以下资料收集于IT之家和知乎</code></p><h2 id="PowerShell的邂逅"><a href="#PowerShell的邂逅" class="headerlink" title="PowerShell的邂逅"></a>PowerShell的邂逅</h2><p>&#160;&#160;&#160;&#160;在我搭建我的博客的时候，cmd命令肯定是少不了的。除了cmd我们还可以选择Git Bash和PowerShell。<br>Git Bash是Git自带的一个命令行工具，用来上传，克隆等一些GitHub的操作。我之前也只知道Power Shell也是命令行，用它部署过离线的<a href="http://baike.baidu.com/link?url=J5GeaQ_aSSMscd2pdx3O7nv1xTjZ99hw4ppIODqWFTtGFqHuxw13ppv9HviTZ8IglPkdRudcQb4-expkEoxC_a" target="_blank" rel="external">UWP</a>，但平常不太会用所以没太在意。我只知道是微软为了替代cmd而特意在Windows 10里添加的新功能 。但在我使用Windows 10 创意者 的时候，正如往常使用鼠标右键+Shift ，本来是<strong>“从此处打开命令窗口”</strong>，结果就是没找到。反而这样显示<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/IKDe87048g.jpg?imageslim" alt="mark"><br>后来发现这是微软故意而为之的</p><h2 id="什么是PowerShell"><a href="#什么是PowerShell" class="headerlink" title="什么是PowerShell"></a>什么是PowerShell</h2><blockquote><p>&#160;&#160;&#160;&#160;Windows PowerShell 是一种命令行外壳程序和脚本环境，使命令行用户和脚本编写者可以利用 .NET Framework的强大功能。<br>&#160;&#160;&#160;&#160;它引入了许多非常有用的新概念，从而进一步扩展了您在 Windows 命令提示符和 Windows Script Host 环境中获得的知识和创建的脚本。<br>&#160;&#160;&#160;&#160;Windows PowerShell v3将伴随着MicrosoftHyper-V3.0和Windows Server 2012发布。PowerShell v3是一个Windows任务自动化的框架，它由一个命令行shell和内置在这个.NET框架上的编程语言组成。<br>&#160;&#160;&#160;&#160;PowerShell v3采用新的cmdlet让管理员能够更深入到系统进程中，这些进程可以制作成可执行的文件或脚本（script）。一条cmdlet是一条轻量命令，Windows PowerShell运行时间在自动化脚本的环境里调用它。Cmdlet包括显示当前目录的Get-Location，访问文件内容的Get-Content和结束运行进程的Stop-Process。<br>&#160;&#160;&#160;&#160;PowerShell v3在Windows Server 8中装载了Windows Management Framework 3.0。PowerShell运行时间也能嵌入到其它应用。——百度百科</p></blockquote><p><a href="https://msdn.microsoft.com/en-us/powershell" target="_blank" rel="external">微软PowerShell官网</a></p><p>&#160;&#160;&#160;&#160;从Windows10创意者更新开始，PowerShell正式上位替换了命令提示符CMD。不论是Windows+X右键超级菜单，还是Shift+文件夹空白处右键，又或在文件资源管理器文件菜单中，都没有命令提示符CMD的身影了，全部都由PowerShell取而代之了。长期使用CMD的Windows系统管理员或Windows命令行极客恐怕一时不能适应，使用CMD都只能去开始菜单-所有应用-Windows系统-命令提示符打开使用，或者Windows+R键然后输入cmd，或者在小娜输入框输入cmd，再或者在PowerShell中输入cmd(看来又绕回来了)。藏得这么深，显然是不想让人用了啊。不仅如此，Power Shell还登陆了Linux和MacOS<br><a href="https://zhuanlan.zhihu.com/p/26346821?utm_source=qq&amp;utm_medium=social" target="_blank" rel="external">在Linux下安装PowerShell</a><br>PoweShell上位图如下<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/bfiiJCEHd4.jpg?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;问题来了，PowerShell这货凭什么力压CMD，强行上位？如果你之前试用过PowerShell，相信它一定没有给你什么好印象。打开慢！反应慢！命令还陌生！还动不动就弹一大堆谁都看不懂错误，PowerShell究竟凭什么在Windows10创意者更新中替代命令提示符CMD呢？微软脑抽了？<br>微软没有脑抽，PowerShell是凭借其强大的功能替换CMD的。这里要先说明以下PowerShell究竟是什么东西，或者它究竟是不是东西？<br>&#160;&#160;&#160;&#160;Windows PowerShell不是东西，它是专为系统管理员设计的新Windows命令行shell，它包括交互式提示和脚本环境。PowerShell定义很多命令与操作系统，特别是与文件系统交互，能够启动应用程序，甚至操纵应用程序；PowerShell允许将几个命令组合起来放到文件里执行，实现文件级的重用，也就是说有脚本的性质；PowerShell能够充分利用.Net类型和COM对象，来简单地与各种系统交互，完成各种复杂的、自动化的操作。<br>&#160;&#160;&#160;&#160;用人话说就是CMD能做的PowerShell都能做，CMD不能做的Powershell也能做。就是这么自信！不信？赶紧打开PowerShell把下面的命令复制进去，看看它干了什么事，然后你用CMD做出来吧！<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># create new excel instance</span></div><div class="line"><span class="variable">$objExcel</span> = <span class="built_in">New-Object</span> -comobject Excel.Application</div><div class="line"><span class="variable">$objExcel</span>.Visible = <span class="literal">$True</span></div><div class="line"><span class="variable">$objWorkbook</span> = <span class="variable">$objExcel</span>.Workbooks.Add()</div><div class="line"><span class="variable">$objWorksheet</span> = <span class="variable">$objWorkbook</span>.Worksheets.Item(<span class="number">1</span>)</div><div class="line"><span class="comment"># write information to the excel file</span></div><div class="line"><span class="variable">$i</span> = <span class="number">0</span></div><div class="line"><span class="variable">$first10</span> = (ps | sort ws -Descending | select -first <span class="number">10</span>)</div><div class="line"><span class="variable">$first10</span> | <span class="keyword">foreach</span> -Process &#123;<span class="variable">$i</span>++; <span class="variable">$objWorksheet</span>.Cells.Item(<span class="variable">$i</span>,<span class="number">1</span>) = <span class="variable">$_</span>.name; <span class="variable">$objWorksheet</span>.Cells.Item(<span class="variable">$i</span>,<span class="number">2</span>) = <span class="variable">$_</span>.ws&#125;</div><div class="line"><span class="variable">$otherMem</span> = (ps | measure ws -s).Sum - (<span class="variable">$first10</span> | measure ws -s).Sum</div><div class="line"><span class="variable">$objWorksheet</span>.Cells.Item(<span class="number">11</span>,<span class="number">1</span>) = <span class="string">"Others"</span>; <span class="variable">$objWorksheet</span>.Cells.Item(<span class="number">11</span>,<span class="number">2</span>) = <span class="variable">$otherMem</span></div><div class="line"><span class="comment"># draw the pie chart</span></div><div class="line"><span class="variable">$objCharts</span> = <span class="variable">$objWorksheet</span>.ChartObjects()</div><div class="line"><span class="variable">$objChart</span> = <span class="variable">$objCharts</span>.Add(<span class="number">0</span>, <span class="number">0</span>, <span class="number">500</span>, <span class="number">300</span>)</div><div class="line"><span class="variable">$objChart</span>.Chart.SetSourceData(<span class="variable">$objWorksheet</span>.range(<span class="string">"A1:B11"</span>), <span class="number">2</span>)</div><div class="line"><span class="variable">$objChart</span>.Chart.ChartType = <span class="number">70</span></div><div class="line"><span class="variable">$objChart</span>.Chart.ApplyDataLabels(<span class="number">5</span>)</div></pre></td></tr></table></figure></p><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/CJi70f9ahF.png?imageslim" alt="mark"><br>没错，有点慢，等下吧，接下来它自动打开了excel，如图，我果然还是IT之家老粉丝啊<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/B8IDAdFlm4.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;上面一段代码是PowerShell界常见的一段神代码，很多初学者被其带入了PowerShell的大门。有效代码不过20来行，作用是把当前系统中最占内存的10个进程的数据发送到Excel中，并绘制成三维饼图。CMD是很难做到了，被替代也理所应当了。<br>&#160;&#160;&#160;&#160;PowerShell的定位是操作系统和应用程序的管理工具，从这个角度看，它是CMD的升级版，并非简单的对CMD进行扩展，事实上微软也不打算扩展和升级CMD了，以后PowerShell将全方位的替代CMD，目前CMD和PowerShell还是并存状态。<br>下面正式介绍PowerShell。</p><h3 id="（一）简单的命令"><a href="#（一）简单的命令" class="headerlink" title="（一）简单的命令"></a>（一）简单的命令</h3><p>&#160;&#160;&#160;&#160;在CMD中，命令是从非常简单（如attrib.exe）到非常复杂（如netsh.exe）的可执行程序，新入门用户一旦遇到复杂命令，只能束手无策，只能求助搜索引擎，解决当前需求之后，就把命令的用法抛诸脑后，下次使用又要重新学习，极其不便。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/526ijlFjLJ.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;PowerShell命令设计非常规范，它的命令由“动词”和“名词”两部分组成，比如“get”表示检索数据，“process”表示系统进程，把“get”和“process”组合起来的PowerShell命令就是“get-process”，意思是获取系统进程列表，这种命令在PowerShell中称为“cmdlet（读作“command-let”）”。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/CIBlH2i1f7.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;使用“动词-名词”结构还有一个好处，就是不同的“动词”和“名词”可以自由组合，很少的几个“动词”和“名词”就可以组合出大量的可用命令，使命令记忆量大为降低，只需记住简单的几个词语，就可以使用大量的命令，这是包括命令提示符CMD在内的Shell不具备的，并且不会产生歧义，对新用户非常友好。</p><h3 id="（二）别名系统"><a href="#（二）别名系统" class="headerlink" title="（二）别名系统"></a>（二）别名系统</h3><p>&#160;&#160;&#160;&#160;“动词-名词”结构的cmdlet固然对新手友好，但也带来了另一个问题，命令名称过长，在命令行交互使用时不方便，在命令行窗口输入命令可以使用Tab键进行补全，可是经常使用还是需要键入大量的内容，要是能够把命令缩短一些就好了。PowerShell在设计时已经考虑到了，为此创建了别名系统，之所以叫名别系统，是因为PowerShell中的别名非常强大，能够非常方便的对别名进行增加、删除、修改，还为之创建了别名驱动器，可以像访问文件系统驱动器一样方便的访问别名驱动器。<br>PowerShell非常贴心的为用户创建了大量内置别名，一方面减少了常用命令的输入长度，另一方面也为熟悉其它Shell而不熟悉PowerShell的用户提供了方便，常见Shell如bash、cmd，PowerShell都为用户提供了他们熟悉的别名。下面是可以在Powershell中使用的通用的Cmd.exe和UNIX命令的简短列表。<br><strong>在PowerShell下输入</strong><br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">get-alias</span></div></pre></td></tr></table></figure></p><p>以下只显示了部分，要想查询所有别名请用<code>alias</code>命令查询<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/6AghbjEgAg.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;PowerShell除了自带别名外，用户自己也可以创建别名，不仅仅可以为cmdlet创建别名，也可以为PowerShell函数、带参数的命令和包含完整路径的命令行程序创建别名。<br>比如为记事本创建别名，可以使用如下命令<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">New-Alias</span> np c:\windows\notepad.exe</div></pre></td></tr></table></figure></p><p>&#160;&#160;&#160;&#160;创建别名完成后，在命令行中输入np就能直接打开记事本。在命令行中创建的别名只能在当前命令行窗口中使用，如果想以后也能使用此别名，可以把以上命令保存在PowerShell配置文件中，以后无论是在命令行中，还是使用脚本，都可以在本机使用np别名了。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/8h0kd2FD21.png?imageslim" alt="mark"><br>PowrShell配置文件位置可以使用$profile命令查询。</p><p>&#160;&#160;&#160;&#160;想查看当前命令行窗口可以使用的别名，可以进入别名驱动器查看，使用dir alias:就能查看所有能用的别名，也可以使用get-alias命令查看别名。</p><h3 id="三-管理任务"><a href="#三-管理任务" class="headerlink" title="(三) 管理任务"></a>(三) 管理任务</h3><p>Windows PowerShell的基本目标是使用户能够以交互方式或通过脚本更好、更容易地对系统进行管理控制，为了达成这个目标，PowerShell提供了大量命令来执行各种管理任务，让用户轻松完成管理系统任务。</p><h4 id="1、管理进程"><a href="#1、管理进程" class="headerlink" title="1、管理进程"></a>1、管理进程</h4><p>前面已经提过管理系统进程的命令，管理进程常用命令就是get-process命令和stop-process命令，get-process命令获取进程之后可以直接用管道发送给stop-process命令结束进程。比如，关闭之前打开的记事本，可以使用下面的命令很方便的关闭记事本。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">get-process</span> -Name notepad | <span class="built_in">stop-process</span></div></pre></td></tr></table></figure></p><h4 id="2、处理文件和文件夹"><a href="#2、处理文件和文件夹" class="headerlink" title="2、处理文件和文件夹"></a>2、处理文件和文件夹</h4><p>&#160;&#160;&#160;&#160;PowerShell使用Get-ChildItem获取文件夹中直接包含的所有项，它有系统内置别名dir和ls，使用CMD和BASH的用户均可以轻松上手。如果想查看C:中的文件夹和文件，直接使用dir c:，PowerShell立刻就会列出C:中的文件和文件夹。其它处理文件和文件夹的命令有Copy-Item、New-Item、Remove-Item等，具体用法可以使用get-help然后跟命令名称即可查询。</p><h4 id="3、处理系统服务"><a href="#3、处理系统服务" class="headerlink" title="3、处理系统服务"></a>3、处理系统服务</h4><p>&#160;&#160;&#160;&#160;可以像管理进程一样管理系统服务，Get-Service命令获取服务列表，Stop-Service命令停止服务，Start-Service命令启动服务，Suspend-Service命令挂起服务，Restart-Service命令重启服务，Set-Service服务设置服务属性。如果想一次性启动已经停止的服务，可以使用以下命令：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">get-service</span> | <span class="built_in">where-object</span> &#123;<span class="variable">$_</span>.Status <span class="nomarkup">-eq</span> <span class="string">"Stopped"</span>&#125; -exclude</div><div class="line">wisvc | <span class="built_in">start-service</span></div></pre></td></tr></table></figure></p><p>&#160;&#160;&#160;&#160;这行命名会把除wisvc之外的命令都启动，这只是一个示例，不要在自己电脑使用，启动所有服务会消耗大量系统资源。</p><h4 id="4、处理注册表"><a href="#4、处理注册表" class="headerlink" title="4、处理注册表"></a>4、处理注册表</h4><p>&#160;&#160;&#160;&#160;PowerShell可以非常方便的处理注册表项目，与进程和服务不同的是，PowerShell并未提供专用的注册表命令，而是使用处理文件和文件夹的命令，这并不奇怪，PowerShell为用户提供了注册表驱动器，可以很好的处理注册表项目。由于注册表对系统非常重要，错误处理注册表也许会导致系统出问题，处理注册表，特别是删除注册表项目要非常小心，最好能在处理注册表项目之前先备份要处理的项目。没有管理员权限也能处理部分注册表项目，这与regedit注册表编辑器不同，注册表编辑器必须使用管理员权限打开，然后才能操作项目。<br><strong>下面的表格列出了访问注册表所需的所有命令</strong></p><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/LcIe6FFlJ4.png?imageslim" alt="mark"><br>PowerShell只提供了两个注册表驱动器HKCU:和HKLM:，其中HKLM:是HKEY_LOCAL_MACHINE的缩写，HKCU:是HKEY_CURRENT_USER的缩写，如果想要访问所有注册表驱动器，可以进入Microsoft.PowerShell.Core\Registry::。</p><h4 id="5、处理其它任务"><a href="#5、处理其它任务" class="headerlink" title="5、处理其它任务"></a>5、处理其它任务</h4><p>PowerShell还可以处理证书、防火墙、appx应用、打印机等任务。大家可以使用get-command命令查找相关命令。</p></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; PowerShell篇 (一) 初识PowerShell：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;什么是PowerShell&lt;br&gt;
    
    </summary>
    
    
      <category term="PowerShell" scheme="lovemefan.win/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>我为什么要建立这个博客</title>
    <link href="lovemefan.win/2017/07/04/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BB%BA%E7%AB%8B%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <id>lovemefan.win/2017/07/04/为什么要建立这个博客/</id>
    <published>2017-07-04T13:32:00.000Z</published>
    <updated>2017-07-07T02:47:01.590Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 我为什么要建立这个博客：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>建立博客的原因<br><a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><h1 id="为什么要建立这个博客"><a href="#为什么要建立这个博客" class="headerlink" title="为什么要建立这个博客"></a>为什么要建立这个博客</h1><p><code>作者：lovemefan</code>  <a href="www.github.com/lovemefan">我的GitHub</a></p><blockquote><p> &#160; &#160;&#160; &#160;我现在是一名即将大三的软件的学生。对编程还谈得上热爱，但至今也只能承认懂得点皮毛。为什么我要写这个博客？根本原因还是“懒”。我需要一个能够鞭策我一直坚持下去的东西。不过我也承认有一点点装B的嫌疑。我个人性格有点不羁，不喜欢按部就班，墨守成规。总想着做点疯狂的事。兴趣与时间总是矛盾的，可是时间又是从海绵里挤出来的。想想大一大二就这样“嗖”一般的过掉了…掉了…了。东西没学到多少，时间就快没了。看到有的同学能做一个看起来就很牛逼的程序，然后讲一堆从来没听过的专业术语。“卧槽！卧槽！！！”，“厉害了，我的哥”，“哇，大神，带我飞”，像这样的话没少听。一般这种时候我都会嫉妒一下。“TM为什么我不会”，“不过，不会也正常，我TM又不是神”，“妈蛋，下次去学，嗯！一定要学会”，“好像也就这样了，先放一放吧”。大多数情况下这件事就被无限延期了。<br>  &#160; &#160;&#160; &#160;首先，我总结了一个原因——懒。这种东西确实是人类的天敌，当然不排除某些勤奋已经成了日常的hentai。我有一些类似的经历，写作业写到两三点停不下来，还像打了鸡血一样很兴奋，鬼知道发生了什么。最长的一次在图书馆呆了13多个小时，从早上8点到晚上9点半，丝毫不想走。这种接近痴狂的人生，我个人觉得还蛮不错的。但是，但是，但是我又双叒叕被懒惰打败了，一不小心就荒废了下学业。结果就是期末成绩无情的嘲讽。懒惰这东西迟早，一定，必须面对。所以我觉得有必要做些事情，比如维护这博客。<br> &#160; &#160;&#160; &#160;其次，我吐槽下大学现在这个机制不是我想要的。大学也读了一半了，大多数人是这么过的：“上课可以不听，下课我看一下就好了。”，“这题好像老师讲过，不过我忘了。”“学习，学个屁”，“这次考试考哪些重点，帮我画一下”，“最后一个礼拜复习，祈祷不挂”，“复习什么，大家一起挂”，“成绩出来了，吐血，80多”（MD，老子一巴掌。。。）。然而结果不是我所期望的。考试这种东西确实是有存在的必要，但现在的考试总感觉变了味。老师说什么会考，就考什么，可能还是去年的原题。只要刷几套往年试卷，就可以考得很好，于是更多的人在钻研怎么“考试”，而不是解决问题。两年下来，你是更擅长考试，还是更擅长你的专业知识。我非常敬佩那些不以考试为目的教学的老师。就比如说那个陈胖子（没事，他看不到），他上的Java和c语言数据结构还是很有分量的。<br> &#160; &#160;&#160; &#160;假设大学四年我都这样过的话，满足吗？能力能提高多少呢？到底能学到多少东西呢？我现在可以C，C++，C#，Java，JavaScript，Matlab，Python…写一个Hello world，这样够吗?有人会说可以了，已经很不错了。可是野心不大一点，目标不远一点，不疯狂一点还是我的风格吗？现在还不疯狂一把，以后还有机会吗？你能保证未来不会因现在后悔吗？<br>所以，我建立了在个博客，并且想维护它。我想多学点东西。现在的初心是既可以记录学习的点滴，也可以每时每刻都鞭策着我，因为每更新一次这个东西，就会得到一种“快感”，成就感。更新GitHub时也是一样。私心还是有的，当然希望被人关注了，肯定是越多越好了。</p></blockquote><h2 id="博客的内容"><a href="#博客的内容" class="headerlink" title="博客的内容"></a>博客的内容</h2><p>我尽量能写就多写，最近在知乎，CDNS，简书…中看到大量IT干货，激发了我极大的兴趣<br>所以想着现在来建立这博客也不迟，算得上是学习了一种记录和鞭策吧</p><ul><li>一些学习过程中的问题，解决思路方法。</li><li>我感兴趣的事物，可能以后会写测评。</li><li>GitHub，知乎,IT之家等 一些趣味知识。</li><li>开发UWP。我曾经是一名wper（Lumia 1020），早在很久之前就打算学习UWP了，我希望能够坚持下去，尽管可能没有太多的时间和精力。就算是龟速更新，我也不会停止学习的。<h2 id="计划列表"><a href="#计划列表" class="headerlink" title="计划列表"></a>计划列表</h2></li><li>UWP，Android，web(大三必修)</li><li>UE4(虚幻4)，unity  (项目所需和个人兴趣爱好)</li><li>学些脚本语言，待定：PowerShell，JavaScript等</li><li>待定</li></ul></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 我为什么要建立这个博客：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;建立博客的原因&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
