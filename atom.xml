<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lovemefan的博客</title>
  
  <subtitle>一入编程深似海，从此妹纸是路人</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="lovemefan.win/"/>
  <updated>2017-09-23T07:07:48.000Z</updated>
  <id>lovemefan.win/</id>
  
  <author>
    <name>lovemefan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python学习笔记 (四)  安装scrapy框架</title>
    <link href="lovemefan.win/2017/09/23/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/scrapy%E6%A1%86%E6%9E%B6/"/>
    <id>lovemefan.win/2017/09/23/Python学习笔记/scrapy框架/</id>
    <published>2017-09-23T06:40:00.000Z</published>
    <updated>2017-09-23T07:07:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (四)  安装scrapy框架：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>安装scrapy框架<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="scrapy框架"><a href="#scrapy框架" class="headerlink" title="scrapy框架"></a>scrapy框架</h2><blockquote><p>Scrapy，Python开发的一个快速、高层次的屏幕抓取和web抓取框架，用于抓取web站点并从页面中提取结构化的数据。Scrapy用途广泛，可以用于数据挖掘、监测和自动化测试。<br>Scrapy吸引人的地方在于它是一个框架，任何人都可以根据需求方便的修改。它也提供了多种类型爬虫的基类，如BaseSpider、sitemap爬虫等，最新版本又提供了web2.0爬虫的支持。 –百度百科</p></blockquote><h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><ul><li>pip install whell</li><li>pip install lxml</li><li>pipi nstall twisted</li><li>pip install scrapy</li></ul><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><p>在控制台下输入:</p><ul><li>创建项目: scrapy startproject 项目名      </li><li>创建爬虫: scrapy genspider -t basic 爬虫名 目标URL</li></ul><p><strong>项目目录如下:</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170923/a4l4a8H3eJ.png?imageslim" alt="mark"></p><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><p>  在控制台下输入: scrapy crawl  爬虫名</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (四)  安装scrapy框架：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;安装scrapy框架&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Android学习笔记 (一)   按钮事件处理的五种方法</title>
    <link href="lovemefan.win/2017/09/12/Android/Android%20%E6%8C%89%E9%92%AE%E4%BA%8B%E4%BB%B6%E7%9A%84%E4%BA%94%E7%A7%8D%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>lovemefan.win/2017/09/12/Android/Android 按钮事件的五种处理方法/</id>
    <published>2017-09-12T05:58:00.000Z</published>
    <updated>2017-09-12T07:50:43.134Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Android学习笔记 (一)   按钮事件处理的五种方法：</strong> <excerpt in="" index="" |="" 首页摘要=""><br> 收集了五种处理按钮事件处理的方法<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Android-按钮事件的五种处理方法"><a href="#Android-按钮事件的五种处理方法" class="headerlink" title="Android 按钮事件的五种处理方法"></a>Android 按钮事件的五种处理方法</h1><p>这里用一个小例子来说明:<br>首先在新建的工程的activity_main.xml中添加一个Button和一个TextView.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.lovemefan.myapplication3.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/tv1"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></div><div class="line">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></div><div class="line">        <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></div><div class="line">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></div><div class="line">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/bt1"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"click"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="1-使用匿名内部类"><a href="#1-使用匿名内部类" class="headerlink" title="1.使用匿名内部类"></a><code>1.使用匿名内部类</code></h2><p>接下来在MainActivity.java文件中如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">       bt.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">                TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">                tv.setText(<span class="string">"hello android"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;);<span class="comment">//内部匿名类实现按键处理</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="2-使用自定义单击事件监听类"><a href="#2-使用自定义单击事件监听类" class="headerlink" title="2.使用自定义单击事件监听类"></a><code>2.使用自定义单击事件监听类</code></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">        bt.setOnClickListener(<span class="keyword">new</span> myButtonClick());<span class="comment">//自定义事件监听类实现按钮事件处理</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myButtonClick</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</div><div class="line"></div><div class="line">       <span class="meta">@Override</span></div><div class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">           TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">           tv.setText(<span class="string">"hello android"</span>);</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="3-使用lambda语法实现按钮处理"><a href="#3-使用lambda语法实现按钮处理" class="headerlink" title="3.使用lambda语法实现按钮处理"></a><code>3.使用lambda语法实现按钮处理</code></h2><p>首先确保环境支持<code>lambda</code>语法,即JDK在1.8及以上.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">        bt.setOnClickListener((view)-&gt;&#123;</div><div class="line">            TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">            tv.setText(<span class="string">"hello android"</span>);</div><div class="line">        &#125;);<span class="comment">//lambda语法实现按钮处理事件</span></div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>如果在Android Studio 下报错:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Error:Jack is required to support java 8 language features. Either enable Jack or remove sourceCompatibility JavaVersion.VERSION_1_8.</div></pre></td></tr></table></figure></p><p>请在<code>build.gradle(Module:app)</code>文件加入以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># 在 build.gradle 文件中加入如下代码</div><div class="line">defaultConfig &#123;</div><div class="line">    ...</div><div class="line">    jackOptions &#123;</div><div class="line">        enabled true</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">compileOptions &#123;</div><div class="line">    sourceCompatibility org.gradle.api.JavaVersion.VERSION_1_8</div><div class="line">    targetCompatibility org.gradle.api.JavaVersion.VERSION_1_8</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="4-Activity继承View-OnClickListener"><a href="#4-Activity继承View-OnClickListener" class="headerlink" title="4.Activity继承View.OnClickListener"></a><code>4.Activity继承View.OnClickListener</code></h2><p>由Activity实现OnClick(View view)方法，在OnClick(View view)方法中用switch-case对不同id代表的button进行相应的处理：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">        bt.setOnClickListener((view)-&gt;&#123;</div><div class="line">            TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">            tv.setText(<span class="string">"hello android"</span>);</div><div class="line">        &#125;);<span class="comment">//lambda语法实现按钮处理事件</span></div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;  </div><div class="line">  </div><div class="line">        <span class="keyword">switch</span> (view.getId())&#123;  </div><div class="line">            <span class="keyword">case</span> R.id.bt:  </div><div class="line">                TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">            tv.setText(<span class="string">"hello android"</span>);  </div><div class="line">            <span class="keyword">break</span>;  </div><div class="line">            <span class="keyword">default</span>:  </div><div class="line">            <span class="keyword">break</span>;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>这个方法适合多个按钮</p><h2 id="5-在XML文件指定按钮的onClick属性"><a href="#5-在XML文件指定按钮的onClick属性" class="headerlink" title="5.在XML文件指定按钮的onClick属性"></a><code>5.在XML文件指定按钮的onClick属性</code></h2><p>在XML文件中显示指定按钮的onClick属性，这样点击按钮时会利用反射的方式调用对应Activity中的click()方法：<br>在我之前学习的Windows 10 <code>UWP</code> 的app开发中都是用的这种方法.<br>UWP也是类似的在相应的XAML代码中设置click属性即可,并且Visual Studio会自动为其添加相应方法.<strong>\(▔＾▔)/ 微软大法好</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:onClick</span>=<span class="string">"sayHelloAndroid"</span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/bt1"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"click"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</div></pre></td></tr></table></figure></p><p>笔者经过百度了后,发现Android Studio 有快捷键来生成click相应的方法:点击onclick的属性值,然后按Alt+Enter<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170912/5jeDm9Klik.png?imageslim" alt="生成方法"><br>然后就生成了相应方法,这样可以避免手动写方法时不小心拼错单词了.<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170912/547A3AcCIg.png?imageslim" alt="mark"></p><p>我个人比较喜欢用第五种方法.界面与后台代码可以完全分开,代码量也少.不过反射最大的缺点就是影响性能和效率.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Android学习笔记 (一)   按钮事件处理的五种方法：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt; 收集了五种处理按钮事件处理的方法&lt;br&gt;
    
    </summary>
    
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Android" scheme="lovemefan.win/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>查四六级准考证号的一种方法</title>
    <link href="lovemefan.win/2017/08/29/%E5%85%B6%E4%BB%96/%E5%9B%9B%E5%85%AD%E7%BA%A7%E6%9F%A5%E8%AF%A2%E5%87%86%E8%80%83%E8%AF%81%E6%96%B9%E6%B3%95/"/>
    <id>lovemefan.win/2017/08/29/其他/四六级查询准考证方法/</id>
    <published>2017-08-29T13:23:00.000Z</published>
    <updated>2017-08-29T13:35:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 查四六级准考证号的一种方法：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>利用某软件返回值,js代码查询准考证号<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="四六级查询准考证方法"><a href="#四六级查询准考证方法" class="headerlink" title="四六级查询准考证方法"></a>四六级查询准考证方法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>身边有好多小伙伴们有忘记四六级准考证号而且还找不回准考证的情况.<br>因为以前的九九宿舍不能用了,并且网上很少提供这种查询的网站(可能是我孤陋寡闻没听过)<br>所以这里分享一个贴吧大神公布的方法(该贴已被删).实际上是利用某一个软件的bug,也不知道什么时候会被封.</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>某一软件的一个查询口语的入口,即使没有报口语,在其内部的返回值中会包含准考证号的信息,利用这点获得准考证号</p><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><p>最好用<code>谷歌的chrome浏览器</code>,我试过edge和UC都没用.其他没测试过.<br>必要条件:</p><ul><li>身份证号</li><li>姓名</li></ul><p>下面以chrome为例:</p><ol><li>打开chrom,转到下面网址<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://app.cet.edu.cn:7066/baas/app/setuser.do?method=UserVerify</div></pre></td></tr></table></figure></li></ol><p>这时候会出现一堆错误,没关系,继续下一步<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/lFCj5E5CF5.png?imageslim" alt="chromerror"><br>2.按下F12打开开发者工具,点击Console切换到控制台<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/i6Gc65eAbg.png?imageslim" alt="控制台"><br>3.在下面空白光标出输入以下代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">d, s</span>)</span>&#123; d.body.appendChild(s = d.createElement(<span class="string">'script'</span>)).src = <span class="string">'http://code.jquery.com/jquery-1.9.1.min.js'</span>&#125;)(<span class="built_in">document</span>);</div></pre></td></tr></table></figure></p><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/JBGHkmkkm0.png?imageslim" alt="mark"><br>如果出现<code>Uncaught SyntaxError: Unexpected end of input</code>字样,应该是代码不完整或部分拼写错误.重新复制一遍就好了<br>4.接下来输入另一段代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> url = <span class="string">"http://app.cet.edu.cn:7066/baas/app/setuser.do?method=UserVerify"</span>;</div><div class="line"><span class="keyword">var</span> ks_data = &#123;</div><div class="line"><span class="string">"ks_xm"</span>: <span class="string">"姓名"</span>,</div><div class="line"><span class="string">"ks_sfz"</span>: <span class="string">"身份证号"</span>,</div><div class="line"><span class="string">"jb"</span>: <span class="string">"四级填1,六级填2"</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> postdata = &#123;</div><div class="line"><span class="string">"action"</span>: <span class="string">""</span>,</div><div class="line"><span class="string">"params"</span>: <span class="built_in">JSON</span>.stringify(ks_data)</div><div class="line">&#125;;</div><div class="line">$.post(url = url, data = postdata, callback = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">data = $.parseJSON(data)</div><div class="line"><span class="built_in">console</span>.log(data[<span class="string">"ks_bh"</span>])</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p>将上述代码的姓名,身份证等参数替换掉,回车确定<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/Icg2EBD67j.png?imageslim" alt="返回准考证号"><br>如果出现其他错误,可能你的<code>信息输入有误</code>,请核对再输一遍.如果还有错则该考生不存在(没报考).<br>这个只能查最近一次的准考证.<br>好了,大功告成<br>点击下面:<br><a href="http://cet.neea.edu.cn/cet/" target="_blank" rel="external">四级查询路口 http://cet.neea.edu.cn/cet/</a><br> 然后就可以查分数了.<br> 溜了溜了…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 查四六级准考证号的一种方法：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;利用某软件返回值,js代码查询准考证号&lt;br&gt;
    
    </summary>
    
    
      <category term="其他" scheme="lovemefan.win/tags/%E5%85%B6%E4%BB%96/"/>
    
      <category term="JavaScript" scheme="lovemefan.win/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (三)  简单爬虫实战</title>
    <link href="lovemefan.win/2017/08/19/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Python%20%E5%AE%9E%E6%88%98/"/>
    <id>lovemefan.win/2017/08/19/Python学习笔记/Python 实战/</id>
    <published>2017-08-19T14:00:00.000Z</published>
    <updated>2017-08-20T14:00:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (三)  简单爬虫实战：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>Python实战 抓取网页<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Python-实战"><a href="#Python-实战" class="headerlink" title="Python 实战"></a>Python 实战</h1><h2 id="简单的静态文本抓取"><a href="#简单的静态文本抓取" class="headerlink" title="简单的静态文本抓取"></a>简单的静态文本抓取</h2><h3 id="request库命令安装"><a href="#request库命令安装" class="headerlink" title="request库命令安装"></a>request库命令安装</h3><p>windows下进入cmd ，定位到你Python的安装路径，我的是D:\Program Files\Python27\Scripts。因为以后常用，不妨加到环境变量中，以后就不用在定位到安装路径，直接调用。<br>然后在cmd、PowerShell、XShell中输入以下命令</p><ul><li>Windows :  pip install request</li><li>Linux :  sudo pip install request</li><li>Mac OS :  sudo pip install request  <h3 id="抓取目标："><a href="#抓取目标：" class="headerlink" title="抓取目标："></a>抓取目标：</h3></li><li><a href="http://my.0ff0.net/" target="_blank" rel="external">http://my.0ff0.net/</a></li><li><a href="https://get.freevpnss.me/#vpn" target="_blank" rel="external">https://get.freevpnss.me/#vpn</a></li></ul><p>以上是两个免费的VPN网站，目标是将网站中的VPN服务器IP、用户名、密码、IPSec密钥等相关信息抓取下来以便使用。本次程序需要用到request库，如果没有安装</p><h3 id="网站分析"><a href="#网站分析" class="headerlink" title="网站分析"></a>网站分析</h3><h4 id="第一个网站"><a href="#第一个网站" class="headerlink" title="第一个网站"></a>第一个网站</h4><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170726/i9GiJIBJcd.png?imageslim" alt="http://my.0ff0.net"><br>查看其源码如下：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170726/fj8DBkdhgD.png?imageslim" alt="my.0ff0.nety源码"><br>第一个网站结构和源码都比较简单，直接使用Python的正则表达式匹配其字符就行<br>直接上源代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line">html = requests.get(<span class="string">"http://my.0ff0.net/"</span>)</div><div class="line"><span class="comment"># html.encoding = 'utf-8'</span></div><div class="line">content = re.findall(<span class="string">'&lt;div class="content"&gt;(.*?)&lt;/div&gt;'</span>,html.text,re.S)[<span class="number">0</span>]</div><div class="line">serverip =re.findall(<span class="string">'&lt;span id="ip"&gt;(.*?)&lt;/span&gt;'</span>,content,re.S)</div><div class="line">user =re.findall(<span class="string">'&lt;span id="user"&gt;(.*?)&lt;/span&gt;'</span>,content,re.S)</div><div class="line">password =re.findall(<span class="string">'&lt;span id="pw"&gt;(.*?)\n&lt;/span&gt;'</span>,content,re.S)</div><div class="line">secret =re.findall(<span class="string">'&lt;span id="secret"&gt;(.*?)&lt;/span&gt;'</span>,content,re.S)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># print html.text</span></div><div class="line"><span class="keyword">print</span> <span class="string">"服务器地址: %s "</span>%str(serverip[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"用户名: %s"</span>%str(user[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"密码: %s"</span>%str(password[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"IPSec密钥: %s"</span>%str(secret[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"连接方式：PPTP和Cisco IPSec(IKEv1)"</span></div></pre></td></tr></table></figure></p><p>运行结果：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170726/maJClL2Ha4.png?imageslim" alt="运行结果"></p><h4 id="第二个网站"><a href="#第二个网站" class="headerlink" title="第二个网站"></a>第二个网站</h4><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170820/hkebHGd2L7.png?imageslim" alt="freeVPN"><br><strong>F12查看源码,同样用正则表达式吧需要的字符匹配出来.</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170820/L0g8L9L5C5.png?imageslim" alt="mark"></p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">from</span> encodings <span class="keyword">import</span> gb18030</div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line">html = requests.get(<span class="string">"http://jn9.org/indexcn.html"</span>)</div><div class="line">html.encoding = <span class="string">'utf-8'</span></div><div class="line"></div><div class="line">target = re.findall(<span class="string">'&lt;div class="panel-heading"&gt;(.*?)&lt;span class="label label-success"&gt;Active&lt;/span&gt;&lt;/p&gt;.*?&lt;/div&gt;.*?&lt;/div&gt;.*?&lt;/div&gt;&lt;!-- /.col-sm-4 --&gt;'</span>,html.text,re.S)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(target.__len__()):</div><div class="line">    adress = re.findall(<span class="string">'&lt;h2 class="panel-title"&gt;(.*?)&lt;/h2&gt;'</span>,target[i],re.S)</div><div class="line">    contend = re.findall(<span class="string">'&lt;p&gt;(.*?)&lt;/p&gt;'</span>,target[i],re.S)</div><div class="line">    <span class="keyword">if</span> adress:</div><div class="line">        <span class="keyword">print</span> <span class="string">"地区:"</span>,adress[<span class="number">0</span>]</div><div class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> contend:</div><div class="line">        result = re.sub(<span class="string">'&lt;span class="hidden"&gt;(.*?)&lt;/span&gt;'</span>, <span class="string">''</span>,each)</div><div class="line">        <span class="keyword">print</span> result</div><div class="line">    <span class="keyword">print</span> <span class="string">"\n\n"</span></div></pre></td></tr></table></figure><p>运行结果如下:<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170820/49jGcfChGJ.png?imageslim" alt="效果图"><br><code>好了,翻个墙出去玩耍了.</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (三)  简单爬虫实战：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;Python实战 抓取网页&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>数学建模论文格式分析</title>
    <link href="lovemefan.win/2017/08/10/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AE%BA%E6%96%87%E6%A0%BC%E5%BC%8F%E5%88%86%E6%9E%90%E9%89%B4%E8%B5%8F/"/>
    <id>lovemefan.win/2017/08/10/数学建模/论文格式分析鉴赏/</id>
    <published>2017-08-10T00:00:00.000Z</published>
    <updated>2017-08-10T03:24:35.190Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 数学建模论文格式分析：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>关于数学建模论文格式分析 教会你怎么写相关论文<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="论文格式分析鉴赏"><a href="#论文格式分析鉴赏" class="headerlink" title="论文格式分析鉴赏"></a>论文格式分析鉴赏</h1><h2 id="论文格式"><a href="#论文格式" class="headerlink" title="论文格式"></a>论文格式</h2><p>根据分析论文中的格式，可以总结出以下格式：</p><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>摘要的特点首先在于’短”，要简短扼要，高度浓缩，目的是节省老师的时间、提高效率。老师阅读        摘要后，就能够确切地了解论文的主要内容和结果，决定是否需要阅读全文。摘要最好能引人入胜，使之产生看完全文的兴趣。尽量简述对问题的解决思路，最好先一句话用什么方法解决了什么类型的问题。</p><ul><li>模型的数学归类（在数学上属于什么类型）</li><li>建模的思想（思路）</li><li>算法思想（求解思路）</li><li>建模特点（模型优点，建模思想或方法，算法特点，结果检验，灵敏度 分析，模型检验）</li><li>主要结果（数值结果，结论）（回答题目所问的全部“问题”） <h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3>根据题目给出的已知条件，结合自己的理解，分析问题的解决方法，引出解题的思路．一个一个问题有条理得分析问题．最后一段总结．</li></ul><h3 id="模型假设"><a href="#模型假设" class="headerlink" title="模型假设"></a>模型假设</h3><p>首先基本假设的合理性很重要。</p><ul><li>根据题目中条件和要求作出假设 </li><li>关键性假设不能缺，假设要切合题意 </li></ul><h3 id="符号说明"><a href="#符号说明" class="headerlink" title="符号说明"></a>符号说明</h3><p>根据范文分析，就是将本文将会出现的数学符号通过表格清晰明了得进行说明。<br>如下图<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170810/EfCjfI7k8d.png?imageslim" alt="符号说明"></p><h3 id="模型建立与求解"><a href="#模型建立与求解" class="headerlink" title="模型建立与求解"></a>模型建立与求解</h3><h4 id="基本模型："><a href="#基本模型：" class="headerlink" title="基本模型："></a>基本模型：</h4><ul><li>首先要有数学模型：数学公式、方案等 </li><li>基本模型，要求 完整，正确，简明<h4 id="简化模型"><a href="#简化模型" class="headerlink" title="简化模型:"></a>简化模型:</h4><ul><li>要明确说明：简化思想，依据 </li></ul></li><li>简化后模型，尽可能完整给出<br>模型要实用，有效，以解决问题有效为原则。 数学建模面临的、要解决的是实际问题，不追求数学上。高（级）、深（刻）、 难（度大）。<h4 id="模型要求："><a href="#模型要求：" class="headerlink" title="模型要求："></a>模型要求：</h4></li><li>能用初等方法解决的、就不用高级方法;</li><li>能用简单方法解决的，就不用复杂方法; </li><li>能用被更多人看懂、理解的方法;</li><li>就不用只能少数人看懂、理解的方法</li><li>鼓励创新，但要切实，不要离题搞标新立异数模创新可出现在 </li><li>建模中，模型本身，简化的好方法、好策略等， <h4 id="模型求解中"><a href="#模型求解中" class="headerlink" title="模型求解中"></a>模型求解中</h4></li><li>结果表示、分析、检验，模型检验 </li><li>推广部分 <h4 id="在问题分析推导过程中，需要注意的问题："><a href="#在问题分析推导过程中，需要注意的问题：" class="headerlink" title="在问题分析推导过程中，需要注意的问题："></a>在问题分析推导过程中，需要注意的问题：</h4></li><li>分析：中肯、确切 </li><li>术语：专业、内行；；  </li><li>原理、依据：正确、明确, </li><li>表述：简明，关键步骤要列出 </li><li>忌：外行话，专业术语不明确，表述混乱，冗长。</li></ul><h3 id="模型评价和推广"><a href="#模型评价和推广" class="headerlink" title="模型评价和推广"></a>模型评价和推广</h3><h4 id="模型评价"><a href="#模型评价" class="headerlink" title="模型评价:"></a>模型评价:</h4><ul><li>优点突出（预测问题关注精度，优化问题关注性能，分类问题关注准确性，等等，根据实际问题写模型优点，一定要写到点上）</li><li>缺点不回避，但是缺点要挑无关痛痒的讲，可以将假设中的不足或局限性作为缺点。<br>模型推广:</li><li>适用的场景、人群、范围等等（不可硬套，根据实际题目实际情况来写） </li><li>推广或改进方向时，不要玩弄新数学术语（让人看得懂，复杂也要简单化，切莫把简单的描述的过于复杂）</li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p>按要求的格式写<br>尽量引用好的文献、书籍、资料等等</p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>程序代码（基本上是代码）</li><li>详细的结果，详细的数据表格，可在此列出，但不要错，错的宁可不列。</li><li>主要结果数据应在正文中列出，不怕重复。 </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 数学建模论文格式分析：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;关于数学建模论文格式分析 教会你怎么写相关论文&lt;br&gt;
    
    </summary>
    
    
      <category term="数学建模" scheme="lovemefan.win/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
      <category term="论文" scheme="lovemefan.win/tags/%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (二)  第三方库安装</title>
    <link href="lovemefan.win/2017/07/22/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E5%AE%89%E8%A3%85/"/>
    <id>lovemefan.win/2017/07/22/Python学习笔记/第三方库安装/</id>
    <published>2017-07-22T13:00:00.000Z</published>
    <updated>2017-07-22T15:10:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (二)  第三方库安装：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>Python的第三方库的安装<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="第三方库安装"><a href="#第三方库安装" class="headerlink" title="第三方库安装"></a>第三方库安装</h2><h3 id="命令安装"><a href="#命令安装" class="headerlink" title="命令安装"></a>命令安装</h3><p>windows下进入cmd ，定位到你Python的安装路径，我的是D:\Program Files\Python27\Scripts。因为以后常用，不妨加到环境变量中，以后就不用在定位到安装路径，直接调用。<br>然后在cmd、PowerShell、XShell中输入以下命令</p><ul><li>Windows :  pip install xxx</li><li>Linux :  sudo pip install xxx</li><li>Mac OS :  sudo pip install xxx   </li></ul><p><code>少用easy_install 因为只能安装不能卸载</code></p><h3 id="自定义安装"><a href="#自定义安装" class="headerlink" title="自定义安装"></a>自定义安装</h3><p> 当出现问题或者不想用命令安装时  请戳&gt;&gt;<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="external">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a><br> 这个网站有Python所有的第三方库文件。将下载好的文件原后缀.whl改为.zip,并解压到python安装目录的Lib文件夹下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (二)  第三方库安装：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;Python的第三方库的安装&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (一)  初识Python</title>
    <link href="lovemefan.win/2017/07/22/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%88%9D%E8%AF%86Python/"/>
    <id>lovemefan.win/2017/07/22/Python学习笔记/初识Python/</id>
    <published>2017-07-22T12:00:00.000Z</published>
    <updated>2017-07-22T14:12:04.459Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (一)  初识Python：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>认识Python及搭建开发环境<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="初识Python"><a href="#初识Python" class="headerlink" title="初识Python"></a>初识Python</h1><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><blockquote><p>Python[1]  （英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。<br>Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议[2]  。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。<br>Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中[3]  有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。–百度百科</p></blockquote><p><strong><em>个人认为Python是一款非常适合初学者的语言，同时有面向过程和对象的特性，语法简单非常接近自然语言，功能强大</em></strong></p><h2 id="发展历程"><a href="#发展历程" class="headerlink" title="发展历程"></a>发展历程</h2><blockquote><p>自从20世纪90年代初Python语言诞生至今，它已被逐渐广泛应用于系统管理任务的处理和Web编程。<br>Python的创始人为Guido van Rossum。1989年圣诞节期间，在阿姆斯特丹，Guido为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，做为ABC 语言的一种继承。之所以选中Python（大蟒蛇的意思）作为该编程语言的名字，是因为他是一个叫Monty Python的喜剧团体的爱好者。<br>ABC是由Guido参加设计的一种教学语言。就Guido本人看来，ABC 这种语言非常优美和强大，是专门为非专业程序员设计的。但是ABC语言并没有成功，究其原因，Guido 认为是其非开放造成的。Guido 决心在Python 中避免这一错误。同时，他还想实现在ABC 中闪现过但未曾实现的东西。<br>就这样，Python在Guido手中诞生了。可以说，Python是从ABC发展起来，主要受到了Modula-3（另一种相当优美且强大的语言，为小型团体所设计的）的影响。并且结合了Unix shell和C的习惯。<br>Python[4]  已经成为最受欢迎的程序设计语言之一。2011年1月，它被TIOBE编程语言排行榜评为2010年度语言。自从2004年以后，python的使用率呈线性增长[5]  。<br>由于Python语言的简洁性、易读性以及可扩展性，在国外用Python做科学计算的研究机构日益增多，一些知名大学已经采用Python来教授程序设计课程。例如卡耐基梅隆大学的编程基础、麻省理工学院的计算机科学及编程导论就使用Python语言讲授。众多开源的科学计算软件包都提供了Python的调用接口，例如著名的计算机视觉库OpenCV、三维可视化库VTK、医学图像处理库ITK。而Python专用的科学计算扩展库就更多了，例如如下3个十分经典的科学计算扩展库：NumPy、SciPy和matplotlib，它们分别为Python提供了快速数组处理、数值运算以及绘图功能。因此Python语言及其众多的扩展库所构成的开发环境十分适合工程技术、科研人员处理实验数据、制作图表，甚至开发科学计算应用程序。<br>说起科学计算，首先会被提到的可能是MATLAB。然而除了MATLAB的一些专业性很强的工具箱还无法替代之外，MATLAB的大部分常用功能都可以在Python世界中找到相应的扩展库。和MATLAB相比，用Python做科学计算有如下优点：<br>● 首先，MATLAB是一款商用软件，并且价格不菲。而Python完全免费，众多开源的科学计算库都提供了Python的调用接口。用户可以在任何计算机上免费安装Python及其绝大多数扩展库。<br>● 其次，与MATLAB相比，Python是一门更易学、更严谨的程序设计语言。它能让用户编写出更易读、易维护的代码。<br>● 最后，MATLAB主要专注于工程和科学计算。然而即使在计算领域，也经常会遇到文件管理、界面设计、网络通信等各种需求。而Python有着丰富的扩展库，可以轻易完成各种高级任务，开发者可以用Python实现完整应用程序所需的各种功能。</p></blockquote><h2 id="风格"><a href="#风格" class="headerlink" title="风格"></a>风格</h2><blockquote><p>Python在设计上坚持了清晰划一的风格，这使得Python成为一门易读、易维护，并且被大量用户所欢迎的、用途广泛的语言。<br>设计者开发时总的指导思想是，对于一个特定的问题，只要有一种最好的方法来解决就好了。这在由Tim Peters写的Python格言（称为The Zen of Python）里面表述为：There should be one– and preferably only one –obvious way to do it. 这正好和Perl语言（另一种功能类似的高级动态语言）的中心思想TMTOWTDI（There’s More Than One Way To Do It）完全相反。<br>Python的作者有意的设计限制性很强的语法，使得不好的编程习惯（例如if语句的下一行不向右缩进）都不能通过编译。其中很重要的一项就是Python的缩进规则。<br>一个和其他大多数语言（如C）的区别就是，一个模块的界限，完全是由每行的首字符在这一行的位置来决定的（而C语言是用一对花括号{}来明确的定出模块的边界的，与字符的位置毫无关系）。这一点曾经引起过争议。因为自从C这类的语言诞生后，语言的语法含义与字符的排列方式分离开来，曾经被认为是一种程序语言的进步。不过不可否认的是，通过强制程序员们缩进（包括if，for和函数定义等所有需要使用模块的地方），Python确实使得程序更加清晰和美观。</p><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><h2 id="下载Python"><a href="#下载Python" class="headerlink" title="下载Python"></a>下载Python</h2><p>官网下载<a href="https://www.python.org/" target="_blank" rel="external">Python</a>,建议下载Python 2.X 版的。目前网上大部分教程为2.X版。3.X版改进很大。这里是一些关于2和3版本的区别和指导，请自己斟酌<br><a href="http://www.cnblogs.com/codingmylife/archive/2010/06/06/1752807.html" target="_blank" rel="external">Python3.x和Python2.x的区别</a><br><a href="https://www.zhihu.com/question/24549965" target="_blank" rel="external">应该学习最新版本的 Python 3 还是旧版本的 Python 2？</a><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170722/l6aFIFLfC3.png?imageslim" alt="mark"></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>我的电脑右键属性-高级系统变量-环境变量-向Path 添加Python的安装路径<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170722/Ebeb0LC1iE.png?imageslim" alt="mark"></p><h2 id="下载IDE"><a href="#下载IDE" class="headerlink" title="下载IDE"></a>下载IDE</h2><p>点击这里有推荐  <a href="http://www.oschina.net/news/57468/best-python-ide-for-developers" target="_blank" rel="external">提供给开发者 10 款最好的 Python IDE</a><br>另外VIsual Studio 也可以。我自己使用破解版的<code>JetBrains PyCharm</code><a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="external">下载</a> 。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170722/b4mFhHgAFj.png?imageslim" alt="PyCharm"><br>然后就愉快的玩耍了</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (一)  初识Python：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;认识Python及搭建开发环境&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>UWP学习笔记 (三)   XAML界面原理和语法</title>
    <link href="lovemefan.win/2017/07/10/UWP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BB%80%E4%B9%88%E6%98%AFXAML/"/>
    <id>lovemefan.win/2017/07/10/UWP学习笔记/什么是XAML/</id>
    <published>2017-07-10T14:00:00.000Z</published>
    <updated>2017-07-15T02:51:16.806Z</updated>
    
    <content type="html"><![CDATA[<p><strong> UWP学习笔记 (三)   XAML界面原理和语法：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>学习XAML在UWP 中的原理及语法<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="什么是XAML"><a href="#什么是XAML" class="headerlink" title="什么是XAML"></a>什么是XAML</h2><blockquote><p>XAML是EXtensible Application Markup Language的英文缩写，相应的中文名称为可扩展应用程序标记语言，它是微软公司为构建应用程序用户界面而创建的一种新的描述性语言。XAML提供了一种便于扩展和定位的语法来定义和程序逻辑分离的用户界面，而这种实现方式和ASP.NET中的”代码后置”模型非常类似。XAML是一种解析性的语言，尽管它也可以被编译。它的优点是简化编程式上的用户创建过程，应用时要添加代码和配置等。 –百度百科</p></blockquote><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>&#160;&#160;&#160;&#160;XAML简化了.Net Framework 3.0编程模式上的用户界面创建过程，使用XAML开发人员可以对WPF程序的所有用户界面元素(例如文本、按钮、图像和列表框等)进行详细的定置，同时还可以对整个界面进行合理化的布局，这与使用HTML非常相似。但是由于XAML是基于XML的，所以它本身就是一个组织良好的XML文档，而且相对于HTML，它的语法更严谨、更明确。预计以后大部分的XAML都可由相应的软件自动生成，就如同我们现在制作一个静态页面时，几乎不用编写任何HTML代码就可以直接通过Dreamweaver软件生成一个美观的页面。但是最初通过手动编写XAML代码将是一次绝佳的学习体验，虽然实现的过程繁杂了些，但是将加深您对XAML语法和各个元素的理解。<br>大多数的WPF程序可能同时包含程序代码和 XAML。我们可以使用XAML定义应用程序的初始界面，而后才编写相应的功能实现代码。我们可以将逻辑代码直接嵌入到一个XAML文件中，也可以将它保留在一个单独的文件中。实际上，能够用XAML实现的所有功能我们都可以使用程序代码来完成。因此，我们根本无需使用任何的XAML就可以创建一个完好的WPF程序。一般来说，程序代码的优势在于流程处理和逻辑判断，而不是界面的构建上。而XAML则是集中关注于界面的编程，我们可以将它和其它的.NET语言配合使用，从而构建出一个功能完善、界面美观的WPF程序。XAML是一种纯正的、用来描述用户界面构成元件和编排方式的标记语言。尽管有部分的XAML语法具备程序设计语言的特性(例如XAML中的Trigger和TRansform)，但是XAML并不是一种用于程序设计的语言，它的功能也不是为了执行应用程序逻辑。<br>&#160;&#160;&#160;&#160;微软推荐XAML被编译成BAML(Binary Application Markup Language-二进制语言程序标记语言)。XAML和BAML都可以被WPF解析，并且将以一种和HTML相似的方式进行界面的呈现。但是和HTML不同的是，XAML是强类型化的。也就是说，HTML会忽略那些它不能识别的元素和属性，而XAML必须在识别所有的元素和属性的情况下，才对页面进行呈现。尽管在XAML中各个属性都是以一个个的字符串(例如Background)表示的，但是这些字符串实际上代表的是WPF中的对象，只有被WPF识别的对象才可以作为元素的属性，所以我们说XAML是强类型化的。</p><h3 id="新功能"><a href="#新功能" class="headerlink" title="新功能"></a>新功能</h3><p>微软Build 2013发布了一些已经被添加到Windows 8.1中的XAML新功能。[1]  </p><ul><li>Hub控件</li><li>命令栏</li><li>弹出（Flyout）控件</li><li>日期/时间选择控件</li><li>取消StandardStyles.xaml<h3 id="与HTML的区别"><a href="#与HTML的区别" class="headerlink" title="与HTML的区别"></a>与HTML的区别</h3>&#160;&#160;&#160;&#160;还有一点是我们反复强调的，XAML并不是HTML。尽管XAML在元素的声明、程序样式的设置和指定事件处理程序上都和HTML非常类似，但是XAML是基于XML的，它是WPF的外在表现形式。而HTML只是一种标记语言，仅仅是用来为浏览器呈现页面内容。XAML除了用来呈现信息和请求用户输入等基本的功能外，它还包含了一些高级的特性，例如它提供了对动画和3D众多方面的支持。<br>XAML是可扩展的，正如它的名字指明的那样。开发人员可以创建自定义的控件、元素和函数来扩展XAML。而且由于XAML各元素在本质上就是WPF类的映射，所以开发人员可以很轻松地使用面向对象的技术对XAML元素进行扩展。也就是说我们可以开发一些自定义控件和组合元素，并将它公开给用户界面设计人员和其它的开发人员使用。</li></ul><h2 id="XAML代码在UWP中的角色"><a href="#XAML代码在UWP中的角色" class="headerlink" title="XAML代码在UWP中的角色"></a>XAML代码在UWP中的角色</h2><ul><li>Page是UWP的用户界面主体。传统桌面程序是由一个个窗口组成的，而UWP是由一个Page（页面）组成的</li><li>Page是一个partial类</li><li>我们的任务是扩展Page这个类<ul><li>微软预制的Page为一个空的界面，没有内容</li><li>我们只能扩展它</li></ul></li><li>XAML代码是界面部分，用来实例化.NET对象的标记语言。它可以非常简单的创建对象。<br>如下图，这段XAML代码创建了一个Button 对象<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170711/L1H43BAcC0.jpg?imageslim" alt="XAML代码"><br>同样的用C#实现会怎么样呢？<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170711/Cabge4dJHj.jpg?imageslim" alt="C#代码"><br>&#160;&#160;&#160;&#160;&#160;XAML中的Margin是直接等于一个字符串，而C#中是需要给Margin赋值一个Thickness对象的。这归功于XAML的类型转换器。XAML在编译的时候，XAML语法分析器将字符串转换为对应的对象或枚举值，这样的话，我们可以直接用一个非常简单的值来代替冗长的类型名和枚举值来提高效率。<h2 id="XAML语法"><a href="#XAML语法" class="headerlink" title="XAML语法"></a>XAML语法</h2><h3 id="Content-Property-（内容属性）"><a href="#Content-Property-（内容属性）" class="headerlink" title="Content Property （内容属性）"></a>Content Property （内容属性）</h3>每个标签都有自己的默认的内容属性。比如<code>&lt;Grid/&gt;</code>的默认属性是<code>&lt;Grid.Children&gt;&lt;Grid.Children/&gt;</code>,<code>&lt;Button&gt;</code>的默认属性是<code>&lt;Button.Content&gt;</code>.通常内容属性可省略。<h3 id="self-closing"><a href="#self-closing" class="headerlink" title="self-closing"></a>self-closing</h3>XAML标签与其他标签类似有两种开闭形式</li><li><code>&lt;xxx&gt;&lt;xxx/&gt;</code></li><li><code>&lt;xxx/&gt;</code><h3 id="Attribute-与简单的property"><a href="#Attribute-与简单的property" class="headerlink" title="Attribute 与简单的property"></a>Attribute 与简单的property</h3>可以直接在标签内定义该控件的一些简单属性，比如<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Name</span>=<span class="string">"button"</span> <span class="attr">Height</span>=<span class="string">"200"</span> <span class="attr">Width</span>=<span class="string">"200"</span>/&gt;</span></div></pre></td></tr></table></figure></li></ul><h3 id="复杂的property与property标签"><a href="#复杂的property与property标签" class="headerlink" title="复杂的property与property标签"></a>复杂的property与property标签</h3><p>标签里的属性对象很复杂的时候，编译器无法将字符转化成对象是，就需要使用属性标签。<br>比如说，当我要设置背景颜色时，如果时简单的颜色可以直接这样<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Background</span>=<span class="string">"red"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></p><p>当然，我们肯定不能满足这种单一色调的背景，我想要一个渐变的漂亮的背景怎么做呢？<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">Grid.Background</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!--LinearGradientBrush为线性笔刷--&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">LinearGradientBrush</span> <span class="attr">EndPoint</span>=<span class="string">"0.5,1"</span> <span class="attr">StartPoint</span>=<span class="string">"0.5,0"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--从#FFAC6CC开始 偏移量为0，#FF2D7099 结束偏移量为1--&gt;</span>            </div><div class="line">                <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">"#FFACD6CC"</span> <span class="attr">Offset</span>=<span class="string">"0"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">"#FF2D7099"</span> <span class="attr">Offset</span>=<span class="string">"1"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">LinearGradientBrush</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Grid.Background</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></p><h3 id="特殊属性（UWP，WPF特有）"><a href="#特殊属性（UWP，WPF特有）" class="headerlink" title="特殊属性（UWP，WPF特有）"></a>特殊属性（UWP，WPF特有）</h3><ul><li>Dependency Property 依赖属性<br>依赖属性就是自己自己没有值，通过Binding从数据源获得值，就是依赖在别人身上，拥有依赖属性的对象称为依赖对象。<br>几种应用依赖属性的场景： <ol><li>希望可在样式中设置属性。 </li></ol></li></ul><ol><li>希望属性支持数据绑定。 </li><li>希望可使用动态资源引用设置属性。 </li><li>希望从元素树中的父元素自动继承属性值。 </li><li>希望属性可进行动画处理。 </li><li>希望属性系统在属性系统、环境或用户执行的操作或者读取并使用样式更改了属性以前的值时报告。 </li><li>希望使用已建立的、WPF 进程也使用的元数据约定，例如报告更改属性值时是否要求布局系统重新编写元素的可视化对象。<br>依赖对象创建时并不包含存储数据空间。WPF中必须使用依赖对象作为依赖属性的宿主。<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">x:Name</span>=<span class="string">"textBox1"</span> <span class="attr">Margin</span>=<span class="string">"10"</span>  <span class="attr">Text</span>=<span class="string">"&#123;Binding Path=Title&#125;"</span>/&gt;</span></div></pre></td></tr></table></figure></li></ol><ul><li>Attached Property 附加属性 。附加属性为本不应该是该控件的属性而在该控件下设置的属性。<br>比如<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--声明该Grid有三行--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"auto"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"auto"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"auto"</span>/&gt;</span></div><div class="line">       <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--这里的Grid.row本来是Grid的属性，却被当做是Button的属性。Grid.Row为Button的附加属性--&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Grid.Row</span>=<span class="string">"2"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; UWP学习笔记 (三)   XAML界面原理和语法：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;学习XAML在UWP 中的原理及语法&lt;br&gt;
    
    </summary>
    
    
      <category term="UWP" scheme="lovemefan.win/tags/UWP/"/>
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>UWP学习笔记 (二)   UWP开发环境及项目工程解析</title>
    <link href="lovemefan.win/2017/07/09/UWP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%8F%8A%E9%A1%B9%E7%9B%AE%E5%B7%A5%E7%A8%8B%E8%A7%A3%E6%9E%90/"/>
    <id>lovemefan.win/2017/07/09/UWP学习笔记/开发环境及项目工程解析/</id>
    <published>2017-07-09T14:48:00.000Z</published>
    <updated>2017-07-10T14:02:48.992Z</updated>
    
    <content type="html"><![CDATA[<p><strong> UWP学习笔记 (二)   UWP开发环境及项目工程解析：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>介绍开发环境及UWP的组成部分<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="开发环境及项目工程解析"><a href="#开发环境及项目工程解析" class="headerlink" title="开发环境及项目工程解析"></a>开发环境及项目工程解析</h1><p>工欲善其事，必先利其器。本章将介绍如何搭建Windows 10通用应用开发的环境以<br>及开发第一个Windows 10通用应用程序，并解析其工程结构和代码以及如何适配不同平<br>台的特殊代码。</p><h2 id="搭建开发环境"><a href="#搭建开发环境" class="headerlink" title="搭建开发环境"></a>搭建开发环境</h2><h3 id="开发环境的要求"><a href="#开发环境的要求" class="headerlink" title="开发环境的要求"></a>开发环境的要求</h3><p>进行Windows 10的开发，计算机需要达到以下要求</p><ul><li>1.操作系统Windows 10(64位专业版)。</li><li>2.系统盘需要至少8G的剩余硬盘空间。</li><li>3.内存达到4GB以上。</li><li>4.Windows10的手机模拟器基于Hyper-V,需要CPU支持二级地址转换技术。</li></ul><p>注意部分计算机会默认关闭主板BIOS的虚拟化技术，这时需要进入主板BIOS设置<br>页面开启虚拟化技术，然后再启动或者关闭Windows功能界面启动Hyper-V服务。</p><p>###开发工具的安装</p><p>Windows10 SDK已集成在Visual Studio上o 2015最新的版本中。开发工具可以直接到敝<br>软的Windows开发者网站进行下载(<a href="https //dev.windows.com">https //dev.windows.com</a>)，由于开发工具的更新速<br>度较快，请以官方最新版本为准。安装完成后，里面包含了程序的SDK.运行模拟器和编程<br>工具。Windows 10 Developer Tools包含的工具集合详细信息如下</p><ul><li>1.Visual Stuio是Winoows 10的集成开发环境(IDE)，其中包括了C#和XAML.代码编辑<br>功能、简单界面的布局与设计功能、编译程序、连接模拟器、部署程序，以及调试程序等功能。</li><li>2.Emulator是Winows 10的模拟器，开发者可以把应用程序部署到各种分辨率的模拟器上来检查程序运行效果。如果用户有Windows 10手机，可以直接使用手机来调试和运行自己编的程序。<h2 id="创建Windows-10-通用应用"><a href="#创建Windows-10-通用应用" class="headerlink" title="创建Windows 10 通用应用"></a>创建Windows 10 通用应用</h2>打开Visual Studio 2015/2017。本人用的是Visual Studio 2017。新建一个C#通用项目<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/cAjddJLAIJ.png?imageslim" alt="mark"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/0LJL24D0fm.png?imageslim" alt="新建UWP项目"><br>编辑MainPage.xaml文件，添加以下代码<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Background</span>=<span class="string">"&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;"</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span> <span class="attr">Margin</span>=<span class="string">"125,105,0,0"</span> <span class="attr">TextWrapping</span>=<span class="string">"Wrap"</span> <span class="attr">Text</span>=<span class="string">"Hello World"</span> <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span> <span class="attr">FontSize</span>=<span class="string">"72"</span>/&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></li></ul><p>如图：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/G7JCl403Eg.png?imageslim" alt="hello world"><br>运行结果：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/KCl6BB6mAG.png?imageslim" alt="结果"></p><h2 id="解析Hello-World-应用"><a href="#解析Hello-World-应用" class="headerlink" title="解析Hello World 应用"></a>解析Hello World 应用</h2><p>Hello World 项目工程中里面包含了MainPage.xaml文件、MainPage.xaml.cs文件、App.xaml文件、App.xaml.cs文件、Package.appxmanifest文件、AssemblyInfo.cs文件和一些图片文件。</p><h3 id="MainPage-xaml-文件"><a href="#MainPage-xaml-文件" class="headerlink" title="MainPage.xaml 文件"></a>MainPage.xaml 文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Page</span></span></div><div class="line">    <span class="attr">x:Class</span>=<span class="string">"HelloWorld.MainPage"</span></div><div class="line">    <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></div><div class="line">    <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></div><div class="line">    <span class="attr">xmlns:local</span>=<span class="string">"using:HelloWorld"</span></div><div class="line">    <span class="attr">xmlns:d</span>=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></div><div class="line">    <span class="attr">xmlns:mc</span>=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></div><div class="line">    <span class="attr">mc:Ignorable</span>=<span class="string">"d"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Background</span>=<span class="string">"&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span> <span class="attr">Margin</span>=<span class="string">"125,105,0,0"</span> <span class="attr">TextWrapping</span>=<span class="string">"Wrap"</span> <span class="attr">Text</span>=<span class="string">"Hello World"</span> <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span> <span class="attr">FontSize</span>=<span class="string">"72"</span>/&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Page</span>&gt;</span></div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;Page元素是一个程序页面的根元素，表示当前的XAML代码是一个页面，当前页面的其他所有UI元素都必须在Page元素下面。在当前的页面里面有两个控件：Grid控件、TextBlock法控件。其中，Grid控件是布局容器控件，所以在可视化视图上并没有看到Grid控件的显示。Text131ock控件是一个文本框控件，用于显示文本的内容，在可视化视图上看到的。“TextBlock”就是TextBlock控件。在上面的页面代码中可以看到TextBlock控件里面还有很多属性，这些属性用于定义控件的各种特性的设置。例如，”x Name。属性定义了<br>控件的名称，在后台代码里就可以通过名称来访问控件。Text。属性定义了TextBlock控<br>件文本显示的内容，等等。</p><h3 id="MainPage-xmal-cs文件"><a href="#MainPage-xmal-cs文件" class="headerlink" title="MainPage.xmal.cs文件"></a>MainPage.xmal.cs文件</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System;</div><div class="line"><span class="keyword">using</span> System.Collections.Generic;</div><div class="line"><span class="keyword">using</span> System.IO;</div><div class="line"><span class="keyword">using</span> System.Linq;</div><div class="line"><span class="keyword">using</span> System.Runtime.InteropServices.WindowsRuntime;</div><div class="line"><span class="keyword">using</span> Windows.Foundation;</div><div class="line"><span class="keyword">using</span> Windows.Foundation.Collections;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls.Primitives;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Data;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Input;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Media;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Navigation;</div><div class="line"></div><div class="line"><span class="comment">// https://go.microsoft.com/fwlink/?LinkId=402352&amp;clcid=0x804 上介绍了“空白页”项模板</span></div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 可用于自身或导航至 Frame 内部的空白页。</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainPage</span> : <span class="title">Page</span></div><div class="line">    &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainPage</span>(<span class="params"></span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">this</span>.InitializeComponent();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;MainPage.xmal.cs文件就是MainPage.xmal文件对应的后台代码的处理，在MainPage.xmal.cs文件会完成程序页面的控件的初始化工作和处理控件的触发事件。</p><h3 id="App-xaml-文件"><a href="#App-xaml-文件" class="headerlink" title="App.xaml 文件"></a>App.xaml 文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Application</span></span></div><div class="line">    <span class="attr">x:Class</span>=<span class="string">"HelloWorld.App"</span></div><div class="line">    <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></div><div class="line">    <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></div><div class="line">    <span class="attr">xmlns:local</span>=<span class="string">"using:HelloWorld"</span></div><div class="line">    <span class="attr">RequestedTheme</span>=<span class="string">"Light"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">Application</span>&gt;</span></div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;App.xaml文件是应用程序的入口XAML文件，一个应用程序只有一个该文件，并且<br>它还会有一个对应的App.xaml.cs文件。App.xaml文件的根节点是Appplication元素，它<br>里面的属性定义和空间定义与上面的Mainpage.xaml页面是一样的，不一样的地方是在<br>App.xam]文件中定义的元素是对整个应用程序是公用的，例如你在App.xaml文件中，添<br>加了〈Application，Resources〉元素来定义一些资源文件或者样式，这些资源在整个应用程序的所有页面都可以引用，而在Page的页画所定义的资源或者控件就只能否在当前的页面使用。</p><h3 id="App-xaml-cs"><a href="#App-xaml-cs" class="headerlink" title="App.xaml.cs"></a>App.xaml.cs</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System;</div><div class="line"><span class="keyword">using</span> System.Collections.Generic;</div><div class="line"><span class="keyword">using</span> System.IO;</div><div class="line"><span class="keyword">using</span> System.Linq;</div><div class="line"><span class="keyword">using</span> System.Runtime.InteropServices.WindowsRuntime;</div><div class="line"><span class="keyword">using</span> Windows.ApplicationModel;</div><div class="line"><span class="keyword">using</span> Windows.ApplicationModel.Activation;</div><div class="line"><span class="keyword">using</span> Windows.Foundation;</div><div class="line"><span class="keyword">using</span> Windows.Foundation.Collections;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls.Primitives;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Data;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Input;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Media;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Navigation;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 提供特定于应用程序的行为，以补充默认的应用程序类。</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">sealed</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">App</span> : <span class="title">Application</span></div><div class="line">    &#123;</div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 初始化单一实例应用程序对象。这是执行的创作代码的第一行，</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 已执行，逻辑上等同于 main() 或 WinMain()。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">App</span>(<span class="params"></span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">this</span>.InitializeComponent();</div><div class="line">            <span class="keyword">this</span>.Suspending += OnSuspending;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 在应用程序由最终用户正常启动时进行调用。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 将在启动应用程序以打开特定文件等情况下使用。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="e"&gt;</span>有关启动请求和过程的详细信息。<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLaunched</span>(<span class="params">LaunchActivatedEventArgs e</span>)</span></div><div class="line">        &#123;</div><div class="line">            Frame rootFrame = Window.Current.Content <span class="keyword">as</span> Frame;</div><div class="line"></div><div class="line">            <span class="comment">// 不要在窗口已包含内容时重复应用程序初始化，</span></div><div class="line">            <span class="comment">// 只需确保窗口处于活动状态</span></div><div class="line">            <span class="keyword">if</span> (rootFrame == <span class="literal">null</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="comment">// 创建要充当导航上下文的框架，并导航到第一页</span></div><div class="line">                rootFrame = <span class="keyword">new</span> Frame();</div><div class="line"></div><div class="line">                rootFrame.NavigationFailed += OnNavigationFailed;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (e.PreviousExecutionState == ApplicationExecutionState.Terminated)</div><div class="line">                &#123;</div><div class="line">                    <span class="comment">//<span class="doctag">TODO:</span> 从之前挂起的应用程序加载状态</span></div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="comment">// 将框架放在当前窗口中</span></div><div class="line">                Window.Current.Content = rootFrame;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (e.PrelaunchActivated == <span class="literal">false</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">if</span> (rootFrame.Content == <span class="literal">null</span>)</div><div class="line">                &#123;</div><div class="line">                    <span class="comment">// 当导航堆栈尚未还原时，导航到第一页，</span></div><div class="line">                    <span class="comment">// 并通过将所需信息作为导航参数传入来配置</span></div><div class="line">                    <span class="comment">// 参数</span></div><div class="line">                    rootFrame.Navigate(<span class="keyword">typeof</span>(MainPage), e.Arguments);</div><div class="line">                &#125;</div><div class="line">                <span class="comment">// 确保当前窗口处于活动状态</span></div><div class="line">                Window.Current.Activate();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 导航到特定页失败时调用</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span><span class="doctag">&lt;param name="sender"&gt;</span>导航失败的框架<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span><span class="doctag">&lt;param name="e"&gt;</span>有关导航失败的详细信息<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">OnNavigationFailed</span>(<span class="params"><span class="keyword">object</span> sender, NavigationFailedEventArgs e</span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Failed to load Page "</span> + e.SourcePageType.FullName);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 在将要挂起应用程序执行时调用。  在不知道应用程序</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 无需知道应用程序会被终止还是会恢复，</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 并让内存内容保持不变。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="sender"&gt;</span>挂起的请求的源。<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="e"&gt;</span>有关挂起请求的详细信息。<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnSuspending</span>(<span class="params"><span class="keyword">object</span> sender, SuspendingEventArgs e</span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">var</span> deferral = e.SuspendingOperation.GetDeferral();</div><div class="line">            <span class="comment">//<span class="doctag">TODO:</span> 保存应用程序状态并停止任何后台活动</span></div><div class="line">            deferral.Complete();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;App.xaml.cs 文件是一个控制整个应用程序的全局文件，整个应用程序的生命周期都在该文件中定义和处理。应用程序在整个生命周期会有三个状态：Running（运行），NotRunning（未运行）和 Suspended（挂起）<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/DmKlm3EJ1b.png?imageslim" alt="应用程序生命周期"></p><h3 id="Package-appxmanifest文件"><a href="#Package-appxmanifest文件" class="headerlink" title="Package.appxmanifest文件"></a>Package.appxmanifest文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">Package</span></span></div><div class="line">  <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/foundation/windows10"</span></div><div class="line">  <span class="attr">xmlns:mp</span>=<span class="string">"http://schemas.microsoft.com/appx/2014/phone/manifest"</span></div><div class="line">  <span class="attr">xmlns:uap</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/uap/windows10"</span></div><div class="line">  <span class="attr">IgnorableNamespaces</span>=<span class="string">"uap mp"</span>&gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Identity</span></span></div><div class="line">    <span class="attr">Name</span>=<span class="string">"f85505e4-25a4-4f06-b489-dfc4750ab693"</span></div><div class="line">    <span class="attr">Publisher</span>=<span class="string">"CN=Lovemefan"</span></div><div class="line">    <span class="attr">Version</span>=<span class="string">"1.0.0.0"</span> /&gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">mp:PhoneIdentity</span> <span class="attr">PhoneProductId</span>=<span class="string">"f85505e4-25a4-4f06-b489-dfc4750ab693"</span> <span class="attr">PhonePublisherId</span>=<span class="string">"00000000-0000-0000-0000-000000000000"</span>/&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">DisplayName</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">DisplayName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">PublisherDisplayName</span>&gt;</span>Lovemefan<span class="tag">&lt;/<span class="name">PublisherDisplayName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Logo</span>&gt;</span>Assets\StoreLogo.png<span class="tag">&lt;/<span class="name">Logo</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">TargetDeviceFamily</span> <span class="attr">Name</span>=<span class="string">"Windows.Universal"</span> <span class="attr">MinVersion</span>=<span class="string">"10.0.0.0"</span> <span class="attr">MaxVersionTested</span>=<span class="string">"10.0.0.0"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Dependencies</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Resources</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Resource</span> <span class="attr">Language</span>=<span class="string">"x-generate"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Resources</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Applications</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Application</span> <span class="attr">Id</span>=<span class="string">"App"</span></span></div><div class="line">      <span class="attr">Executable</span>=<span class="string">"$targetnametoken$.exe"</span></div><div class="line">      <span class="attr">EntryPoint</span>=<span class="string">"HelloWorld.App"</span>&gt;</div><div class="line">      <span class="tag">&lt;<span class="name">uap:VisualElements</span></span></div><div class="line">        <span class="attr">DisplayName</span>=<span class="string">"HelloWorld"</span></div><div class="line">        <span class="attr">Square150x150Logo</span>=<span class="string">"Assets\Square150x150Logo.png"</span></div><div class="line">        <span class="attr">Square44x44Logo</span>=<span class="string">"Assets\Square44x44Logo.png"</span></div><div class="line">        <span class="attr">Description</span>=<span class="string">"HelloWorld"</span></div><div class="line">        <span class="attr">BackgroundColor</span>=<span class="string">"transparent"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">uap:DefaultTile</span> <span class="attr">Wide310x150Logo</span>=<span class="string">"Assets\Wide310x150Logo.png"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">uap:SplashScreen</span> <span class="attr">Image</span>=<span class="string">"Assets\SplashScreen.png"</span> /&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">uap:VisualElements</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">Application</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Applications</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Capabilities</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Capability</span> <span class="attr">Name</span>=<span class="string">"internetClient"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Capabilities</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Package</span>&gt;</span></div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;Package.appxmanifest文件是Windows 10应用程序的清单文件，声明应用的标识、应<br>用的功能以及用来进行部署和更新的信息。可以在清单文件对当前的应用程序进行配置，<br>例如添加磁帖图像和初始屏幕、指示应用支持的方向以及定义应用的功能种类、Package<br>元素是整个清单的根节点；Identity元素表示应用程序版本发布者名称等信息mp:<br>Phoneldentity元素表示应用程序相关的唯一标识符信息Properties元素包含了应用程序<br>的名称、发布者名称等信息的设置；Prerequisites元素则是用于设置应用程序所支持的系<br>统版本号；Resources元素表示应用程序所使用资源信息，例如语言资源Applications元<br>素里面则包含了与应用程序相关的logo设置、闪屏图片设置等可视化的设置信息<br>Capabilities元素表示当前应用程序所使用的一些手机特定功能，例如internetclient表示<br>使用网络的功能。</p><p>&#160;&#160;&#160;&#160;Page.appxmanifest文件可以支持在可视化图形中进行设置，可以双击解决方案中<br>的package.appxmanifest文件来打开此文件的可视化编辑视图。我们可以直接在可视化界<br>面上设置程序的logo、磁贴、功能权限等。在后续的应用程序开发里面有些功能会需要在<br>Package.appxmanifest清单文件上进行相关的配置，到时候再进行详细的讲解。</p><h2 id="不同平台设备的适配"><a href="#不同平台设备的适配" class="headerlink" title="不同平台设备的适配"></a>不同平台设备的适配</h2><p>&#160;&#160;&#160;&#160;Windows 10通用应用程序针对特定的平台还会有一个子API的集合，当我们要使用<br>到某个平台的特定API的时候(例如手机相机硬件按钮触发事件)，这时候就需要调用特定<br>平台的API.因为Winclows 10应用程序是一个安装包，可以部署到所有的Windows 10系<br>统平台，所以这里就涉及一个八PI适配的问题，对特定平台的API进行特殊处理。除了特<br>定平台的API,还有一个适配的工作就是界面适配，Windows 10也提供了一系列的API来<br>给我们做界面的适配工作。</p><p>###特定平台的API调用</p><p>&#160;&#160;&#160;&#160;目前在Winclows 10里面有Windows Mobile Extension SDK和田indows Desktop<br>Extension SDK两个扩展的SDK分别表示手机版本和桌面版本的扩展SDK(在后面<br>章节里面若用到特定平台的API,都会进行区分标识)。这两个SDK都是直接内置在<br>Windows 10的开发SDK里面的，但是默认情况下不会给项目工程添加上，需要使用时可以<br>在项目工程里面引用，路径为Project-&gt;Add Reference-&gt;-Windows Universal-&gt;Extensions.<br>在使用特定平台的API的时候，必须判断当前的环境是否支持(不支持的平台调用将会引<br>发异常)。判断的方法为Windows.Foundation.Metadata.ApiInformation.IsTypepresent<br>(String type Name)，type Name表示带完整的命名空间的API的名称，返回true表示支持，<br>返回false表示不支持。</p><p>##界面适配<br>&#160;&#160;&#160;&#160;Windows 10系统支持多种硬件平台和分辨率，Windows 10系统底层对界面的适配色<br>昼非常强大的，同样的控件在不同的硬件平台上显示也可能会有差异，这种适配就是由<br>Windows 10系统自己来完成适配，来匹配不同的硬件和分辨率的显示效果。虽然<br>Windpws 10底层完成了各种控件的适配，但是很多时候还是需要在程序里来实现适配。在<br>开发通用程序的时候，要充分地考虑各种不同分辨率下的显示效果，可以通过可视化设计界<br>面和各种分辨率的模拟器来进行测试。适配界面有几种常用的编程技巧</p><ul><li>使用相对的布局控件来进行排列，如Grid.Relativepanel等;</li><li>使用相对的属性来设置控件在容器的位置，如orizontalAlignment.VerticalAlignment属性;</li><li>设置长度宽度的最大值最小值限制;</li><li>根据设备实际分辨率来设置长度宽度或者位置。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; UWP学习笔记 (二)   UWP开发环境及项目工程解析：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;介绍开发环境及UWP的组成部分&lt;br&gt;
    
    </summary>
    
    
      <category term="UWP" scheme="lovemefan.win/tags/UWP/"/>
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>UWP学习笔记 (一) 初识UWP</title>
    <link href="lovemefan.win/2017/07/08/UWP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E4%BB%80%E4%B9%88%E6%98%AFUWP/"/>
    <id>lovemefan.win/2017/07/08/UWP学习笔记/什么是UWP/</id>
    <published>2017-07-08T03:02:00.000Z</published>
    <updated>2017-07-10T03:23:15.509Z</updated>
    
    <content type="html"><![CDATA[<p><strong> UWP学习笔记 (一) 初识UWP：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>认识UWP及开发前的一些准备<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="什么是UWP"><a href="#什么是UWP" class="headerlink" title="什么是UWP"></a>什么是UWP</h2><blockquote><p>UWP即Windows 10 中的Universal Windows Platform简称。即Windows通用应用平台，在Win 10 Mobile/Surface(Windows平板电脑）/PC/Xbox/HoloLens等平台上运行，uwp不同于传统pc上的exe应用也跟只适用于手机端的app有本质区别。它并不是为某一个终端而设计，而是可以在所有windows10设备上运行。<br>微软在MWC 2015上首次展示了Win10统一平台战略的“代表作”：Win10通用应用（Windows10 Universal App）平台。在Win10中，所有设备将会运行在一个统一的Windows10系统核心之上。这样的设计使得一款应用可以在所有Win10设备上运行，今后Win10手机、平板电脑、笔记本电脑、PC、Xbox，甚至是3D全息眼镜HoloLens、巨屏触控Surface Hub和物联网设备例如Raspberry Pi 2等都不再有界限。新的通用平台允许新类型的Windows10通用应用真正实现一次编写、一套业务逻辑和统一的用户界面。应用在统一的Win10商店中将只会有一个安装包，而它将适用于所有Win10设备。[1]  在 Windows 10 Insider Preview 中的 Universal Windows Platform (UWP)借助 Windows 10 UWP 将在 Windows 应用中更上一层楼。UWP 会根据不同的设备类型使用相应的自适应 UI 控件，并使用运行 Windows 10 Insider Preview 的所有设备上必须具有的通用 API 集。简单的说，uwp就是通用应用的意思可以在电脑端，手机端，或其他设备通用。不用分别为不同的平台设计不同的软件。即一个软件就可以通吃。这是微软为win10系统定制的趋势。微软声称不管是开发者，还是使用者，都省事。   –百度百科</p></blockquote><p>首先来欣赏一下国内一些比较用心的UWP<br><strong>网易云音乐</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170708/HJG2J760dA.png?imageslim" alt="网易云音乐"></p><p><strong>IT之家</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170708/A65Aa9ECm6.png?imageslim" alt="IT之家"></p><h3 id="如何获取UWP"><a href="#如何获取UWP" class="headerlink" title="如何获取UWP"></a>如何获取UWP</h3><ul><li>1.从Window 应用商店获取。打开应用商店，搜索并选择下载。</li><li>2.<a href="https://www.windows10.pro/how-to-install-uwp-offline-packages" target="_blank" rel="external">离线部署</a><h2 id="开发准备"><a href="#开发准备" class="headerlink" title="开发准备"></a>开发准备</h2></li><li>开发环境：Windows 10 +Visual Studio 2015/2017    这里说明必须是<strong>Windows 10 </strong>，其他不行。VS 2015及以上才支持UWP开发，所以只能用VS 2015或2017。我目前的环境是 Win10 创意者 + VS 2017。</li><li>开发者模式。前往 设置-更新与安全-针对开发者-开发者模式</li><li>技术储备 C#/C++/VB 后期我们将使用C#进行开发程序的逻辑部分 <a href="http://bit.do/csharp-fundamentals" target="_blank" rel="external">C#微软官方教程（有中文字幕）</a></li><li>XAML(EXtensible Application Markup Language)。XAML是一种类似HTML的标记语言。用来设计UI部分后面会着重学习XAML语言。如果是有HTML基础的同学会很容易上手。<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>我对windows Phone有一种特有的情怀，从之前的Windows Phone 7 开始，我就喜欢Windows Phone上了其流畅顺滑的操作。到后来的Windows 10 mobile 。由于其软件生态太差，无法满足生活需求，我才不得不转向Android阵营。以前Android的卡慢是我无法忍受的，但随着Android 6.0/7.0，即将发布的Android 8.0，Android慢慢优化的系统也能适应大部分人的需求。Android，iOS是大势所趋，我为什么还要选择UWP这种有些人听都没听过的平台呢？</li><li>首先，我看重的是UWP的优势，一次编译，能在所有Win 10 设备运行，包括电脑、平板、手机(Win10 手机)、XBox、HoloLens、surface Hub、loT(物联网)。微软费尽心思推广Win10，就是为了增加UWP的运行环境。现在及未来Win10的装机量不容小视。而且UWP小巧轻便，前途无可限量。</li><li>其次，UWP有着自己的类似Google Play和Apple Store的应用商店，保证其安全性。</li><li>然后，我想尽自己一份微薄力量来完善Windows 生态，主要还是Windows phone的生态。<h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2></li><li>UWP微软官方学习课程 <a href="">官方MVA]</a> <a href="http://www.bilibili.com/video/av7997007/" target="_blank" rel="external">bilibili搬运</a><br>Microsoft Virtual Academy (MVA)   <a href="https://mva.microsoft.com/" target="_blank" rel="external">【链接】</a>是微软官方的一个免费的视频教学课堂。里面有大量的学习资源(有中文字幕)，强烈推荐。</li><li>深出浅入UWP （中文课程）<a href="http://www.bilibili.com/video/av3610677" target="_blank" rel="external">【bilibili】</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; UWP学习笔记 (一) 初识UWP：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;认识UWP及开发前的一些准备&lt;br&gt;
    
    </summary>
    
    
      <category term="UWP" scheme="lovemefan.win/tags/UWP/"/>
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell篇 (一) 初识PowerShell</title>
    <link href="lovemefan.win/2017/07/05/PowerShsell/PowerShell%E7%AF%87%20%20(%E4%B8%80)%E5%88%9D%E8%AF%86PowerShell/"/>
    <id>lovemefan.win/2017/07/05/PowerShsell/PowerShell篇  (一)初识PowerShell/</id>
    <published>2017-07-05T12:53:23.000Z</published>
    <updated>2017-07-07T02:46:11.706Z</updated>
    
    <content type="html"><![CDATA[<p><strong> PowerShell篇 (一) 初识PowerShell：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>什么是PowerShell<br><a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><h1 id="初识PowerShell"><a href="#初识PowerShell" class="headerlink" title="初识PowerShell"></a>初识PowerShell</h1><p><code>作者：lovemefan</code> <code>以下资料收集于IT之家和知乎</code></p><h2 id="PowerShell的邂逅"><a href="#PowerShell的邂逅" class="headerlink" title="PowerShell的邂逅"></a>PowerShell的邂逅</h2><p>&#160;&#160;&#160;&#160;在我搭建我的博客的时候，cmd命令肯定是少不了的。除了cmd我们还可以选择Git Bash和PowerShell。<br>Git Bash是Git自带的一个命令行工具，用来上传，克隆等一些GitHub的操作。我之前也只知道Power Shell也是命令行，用它部署过离线的<a href="http://baike.baidu.com/link?url=J5GeaQ_aSSMscd2pdx3O7nv1xTjZ99hw4ppIODqWFTtGFqHuxw13ppv9HviTZ8IglPkdRudcQb4-expkEoxC_a" target="_blank" rel="external">UWP</a>，但平常不太会用所以没太在意。我只知道是微软为了替代cmd而特意在Windows 10里添加的新功能 。但在我使用Windows 10 创意者 的时候，正如往常使用鼠标右键+Shift ，本来是<strong>“从此处打开命令窗口”</strong>，结果就是没找到。反而这样显示<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/IKDe87048g.jpg?imageslim" alt="mark"><br>后来发现这是微软故意而为之的</p><h2 id="什么是PowerShell"><a href="#什么是PowerShell" class="headerlink" title="什么是PowerShell"></a>什么是PowerShell</h2><blockquote><p>&#160;&#160;&#160;&#160;Windows PowerShell 是一种命令行外壳程序和脚本环境，使命令行用户和脚本编写者可以利用 .NET Framework的强大功能。<br>&#160;&#160;&#160;&#160;它引入了许多非常有用的新概念，从而进一步扩展了您在 Windows 命令提示符和 Windows Script Host 环境中获得的知识和创建的脚本。<br>&#160;&#160;&#160;&#160;Windows PowerShell v3将伴随着MicrosoftHyper-V3.0和Windows Server 2012发布。PowerShell v3是一个Windows任务自动化的框架，它由一个命令行shell和内置在这个.NET框架上的编程语言组成。<br>&#160;&#160;&#160;&#160;PowerShell v3采用新的cmdlet让管理员能够更深入到系统进程中，这些进程可以制作成可执行的文件或脚本（script）。一条cmdlet是一条轻量命令，Windows PowerShell运行时间在自动化脚本的环境里调用它。Cmdlet包括显示当前目录的Get-Location，访问文件内容的Get-Content和结束运行进程的Stop-Process。<br>&#160;&#160;&#160;&#160;PowerShell v3在Windows Server 8中装载了Windows Management Framework 3.0。PowerShell运行时间也能嵌入到其它应用。——百度百科</p></blockquote><p><a href="https://msdn.microsoft.com/en-us/powershell" target="_blank" rel="external">微软PowerShell官网</a></p><p>&#160;&#160;&#160;&#160;从Windows10创意者更新开始，PowerShell正式上位替换了命令提示符CMD。不论是Windows+X右键超级菜单，还是Shift+文件夹空白处右键，又或在文件资源管理器文件菜单中，都没有命令提示符CMD的身影了，全部都由PowerShell取而代之了。长期使用CMD的Windows系统管理员或Windows命令行极客恐怕一时不能适应，使用CMD都只能去开始菜单-所有应用-Windows系统-命令提示符打开使用，或者Windows+R键然后输入cmd，或者在小娜输入框输入cmd，再或者在PowerShell中输入cmd(看来又绕回来了)。藏得这么深，显然是不想让人用了啊。不仅如此，Power Shell还登陆了Linux和MacOS<br><a href="https://zhuanlan.zhihu.com/p/26346821?utm_source=qq&amp;utm_medium=social" target="_blank" rel="external">在Linux下安装PowerShell</a><br>PoweShell上位图如下<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/bfiiJCEHd4.jpg?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;问题来了，PowerShell这货凭什么力压CMD，强行上位？如果你之前试用过PowerShell，相信它一定没有给你什么好印象。打开慢！反应慢！命令还陌生！还动不动就弹一大堆谁都看不懂错误，PowerShell究竟凭什么在Windows10创意者更新中替代命令提示符CMD呢？微软脑抽了？<br>微软没有脑抽，PowerShell是凭借其强大的功能替换CMD的。这里要先说明以下PowerShell究竟是什么东西，或者它究竟是不是东西？<br>&#160;&#160;&#160;&#160;Windows PowerShell不是东西，它是专为系统管理员设计的新Windows命令行shell，它包括交互式提示和脚本环境。PowerShell定义很多命令与操作系统，特别是与文件系统交互，能够启动应用程序，甚至操纵应用程序；PowerShell允许将几个命令组合起来放到文件里执行，实现文件级的重用，也就是说有脚本的性质；PowerShell能够充分利用.Net类型和COM对象，来简单地与各种系统交互，完成各种复杂的、自动化的操作。<br>&#160;&#160;&#160;&#160;用人话说就是CMD能做的PowerShell都能做，CMD不能做的Powershell也能做。就是这么自信！不信？赶紧打开PowerShell把下面的命令复制进去，看看它干了什么事，然后你用CMD做出来吧！<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># create new excel instance</span></div><div class="line"><span class="variable">$objExcel</span> = <span class="built_in">New-Object</span> -comobject Excel.Application</div><div class="line"><span class="variable">$objExcel</span>.Visible = <span class="literal">$True</span></div><div class="line"><span class="variable">$objWorkbook</span> = <span class="variable">$objExcel</span>.Workbooks.Add()</div><div class="line"><span class="variable">$objWorksheet</span> = <span class="variable">$objWorkbook</span>.Worksheets.Item(<span class="number">1</span>)</div><div class="line"><span class="comment"># write information to the excel file</span></div><div class="line"><span class="variable">$i</span> = <span class="number">0</span></div><div class="line"><span class="variable">$first10</span> = (ps | sort ws -Descending | select -first <span class="number">10</span>)</div><div class="line"><span class="variable">$first10</span> | <span class="keyword">foreach</span> -Process &#123;<span class="variable">$i</span>++; <span class="variable">$objWorksheet</span>.Cells.Item(<span class="variable">$i</span>,<span class="number">1</span>) = <span class="variable">$_</span>.name; <span class="variable">$objWorksheet</span>.Cells.Item(<span class="variable">$i</span>,<span class="number">2</span>) = <span class="variable">$_</span>.ws&#125;</div><div class="line"><span class="variable">$otherMem</span> = (ps | measure ws -s).Sum - (<span class="variable">$first10</span> | measure ws -s).Sum</div><div class="line"><span class="variable">$objWorksheet</span>.Cells.Item(<span class="number">11</span>,<span class="number">1</span>) = <span class="string">"Others"</span>; <span class="variable">$objWorksheet</span>.Cells.Item(<span class="number">11</span>,<span class="number">2</span>) = <span class="variable">$otherMem</span></div><div class="line"><span class="comment"># draw the pie chart</span></div><div class="line"><span class="variable">$objCharts</span> = <span class="variable">$objWorksheet</span>.ChartObjects()</div><div class="line"><span class="variable">$objChart</span> = <span class="variable">$objCharts</span>.Add(<span class="number">0</span>, <span class="number">0</span>, <span class="number">500</span>, <span class="number">300</span>)</div><div class="line"><span class="variable">$objChart</span>.Chart.SetSourceData(<span class="variable">$objWorksheet</span>.range(<span class="string">"A1:B11"</span>), <span class="number">2</span>)</div><div class="line"><span class="variable">$objChart</span>.Chart.ChartType = <span class="number">70</span></div><div class="line"><span class="variable">$objChart</span>.Chart.ApplyDataLabels(<span class="number">5</span>)</div></pre></td></tr></table></figure></p><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/CJi70f9ahF.png?imageslim" alt="mark"><br>没错，有点慢，等下吧，接下来它自动打开了excel，如图，我果然还是IT之家老粉丝啊<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/B8IDAdFlm4.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;上面一段代码是PowerShell界常见的一段神代码，很多初学者被其带入了PowerShell的大门。有效代码不过20来行，作用是把当前系统中最占内存的10个进程的数据发送到Excel中，并绘制成三维饼图。CMD是很难做到了，被替代也理所应当了。<br>&#160;&#160;&#160;&#160;PowerShell的定位是操作系统和应用程序的管理工具，从这个角度看，它是CMD的升级版，并非简单的对CMD进行扩展，事实上微软也不打算扩展和升级CMD了，以后PowerShell将全方位的替代CMD，目前CMD和PowerShell还是并存状态。<br>下面正式介绍PowerShell。</p><h3 id="（一）简单的命令"><a href="#（一）简单的命令" class="headerlink" title="（一）简单的命令"></a>（一）简单的命令</h3><p>&#160;&#160;&#160;&#160;在CMD中，命令是从非常简单（如attrib.exe）到非常复杂（如netsh.exe）的可执行程序，新入门用户一旦遇到复杂命令，只能束手无策，只能求助搜索引擎，解决当前需求之后，就把命令的用法抛诸脑后，下次使用又要重新学习，极其不便。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/526ijlFjLJ.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;PowerShell命令设计非常规范，它的命令由“动词”和“名词”两部分组成，比如“get”表示检索数据，“process”表示系统进程，把“get”和“process”组合起来的PowerShell命令就是“get-process”，意思是获取系统进程列表，这种命令在PowerShell中称为“cmdlet（读作“command-let”）”。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/CIBlH2i1f7.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;使用“动词-名词”结构还有一个好处，就是不同的“动词”和“名词”可以自由组合，很少的几个“动词”和“名词”就可以组合出大量的可用命令，使命令记忆量大为降低，只需记住简单的几个词语，就可以使用大量的命令，这是包括命令提示符CMD在内的Shell不具备的，并且不会产生歧义，对新用户非常友好。</p><h3 id="（二）别名系统"><a href="#（二）别名系统" class="headerlink" title="（二）别名系统"></a>（二）别名系统</h3><p>&#160;&#160;&#160;&#160;“动词-名词”结构的cmdlet固然对新手友好，但也带来了另一个问题，命令名称过长，在命令行交互使用时不方便，在命令行窗口输入命令可以使用Tab键进行补全，可是经常使用还是需要键入大量的内容，要是能够把命令缩短一些就好了。PowerShell在设计时已经考虑到了，为此创建了别名系统，之所以叫名别系统，是因为PowerShell中的别名非常强大，能够非常方便的对别名进行增加、删除、修改，还为之创建了别名驱动器，可以像访问文件系统驱动器一样方便的访问别名驱动器。<br>PowerShell非常贴心的为用户创建了大量内置别名，一方面减少了常用命令的输入长度，另一方面也为熟悉其它Shell而不熟悉PowerShell的用户提供了方便，常见Shell如bash、cmd，PowerShell都为用户提供了他们熟悉的别名。下面是可以在Powershell中使用的通用的Cmd.exe和UNIX命令的简短列表。<br><strong>在PowerShell下输入</strong><br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">get-alias</span></div></pre></td></tr></table></figure></p><p>以下只显示了部分，要想查询所有别名请用<code>alias</code>命令查询<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/6AghbjEgAg.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;PowerShell除了自带别名外，用户自己也可以创建别名，不仅仅可以为cmdlet创建别名，也可以为PowerShell函数、带参数的命令和包含完整路径的命令行程序创建别名。<br>比如为记事本创建别名，可以使用如下命令<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">New-Alias</span> np c:\windows\notepad.exe</div></pre></td></tr></table></figure></p><p>&#160;&#160;&#160;&#160;创建别名完成后，在命令行中输入np就能直接打开记事本。在命令行中创建的别名只能在当前命令行窗口中使用，如果想以后也能使用此别名，可以把以上命令保存在PowerShell配置文件中，以后无论是在命令行中，还是使用脚本，都可以在本机使用np别名了。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/8h0kd2FD21.png?imageslim" alt="mark"><br>PowrShell配置文件位置可以使用$profile命令查询。</p><p>&#160;&#160;&#160;&#160;想查看当前命令行窗口可以使用的别名，可以进入别名驱动器查看，使用dir alias:就能查看所有能用的别名，也可以使用get-alias命令查看别名。</p><h3 id="三-管理任务"><a href="#三-管理任务" class="headerlink" title="(三) 管理任务"></a>(三) 管理任务</h3><p>Windows PowerShell的基本目标是使用户能够以交互方式或通过脚本更好、更容易地对系统进行管理控制，为了达成这个目标，PowerShell提供了大量命令来执行各种管理任务，让用户轻松完成管理系统任务。</p><h4 id="1、管理进程"><a href="#1、管理进程" class="headerlink" title="1、管理进程"></a>1、管理进程</h4><p>前面已经提过管理系统进程的命令，管理进程常用命令就是get-process命令和stop-process命令，get-process命令获取进程之后可以直接用管道发送给stop-process命令结束进程。比如，关闭之前打开的记事本，可以使用下面的命令很方便的关闭记事本。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">get-process</span> -Name notepad | <span class="built_in">stop-process</span></div></pre></td></tr></table></figure></p><h4 id="2、处理文件和文件夹"><a href="#2、处理文件和文件夹" class="headerlink" title="2、处理文件和文件夹"></a>2、处理文件和文件夹</h4><p>&#160;&#160;&#160;&#160;PowerShell使用Get-ChildItem获取文件夹中直接包含的所有项，它有系统内置别名dir和ls，使用CMD和BASH的用户均可以轻松上手。如果想查看C:中的文件夹和文件，直接使用dir c:，PowerShell立刻就会列出C:中的文件和文件夹。其它处理文件和文件夹的命令有Copy-Item、New-Item、Remove-Item等，具体用法可以使用get-help然后跟命令名称即可查询。</p><h4 id="3、处理系统服务"><a href="#3、处理系统服务" class="headerlink" title="3、处理系统服务"></a>3、处理系统服务</h4><p>&#160;&#160;&#160;&#160;可以像管理进程一样管理系统服务，Get-Service命令获取服务列表，Stop-Service命令停止服务，Start-Service命令启动服务，Suspend-Service命令挂起服务，Restart-Service命令重启服务，Set-Service服务设置服务属性。如果想一次性启动已经停止的服务，可以使用以下命令：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">get-service</span> | <span class="built_in">where-object</span> &#123;<span class="variable">$_</span>.Status <span class="nomarkup">-eq</span> <span class="string">"Stopped"</span>&#125; -exclude</div><div class="line">wisvc | <span class="built_in">start-service</span></div></pre></td></tr></table></figure></p><p>&#160;&#160;&#160;&#160;这行命名会把除wisvc之外的命令都启动，这只是一个示例，不要在自己电脑使用，启动所有服务会消耗大量系统资源。</p><h4 id="4、处理注册表"><a href="#4、处理注册表" class="headerlink" title="4、处理注册表"></a>4、处理注册表</h4><p>&#160;&#160;&#160;&#160;PowerShell可以非常方便的处理注册表项目，与进程和服务不同的是，PowerShell并未提供专用的注册表命令，而是使用处理文件和文件夹的命令，这并不奇怪，PowerShell为用户提供了注册表驱动器，可以很好的处理注册表项目。由于注册表对系统非常重要，错误处理注册表也许会导致系统出问题，处理注册表，特别是删除注册表项目要非常小心，最好能在处理注册表项目之前先备份要处理的项目。没有管理员权限也能处理部分注册表项目，这与regedit注册表编辑器不同，注册表编辑器必须使用管理员权限打开，然后才能操作项目。<br><strong>下面的表格列出了访问注册表所需的所有命令</strong></p><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/LcIe6FFlJ4.png?imageslim" alt="mark"><br>PowerShell只提供了两个注册表驱动器HKCU:和HKLM:，其中HKLM:是HKEY_LOCAL_MACHINE的缩写，HKCU:是HKEY_CURRENT_USER的缩写，如果想要访问所有注册表驱动器，可以进入Microsoft.PowerShell.Core\Registry::。</p><h4 id="5、处理其它任务"><a href="#5、处理其它任务" class="headerlink" title="5、处理其它任务"></a>5、处理其它任务</h4><p>PowerShell还可以处理证书、防火墙、appx应用、打印机等任务。大家可以使用get-command命令查找相关命令。</p></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; PowerShell篇 (一) 初识PowerShell：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;什么是PowerShell&lt;br&gt;
    
    </summary>
    
    
      <category term="PowerShell" scheme="lovemefan.win/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>我为什么要建立这个博客</title>
    <link href="lovemefan.win/2017/07/04/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BB%BA%E7%AB%8B%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <id>lovemefan.win/2017/07/04/为什么要建立这个博客/</id>
    <published>2017-07-04T13:32:00.000Z</published>
    <updated>2017-07-07T02:47:01.590Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 我为什么要建立这个博客：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>建立博客的原因<br><a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><h1 id="为什么要建立这个博客"><a href="#为什么要建立这个博客" class="headerlink" title="为什么要建立这个博客"></a>为什么要建立这个博客</h1><p><code>作者：lovemefan</code>  <a href="www.github.com/lovemefan">我的GitHub</a></p><blockquote><p> &#160; &#160;&#160; &#160;我现在是一名即将大三的软件的学生。对编程还谈得上热爱，但至今也只能承认懂得点皮毛。为什么我要写这个博客？根本原因还是“懒”。我需要一个能够鞭策我一直坚持下去的东西。不过我也承认有一点点装B的嫌疑。我个人性格有点不羁，不喜欢按部就班，墨守成规。总想着做点疯狂的事。兴趣与时间总是矛盾的，可是时间又是从海绵里挤出来的。想想大一大二就这样“嗖”一般的过掉了…掉了…了。东西没学到多少，时间就快没了。看到有的同学能做一个看起来就很牛逼的程序，然后讲一堆从来没听过的专业术语。“卧槽！卧槽！！！”，“厉害了，我的哥”，“哇，大神，带我飞”，像这样的话没少听。一般这种时候我都会嫉妒一下。“TM为什么我不会”，“不过，不会也正常，我TM又不是神”，“妈蛋，下次去学，嗯！一定要学会”，“好像也就这样了，先放一放吧”。大多数情况下这件事就被无限延期了。<br>  &#160; &#160;&#160; &#160;首先，我总结了一个原因——懒。这种东西确实是人类的天敌，当然不排除某些勤奋已经成了日常的hentai。我有一些类似的经历，写作业写到两三点停不下来，还像打了鸡血一样很兴奋，鬼知道发生了什么。最长的一次在图书馆呆了13多个小时，从早上8点到晚上9点半，丝毫不想走。这种接近痴狂的人生，我个人觉得还蛮不错的。但是，但是，但是我又双叒叕被懒惰打败了，一不小心就荒废了下学业。结果就是期末成绩无情的嘲讽。懒惰这东西迟早，一定，必须面对。所以我觉得有必要做些事情，比如维护这博客。<br> &#160; &#160;&#160; &#160;其次，我吐槽下大学现在这个机制不是我想要的。大学也读了一半了，大多数人是这么过的：“上课可以不听，下课我看一下就好了。”，“这题好像老师讲过，不过我忘了。”“学习，学个屁”，“这次考试考哪些重点，帮我画一下”，“最后一个礼拜复习，祈祷不挂”，“复习什么，大家一起挂”，“成绩出来了，吐血，80多”（MD，老子一巴掌。。。）。然而结果不是我所期望的。考试这种东西确实是有存在的必要，但现在的考试总感觉变了味。老师说什么会考，就考什么，可能还是去年的原题。只要刷几套往年试卷，就可以考得很好，于是更多的人在钻研怎么“考试”，而不是解决问题。两年下来，你是更擅长考试，还是更擅长你的专业知识。我非常敬佩那些不以考试为目的教学的老师。就比如说那个陈胖子（没事，他看不到），他上的Java和c语言数据结构还是很有分量的。<br> &#160; &#160;&#160; &#160;假设大学四年我都这样过的话，满足吗？能力能提高多少呢？到底能学到多少东西呢？我现在可以C，C++，C#，Java，JavaScript，Matlab，Python…写一个Hello world，这样够吗?有人会说可以了，已经很不错了。可是野心不大一点，目标不远一点，不疯狂一点还是我的风格吗？现在还不疯狂一把，以后还有机会吗？你能保证未来不会因现在后悔吗？<br>所以，我建立了在个博客，并且想维护它。我想多学点东西。现在的初心是既可以记录学习的点滴，也可以每时每刻都鞭策着我，因为每更新一次这个东西，就会得到一种“快感”，成就感。更新GitHub时也是一样。私心还是有的，当然希望被人关注了，肯定是越多越好了。</p></blockquote><h2 id="博客的内容"><a href="#博客的内容" class="headerlink" title="博客的内容"></a>博客的内容</h2><p>我尽量能写就多写，最近在知乎，CDNS，简书…中看到大量IT干货，激发了我极大的兴趣<br>所以想着现在来建立这博客也不迟，算得上是学习了一种记录和鞭策吧</p><ul><li>一些学习过程中的问题，解决思路方法。</li><li>我感兴趣的事物，可能以后会写测评。</li><li>GitHub，知乎,IT之家等 一些趣味知识。</li><li>开发UWP。我曾经是一名wper（Lumia 1020），早在很久之前就打算学习UWP了，我希望能够坚持下去，尽管可能没有太多的时间和精力。就算是龟速更新，我也不会停止学习的。<h2 id="计划列表"><a href="#计划列表" class="headerlink" title="计划列表"></a>计划列表</h2></li><li>UWP，Android，web(大三必修)</li><li>UE4(虚幻4)，unity  (项目所需和个人兴趣爱好)</li><li>学些脚本语言，待定：PowerShell，JavaScript等</li><li>待定</li></ul></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 我为什么要建立这个博客：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;建立博客的原因&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
