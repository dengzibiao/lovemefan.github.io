<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lovemefan的博客</title>
  
  <subtitle>梦里花落知多少</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="lovemefan.win/"/>
  <updated>2018-09-04T03:15:21.366Z</updated>
  <id>lovemefan.win/</id>
  
  <author>
    <name>lovemefan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python小实践   下载漫画</title>
    <link href="lovemefan.win/2018/06/12/%E7%88%AC%E5%8F%96%E5%89%8D%E5%87%86%E5%A4%87/"/>
    <id>lovemefan.win/2018/06/12/爬取前准备/</id>
    <published>2018-06-12T12:49:00.000Z</published>
    <updated>2018-09-04T03:15:21.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="爬取前准备"><a href="#爬取前准备" class="headerlink" title="爬取前准备"></a>爬取前准备</h1><p><a href="https://github.com/lovemefan/python_tools" target="_blank" rel="external">GitHub项目</a><br>目标网站:<a href="http://www.omanhua.com/comic/17521/" target="_blank" rel="external">http://www.omanhua.com/comic/17521/</a><br><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/jm0j3bkaiB.png?imageslim" alt="mark"></p><h2 id="分析网页"><a href="#分析网页" class="headerlink" title="分析网页"></a>分析网页</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"subBookList"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/comic/17521/366691/'</span> <span class="attr">title</span>=<span class="string">'332'</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">class</span>=<span class="string">'new'</span>&gt;</span>332<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/comic/17521/364901/'</span> <span class="attr">title</span>=<span class="string">'331'</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">class</span>=<span class="string">'new'</span>&gt;</span>331<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/comic/17521/364900/'</span> <span class="attr">title</span>=<span class="string">'腾讯动漫6周年福利活动！'</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">class</span>=<span class="string">'new'</span>&gt;</span>腾讯动漫6周年福利活动！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/comic/17521/364899/'</span> <span class="attr">title</span>=<span class="string">'330。他们也是我们'</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">class</span>=<span class="string">'new'</span>&gt;</span>330。他们也是我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/comic/17521/364730/'</span> <span class="attr">title</span>=<span class="string">'329'</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">class</span>=<span class="string">'new'</span>&gt;</span>329<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure><p>这里很明显 每个&amp;lta&amp;gt标签的href属性的值就是具体每一话的url<br>先点进一话的页面看看<br><a href="http://www.omanhua.com/comic/17521/366691/" target="_blank" rel="external">http://www.omanhua.com/comic/17521/366691/</a></p><h2 id="抓包分析"><a href="#抓包分析" class="headerlink" title="抓包分析"></a>抓包分析</h2><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/aJDLmKLIc8.png?imageslim" alt="mark"><br>哈哈,没错这个,这是当前显示的一张漫画.但是只有一张.再看看下一张<br><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/iij3m7cKh7.png?imageslim" alt="mark"><br>对比URL路径,我特么..,没有丝毫规律,陷入了僵局…,于是没有了后文.</p><p>我就像看个漫画嘛,要不是腾讯收费,我&amp;<em>%^</em>&amp;%.<br>但我还没有放弃,我打算看看js代码里有没有请求什么的痕迹<br>就在我垂头顿足的时候,我发现了再网页里的一段神奇的代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="xml">  var pVars = pVars || &#123;&#125;; var uzmh = uzmh || &#123;&#125;;eval(function(p,a,c,k,e,d)</span></div><div class="line">&#123;</div><div class="line">e=function(c)&#123;return(c</div><div class="line">    <span class="tag">&lt;<span class="name">a?"":e(parseInt(c</span>/<span class="attr">a</span>)))+((<span class="attr">c</span>=<span class="string">c%a)</span>&gt;</span>35?String.fromCharCode(c+29):c.toString(36))&#125;;</div><div class="line">if(!''.replace(/^/,String))&#123;while(c--)d[e(c)]=k[c]||e(c);k=[function(e)&#123;return d[e]&#125;];</div><div class="line">e=function()&#123;return'\\w+'&#125;;c=1;&#125;;</div><div class="line">while(c--)</div><div class="line">if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);</div><div class="line">return p;</div><div class="line">&#125;('h i=&#123;"g":1,"e":"4","f":"1.0","m":"/n/1/2/l.j","k":2,"6":"3","7":["8.0","c.0","5.0","b.0","9.0","a.0","d.0","o.0","D.0","E.0","C.0","A.0","B.0","I.0","J.0","H.0","F.0","G.0","z.0","s.0","t.0","r.0"],"p":q,"x":y,"w":"/u/v/4/3/"&#125;||&#123;&#125;;</div><div class="line">',46,46,'jpg|17521|366691|332|一人之下|388594b38e|cname|files|38ba1443ba|38f89724c3|381bce4fb2|3886aef5b2|38b823d13d|3857d21ce5|bname|bpic|bid|var|cInfo|html|cid|index|burl|comic|38779d6852|finished|false|3971856aff|399a8af80e|39cc4b3915|tu|undefined|path|len|22|39f92a9dae|387ed1275c|38e5f2512a|385573db27|387ab75347|3866af1df0|38d7d1fc53|382c0123f1|386a165c3e|3859ad824b|38e85b3b5a'.split('|'),0,&#123;&#125;))</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="小有成就"><a href="#小有成就" class="headerlink" title="小有成就"></a>小有成就</h2><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/G5L5cHjgFf.png?imageslim" alt="mark"><br>通过一比对<br>哇!!!我抑制不住内心的激动,这不就是图片名吗?<br>以上代码为例,包含了漫画编号(17521),漫画集数编号(36691),漫画集数(332),漫画名(一人之下),当前集的漫画图片数(len=22),以及每张图片的文件名(比如38ba1443ba.jpg)<br>大功告成!!!</p><h1 id="爬取图片"><a href="#爬取图片" class="headerlink" title="爬取图片"></a>爬取图片</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>有之前准备已经可以再页面上得到每一话的URL,每一话中的图片URL,剩下的就是对页面里的数据提取,分别下载了</p><h2 id="python-代码"><a href="#python-代码" class="headerlink" title="python 代码"></a>python 代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- codeing: utf-8 -*-</span></div><div class="line"><span class="comment"># @Time:2018/3/13 22:20</span></div><div class="line"><span class="comment"># @Author:lovemefan</span></div><div class="line"><span class="comment"># @File:一人之下漫画爬虫.py</span></div><div class="line"><span class="comment"># @Software:PyCharm</span></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> imp <span class="keyword">import</span> reload</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> requests</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"></div><div class="line">requestSession = requests.session()</div><div class="line"><span class="comment"># 保存一张图片</span></div><div class="line"><span class="comment"># 输入参数imgUrl 图片路径,imgPath 保存路径</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">savePicture</span><span class="params">(imgUrl, imgPath)</span>:</span></div><div class="line">    response = requests.get(imgUrl)</div><div class="line">    codimg = response.content</div><div class="line">    fn = open(imgPath, <span class="string">'wb'</span>)</div><div class="line">    fn.write(codimg)</div><div class="line">    fn.close()</div><div class="line"></div><div class="line"><span class="comment"># 一人之下的漫画路径</span></div><div class="line">url = <span class="string">"http://www.omanhua.com/comic/17521/"</span></div><div class="line">html = requests.get(url)</div><div class="line">html.encoding = <span class="string">'UTF-8'</span></div><div class="line"><span class="comment"># print(html.text)</span></div><div class="line"><span class="comment"># 先获取每一话</span></div><div class="line"><span class="comment"># 先将数据块取出</span></div><div class="line">bookListBlock = re.findall(<span class="string">r'&lt;div class="subBookList"&gt;(.*?)&lt;/div&gt;&lt;/div&gt;'</span>, html.text, re.S)</div><div class="line"><span class="comment"># booklist 为每一话的URL的列表</span></div><div class="line">bookList = re.findall(<span class="string">"&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='(.*?)' title='(.*?)'"</span>, bookListBlock[<span class="number">0</span>],re.S)</div><div class="line"></div><div class="line"><span class="comment"># 逐话操作</span></div><div class="line"><span class="keyword">for</span> index <span class="keyword">in</span> bookList:</div><div class="line">    indexUrl = <span class="string">"http://www.omanhua.com/"</span>+index[<span class="number">0</span>]+<span class="string">'index.html'</span></div><div class="line">    indexHtml = requests.get(indexUrl)</div><div class="line">    indexHtml.encoding = <span class="string">'UTF-8'</span></div><div class="line">    print(indexHtml.url)</div><div class="line">    <span class="comment"># 获得当前话的每张图片路径</span></div><div class="line">    picList = re.findall(<span class="string">"一人之下\|(.*?)'\."</span>, indexHtml.text)[<span class="number">0</span>].split(<span class="string">'|'</span>)</div><div class="line">    <span class="comment">#删去piclist无用的信息</span></div><div class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> picList[:]:</div><div class="line">        <span class="keyword">if</span> item.__len__() != <span class="number">10</span>:</div><div class="line">            picList.remove(item)</div><div class="line"></div><div class="line">    print(index[<span class="number">1</span>]+<span class="string">'共有%d页'</span>%picList.__len__())</div><div class="line">    picUrlRoot = <span class="string">u'http://pic.fxdm.cc/tu/undefined/一人之下/'</span></div><div class="line">    <span class="comment"># 指定存储位置</span></div><div class="line">    location = <span class="string">"J:/一人之下"</span></div><div class="line">    <span class="comment"># 分开放图片</span></div><div class="line">    <span class="comment"># for page in range(len(picList)):</span></div><div class="line">    <span class="comment">#     if not os.path.exists("%s/%s/"%(location,index[1])):</span></div><div class="line">    <span class="comment">#         os.makedirs("%s/%s/"%(location,index[1]))</span></div><div class="line">    <span class="comment">#     picUrl = picUrlRoot+ index[1]+'/'+picList[page]+'.jpg'</span></div><div class="line">    <span class="comment">#     path = "%s/%s/%d.jpg"%(location,index[1],page)</span></div><div class="line">    <span class="comment">#     picUrl.encode('UTF-8')</span></div><div class="line">    <span class="comment">#     #不下载已经下载过的图片,便于更新</span></div><div class="line">    <span class="comment">#     if not os.path.exists(path):</span></div><div class="line">    <span class="comment">#         savePicture(picUrl,path)</span></div><div class="line">    <span class="comment">#         print(picUrl + ' 保存到了 ' + path)</span></div><div class="line">    <span class="comment">#</span></div><div class="line"></div><div class="line">    <span class="comment"># 一起放图片</span></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(location):</div><div class="line">        os.makedirs(location)</div><div class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(len(picList)):</div><div class="line">        picUrl = picUrlRoot+ index[<span class="number">1</span>]+<span class="string">'/'</span>+picList[page]+<span class="string">'.jpg'</span></div><div class="line">        path = <span class="string">"%s/%s_%d.jpg"</span>%(location,index[<span class="number">1</span>],page)</div><div class="line">        picUrl.encode(<span class="string">'UTF-8'</span>)</div><div class="line">        <span class="comment"># 不下载已经下载过的图片,便于更新</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</div><div class="line">            savePicture(picUrl,path)</div><div class="line">            print(picUrl + <span class="string">' 保存到了 '</span> + path)</div></pre></td></tr></table></figure><p>如果想要图片分开放,取消掉注释的代码,注释掉后面一段代码</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/idJgkeGKgi.png?imageslim" alt="mark"></p><h3 id="分开放"><a href="#分开放" class="headerlink" title="分开放"></a>分开放</h3><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/8iDf2611JC.png?imageslim" alt="mark"></p><h3 id="一起放"><a href="#一起放" class="headerlink" title="一起放"></a>一起放</h3><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180612/J4gh2Gb514.png?imageslim" alt="mark"></p><p>我要去看漫画了,不要打扰我(/≧▽≦)/~┴┴ </p><h2 id="源码在这"><a href="#源码在这" class="headerlink" title="源码在这"></a><a href="https://github.com/lovemefan/python_tools/blob/master/%E6%BC%AB%E7%94%BB/%E4%B8%80%E4%BA%BA%E4%B9%8B%E4%B8%8B%E6%BC%AB%E7%94%BB%E7%88%AC%E8%99%AB.py" target="_blank" rel="external"><code>源码在这</code></a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;爬取前准备&quot;&gt;&lt;a href=&quot;#爬取前准备&quot; class=&quot;headerlink&quot; title=&quot;爬取前准备&quot;&gt;&lt;/a&gt;爬取前准备&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lovemefan/python_tools&quot; target
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Python小实践   微博爬虫</title>
    <link href="lovemefan.win/2018/05/28/%E6%8A%93%E5%8F%96%E5%A5%B3%E7%A5%9E%E5%BE%AE%E5%8D%9A%E5%8A%A8%E6%80%81%E5%B9%B6%E4%BF%9D%E5%AD%98%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>lovemefan.win/2018/05/28/抓取女神微博动态并保存到数据库/</id>
    <published>2018-05-28T10:25:00.000Z</published>
    <updated>2018-09-04T02:39:21.263Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抓取女神微博动态并保存到数据库"><a href="#抓取女神微博动态并保存到数据库" class="headerlink" title="抓取女神微博动态并保存到数据库"></a>抓取女神微博动态并保存到数据库</h1><p>偶少有刷微博,常常错过女神的动态.微博客户端也常常不给我推送动态,于是我想自己给自己推送,而且还想把数据保存到自己的数据库里,于是有了接下来的尝试</p><h2 id="使用chrome浏览器抓包"><a href="#使用chrome浏览器抓包" class="headerlink" title="使用chrome浏览器抓包"></a>使用chrome浏览器抓包</h2><p>这里随便用什么软件都可以,目的只是抓包.本人使用chrome抓包<br>按下F12,查看这两个getindex的数据包<br>需要获得两个参数<code>uid</code>和<code>containerid</code><br><img src="http://oskhhyaq3.bkt.clouddn.com/img/180528/7HhB9BliF2.png?imageslim" alt="mark"><br>这里需要通过手机版weibo <a href="http://m.weibo.com来进行模拟请求，不是通过分析html代码再通过筛选来完成数据抓取。" target="_blank" rel="external">http://m.weibo.com来进行模拟请求，不是通过分析html代码再通过筛选来完成数据抓取。</a><br>笔者先用postmen软件模拟一次post请求,返回结果如下<br><img src="http://oskhhyaq3.bkt.clouddn.com/img/180528/8c54K4H2E1.png?imageslim" alt="mark"><br>返回的是json数据,接下来就是处理数据了</p><h2 id="模拟请求"><a href="#模拟请求" class="headerlink" title="模拟请求"></a>模拟请求</h2><p>以下是python模拟的post请求<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line">cursor = db.cursor()</div><div class="line">url=<span class="string">"https://m.weibo.cn/api/container/getIndex"</span></div><div class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">    <span class="comment"># 用户的uid,containerid,以及页数.每页最多为十条记录</span></div><div class="line">    payload=&#123;<span class="string">'type'</span>:<span class="string">'uid'</span>,<span class="string">'value'</span>:<span class="string">'56xxxxxx00'</span>,<span class="string">'containerid'</span>:<span class="string">'1076xxxxxxxx5400'</span>,<span class="string">'page'</span>: <span class="string">'%d'</span>%page&#125;</div><div class="line">    r=requests.post(url,data=payload)</div><div class="line">    raw_text=r.text</div><div class="line">    d=json.loads(raw_text)</div><div class="line">``` </div><div class="line">由于每页只有最新的十条记录,所以需要把每一页的数据都存起来</div><div class="line"></div><div class="line"><span class="comment">## 数据库建表</span></div><div class="line">笔者选择了一些基本信息存储,并没有保存评论信息.其中包括</div><div class="line">* itemid 每条微博的ID</div><div class="line">* scheme 每条微博的跳转链接(方便查看)</div><div class="line">* id 也是用于表示每条微博的ID,具体与itemid的区别笔者未深究</div><div class="line">* created_at 发微博的时间,精确到天</div><div class="line">* text 微博内容</div><div class="line">* source 微博来源,比如手机型号</div><div class="line">* user_id 发微博的用户ID </div><div class="line">``` sql</div><div class="line">SET FOREIGN_KEY_CHECKS=<span class="number">0</span>;</div><div class="line"></div><div class="line">-- ----------------------------</div><div class="line">-- Table structure <span class="keyword">for</span> mblog</div><div class="line">-- ----------------------------</div><div class="line">DROP TABLE IF EXISTS `mblog`;</div><div class="line">CREATE TABLE `mblog` (</div><div class="line">  `itemid` varchar(<span class="number">40</span>) NOT NULL,</div><div class="line">  `scheme` varchar(<span class="number">100</span>) DEFAULT NULL,</div><div class="line">  `id` varchar(<span class="number">20</span>) DEFAULT NULL,</div><div class="line">  `created_at` varchar(<span class="number">10</span>) DEFAULT NULL,</div><div class="line">  `text` text,</div><div class="line">  `source` varchar(<span class="number">20</span>) DEFAULT NULL,</div><div class="line">  `user_id` varchar(<span class="number">20</span>) DEFAULT NULL,</div><div class="line">  PRIMARY KEY (`itemid`)</div><div class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</div></pre></td></tr></table></figure></p><h2 id="分析数据并插入表中"><a href="#分析数据并插入表中" class="headerlink" title="分析数据并插入表中"></a>分析数据并插入表中</h2><p>这里直接贴代码了,代码有详细注释<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- codeing: utf-8 -*-</span></div><div class="line"><span class="comment"># @Time:2018/5/28 14:31</span></div><div class="line"><span class="comment"># @Author:lovemefan</span></div><div class="line"><span class="comment"># @File:抓取女神微博动态保存到数据库.py</span></div><div class="line"><span class="comment"># @Software:PyCharm</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#原始URL:https://m.weibo.cn/p/100xxxxxxxx15400</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"><span class="comment"># 打开数据库连接</span></div><div class="line">db = pymysql.connect(<span class="string">"localhost"</span>, <span class="string">"账号"</span>, <span class="string">"密码"</span>, <span class="string">"数据库名"</span>, charset=<span class="string">'utf8'</span>)</div><div class="line"><span class="comment"># 使用cursor()方法获取操作游标</span></div><div class="line">cursor = db.cursor()</div><div class="line">url=<span class="string">"https://m.weibo.cn/api/container/getIndex"</span></div><div class="line">page = <span class="number">1</span></div><div class="line">sum = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">35</span>):</div><div class="line">    <span class="comment"># 用户的uid,containerid,以及页数.每页最多为十条记录</span></div><div class="line">    payload=&#123;<span class="string">'type'</span>:<span class="string">'uid'</span>,<span class="string">'value'</span>:<span class="string">'56xxxxxx00'</span>,<span class="string">'containerid'</span>:<span class="string">'10760xxxxxxxx400'</span>,<span class="string">'page'</span>: <span class="string">'%d'</span>%page&#125;</div><div class="line">    r=requests.post(url,data=payload)</div><div class="line">    raw_text=r.text</div><div class="line">    d=json.loads(raw_text)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">            print(<span class="string">"第%d页第%d条"</span>% (page,i))</div><div class="line">            print(d[<span class="string">"data"</span>][<span class="string">"cards"</span>])</div><div class="line">            itemid = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"itemid"</span>])</div><div class="line">            scheme = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"scheme"</span>])</div><div class="line">            id = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"mblog"</span>][<span class="string">"id"</span>])</div><div class="line">            create_at = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"mblog"</span>][<span class="string">"created_at"</span>])</div><div class="line">            <span class="comment">#将内容中的单引号换成双引号,否则插入数据库中会报错</span></div><div class="line">            text = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"mblog"</span>][<span class="string">"text"</span>]).replace(<span class="string">"'"</span>,<span class="string">"\""</span>)</div><div class="line">            source = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"mblog"</span>][<span class="string">"source"</span>])</div><div class="line">            user_id = str(d[<span class="string">"data"</span>][<span class="string">"cards"</span>][i][<span class="string">"mblog"</span>][<span class="string">"user"</span>][<span class="string">"id"</span>])</div><div class="line">            <span class="comment"># sql插入语句</span></div><div class="line">            sql = <span class="string">"insert ignore into mblog(itemid,scheme,id,created_at,text,source,user_id) VALUES('%s','%s','%s','%s','%s','%s','%s')"</span> % (itemid,scheme,id,create_at,text,source,user_id)</div><div class="line">            print(sql)</div><div class="line">            <span class="comment"># 执行sql语句</span></div><div class="line">            cursor.execute(sql)</div><div class="line">            <span class="comment"># 执行sql语句</span></div><div class="line">            db.commit()</div><div class="line">            sum = sum + <span class="number">1</span></div><div class="line">    <span class="keyword">except</span> IndexError:</div><div class="line">        <span class="comment"># 但记录不满10条的时候,捕获list越界异常,自动跳过</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line">    page = page + <span class="number">1</span></div><div class="line">    print(<span class="string">"第%d页执行成功"</span>%page)</div><div class="line">        <span class="comment"># print(["text"])</span></div><div class="line">db.close()</div><div class="line">print(<span class="string">"一共插入了%d的条记录"</span>% sum)</div></pre></td></tr></table></figure></p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="http://oskhhyaq3.bkt.clouddn.com/img/180528/ICjHHa2I31.png?imageslim" alt="mark"><br>保存成功,然后就可以去翻数据库里的数据了.</p><h2 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h2><ul><li>只能一次性的保存至今的记录,后续添加监听并邮箱推送</li><li>后续可以添加数据分析,关键子词云</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;抓取女神微博动态并保存到数据库&quot;&gt;&lt;a href=&quot;#抓取女神微博动态并保存到数据库&quot; class=&quot;headerlink&quot; title=&quot;抓取女神微博动态并保存到数据库&quot;&gt;&lt;/a&gt;抓取女神微博动态并保存到数据库&lt;/h1&gt;&lt;p&gt;偶少有刷微博,常常错过女神的动态.微
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Android学习笔记 (三)   MP3播放器</title>
    <link href="lovemefan.win/2017/11/12/MP3%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <id>lovemefan.win/2017/11/12/MP3播放器/</id>
    <published>2017-11-12T05:58:00.000Z</published>
    <updated>2017-11-16T04:59:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Android学习笔记 (三)   MP3播放器：</strong> <excerpt in="" index="" |="" 首页摘要=""><br> 利用Intent 唤醒其他Activity或其他APP<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="MP3播放器"><a href="#MP3播放器" class="headerlink" title="MP3播放器"></a>MP3播放器</h1><p>整个音乐播放器设计模仿网易云音乐风格<br>工程源代码已上传至Github: <a href="https://github.com/lovemefan/MP3Player" target="_blank" rel="external">源码下载</a></p><p><strong>实现的功能</strong>:</p><ul><li><strong>1.</strong>暂停,开始音乐,后台播放</li><li><strong>2.</strong>进度条可拖动,能实现音乐跳转</li><li><strong>3.</strong>能够循环切换上一曲和下一曲</li><li><strong>4.</strong>播放完毕后自动下一曲</li><li><strong>5.</strong>歌曲封面有旋转的动画</li><li><strong>6.</strong>背景图片毛玻璃美化</li></ul><p><strong>待实现的功能</strong></p><ul><li>音乐列表</li><li>本地音乐读取播放</li><li>网络音乐播放</li></ul><h2 id="Music-java设计"><a href="#Music-java设计" class="headerlink" title="Music.java设计"></a>Music.java设计</h2><p>要播放多首音乐,首先设计一个音乐类用于存放歌曲信息,如歌曲名,封面图片的ID,音乐文件的ID<br><code>Music.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.lovemefan.mp3player;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.os.Parcel;</div><div class="line"><span class="keyword">import</span> android.os.Parcelable;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by Lovemefan on 2017/11/7.</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Music</span> <span class="keyword">implements</span> <span class="title">Parcelable</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> String name;<span class="comment">//歌曲名</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> coverId;<span class="comment">//封面的ID</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> resourceId;<span class="comment">//资源路径ID</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Music</span><span class="params">(String name, <span class="keyword">int</span> coverId, <span class="keyword">int</span> resourceId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">        <span class="keyword">this</span>.coverId = coverId;</div><div class="line">        <span class="keyword">this</span>.resourceId = resourceId;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCoverId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> coverId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCoverId</span><span class="params">(<span class="keyword">int</span> coverId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.coverId = coverId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getResourceId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> resourceId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResourceId</span><span class="params">(<span class="keyword">int</span> resourceId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.resourceId = resourceId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="comment">//    实现接口Parcelable需要重写下面两个方法</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel parcel, <span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line">        parcel.writeString(getName());</div><div class="line">        Bundle bundle = <span class="keyword">new</span> Bundle();</div><div class="line">        bundle.putInt(<span class="string">"coverId"</span>,getCoverId());</div><div class="line">        bundle.putInt(<span class="string">"resourceId"</span>,getResourceId());</div><div class="line">        parcel.writeBundle(bundle);</div><div class="line">    &#125;<span class="comment">//将成员变量一一写入Parcel中</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Creator&lt;Music&gt; CREATOR = <span class="keyword">new</span> Creator&lt;Music&gt;() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> Music <span class="title">createFromParcel</span><span class="params">(Parcel parcel)</span> </span>&#123;</div><div class="line">            Bundle bundle = parcel.readBundle();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Music(parcel.readString(), bundle.getInt(<span class="string">"coverId"</span>), bundle.getInt(<span class="string">"resourceId"</span>));</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="keyword">public</span> Music[] newArray(<span class="keyword">int</span> i) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Music[i];</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="后台服务类"><a href="#后台服务类" class="headerlink" title="后台服务类"></a>后台服务类</h2><p>为了让音乐能够在app后台运行,就要设计一个Service.<br><code>MusicPlayService.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.lovemefan.mp3player;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.Service;</div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.media.MediaPlayer;</div><div class="line"><span class="keyword">import</span> android.os.Binder;</div><div class="line"><span class="keyword">import</span> android.os.IBinder;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MusicPlayService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayer = <span class="keyword">null</span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MusicPlayService</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span></span>&#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> MediaPlayer <span class="title">getMediaPlayer</span><span class="params">()</span></span>&#123;</div><div class="line">            <span class="keyword">return</span> mediaPlayer;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyBinder();</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">        mediaPlayer = MediaPlayer.create(<span class="keyword">this</span>,R.raw.aimer_ninelie);<span class="comment">//设置初始值</span></div><div class="line"><span class="comment">//        mediaPlayer.start();</span></div><div class="line">        <span class="keyword">super</span>.onCreate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><p>由MainActivity绑定MusicPlayService服务,让音乐在服务中运行.另外还要创建一个线程来更新进度条和当前时间.<br><code>MainActivity.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.lovemefan.mp3player;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.ComponentName;</div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.content.ServiceConnection;</div><div class="line"><span class="keyword">import</span> android.content.res.AssetFileDescriptor;</div><div class="line"><span class="keyword">import</span> android.content.res.Resources;</div><div class="line"><span class="keyword">import</span> android.graphics.Bitmap;</div><div class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</div><div class="line"><span class="keyword">import</span> android.graphics.drawable.BitmapDrawable;</div><div class="line"><span class="keyword">import</span> android.media.AudioAttributes;</div><div class="line"><span class="keyword">import</span> android.media.MediaPlayer;</div><div class="line"><span class="keyword">import</span> android.os.Build;</div><div class="line"><span class="keyword">import</span> android.os.Handler;</div><div class="line"><span class="keyword">import</span> android.os.IBinder;</div><div class="line"><span class="keyword">import</span> android.os.Message;</div><div class="line"><span class="keyword">import</span> android.support.annotation.RequiresApi;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.view.Window;</div><div class="line"><span class="keyword">import</span> android.view.WindowManager;</div><div class="line"><span class="keyword">import</span> android.view.animation.Animation;</div><div class="line"><span class="keyword">import</span> android.view.animation.AnimationUtils;</div><div class="line"><span class="keyword">import</span> android.view.animation.LinearInterpolator;</div><div class="line"><span class="keyword">import</span> android.view.animation.RotateAnimation;</div><div class="line"><span class="keyword">import</span> android.widget.ImageView;</div><div class="line"><span class="keyword">import</span> android.widget.LinearLayout;</div><div class="line"><span class="keyword">import</span> android.widget.ProgressBar;</div><div class="line"><span class="keyword">import</span> android.widget.SeekBar;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">ServiceConnection</span> </span>&#123;</div><div class="line">    ArrayList&lt;Music&gt; musics = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    MediaPlayer mediaPlayer;<span class="comment">//媒体播放器</span></div><div class="line">    ImageView playButton;<span class="comment">//播放按钮</span></div><div class="line">    SeekBar progressBar ;<span class="comment">//进度条</span></div><div class="line">    TextView title;<span class="comment">//标题,用于显示歌名</span></div><div class="line">    TextView currentTime;<span class="comment">//显示当前播放的时间</span></div><div class="line">    TextView duration;<span class="comment">//显示歌曲时长</span></div><div class="line">    Handler handler ;<span class="comment">//用于其他线程更新</span></div><div class="line">    CircleImageView cover;<span class="comment">//显示歌曲的封面</span></div><div class="line">    LinearLayout root;<span class="comment">//根面板</span></div><div class="line">    <span class="keyword">int</span> musicProcess=<span class="number">0</span>;<span class="comment">//歌曲的进度;</span></div><div class="line">    <span class="keyword">int</span> musicCurIndex = <span class="number">0</span>;<span class="comment">//当前播放的歌曲的下标</span></div><div class="line">    Animation rotateAnimation ;</div><div class="line"></div><div class="line">    <span class="comment">//用于handle的handleMessage处理不同的事件</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UpdateCurrentTime=<span class="number">0</span>;<span class="comment">//刷新当前播放时间标识符</span></div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.LOLLIPOP)</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        supportRequestWindowFeature(Window.FEATURE_NO_TITLE);;<span class="comment">//去掉标题栏</span></div><div class="line">        <span class="keyword">this</span>.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);<span class="comment">//去掉信息栏</span></div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        activityInit();<span class="comment">//相关控件初始化</span></div><div class="line">        bindService(<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,MusicPlayService.class), MainActivity.<span class="keyword">this</span>, Context.BIND_AUTO_CREATE);<span class="comment">//绑定服务</span></div><div class="line"></div><div class="line">        musics.add(<span class="keyword">new</span> Music(<span class="string">"ninelie"</span>,R.drawable.nineliecover,R.raw.aimer_ninelie));</div><div class="line">        musics.add(<span class="keyword">new</span> Music(<span class="string">"像风一样"</span>,R.drawable.linkwinds,R.raw.like_winds));</div><div class="line">        musics.add(<span class="keyword">new</span> Music(<span class="string">"Let It Out"</span>,R.drawable.let_it_out,R.raw.let_it_out));</div><div class="line">        refreshMusicInfo(musics.get(<span class="number">0</span>));</div><div class="line">        <span class="comment">//</span></div><div class="line">        progressBar.setOnSeekBarChangeListener(<span class="keyword">new</span> SeekBar.OnSeekBarChangeListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgressChanged</span><span class="params">(SeekBar seekBar, <span class="keyword">int</span> i, <span class="keyword">boolean</span> b)</span> </span>&#123;</div><div class="line">                musicProcess = i;</div><div class="line">                <span class="comment">//自动播放下一曲</span></div><div class="line">                <span class="keyword">if</span>(mediaPlayer.getDuration() - musicProcess &lt; <span class="number">500</span>)&#123;</div><div class="line">                    musicCurIndex = (musicCurIndex + <span class="number">1</span>) % musics.size();</div><div class="line">                    refreshMusicInfo(musics.get(musicCurIndex));</div><div class="line">                    play();<span class="comment">//播放音乐</span></div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStopTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</div><div class="line">                mediaPlayer.seekTo(musicProcess);<span class="comment">//跳转到</span></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        handler = <span class="keyword">new</span> Handler(<span class="keyword">new</span> Handler.Callback()&#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">handleMessage</span><span class="params">(Message message)</span> </span>&#123;</div><div class="line">            <span class="keyword">switch</span> (message.what)&#123;</div><div class="line">                <span class="keyword">case</span> UpdateCurrentTime:currentTime.setText(secondsToMinutes(mediaPlayer.getCurrentPosition()));<span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        &#125;);</div><div class="line">        findViewById(R.id.playButton).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">                play();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">activityInit</span><span class="params">()</span></span>&#123;</div><div class="line">        playButton = (ImageView) findViewById(R.id.playButton);</div><div class="line">        progressBar = ( SeekBar) <span class="keyword">this</span>.findViewById(R.id.progressBar);</div><div class="line">        currentTime = (TextView) findViewById(R.id.curTime);</div><div class="line">        duration = (TextView) findViewById(R.id.duration);</div><div class="line">        title = (TextView) findViewById(R.id.musicName);</div><div class="line">        cover = (CircleImageView) findViewById(R.id.musicCover);</div><div class="line">        root = (LinearLayout) findViewById(R.id.root);</div><div class="line">        rotateAnimation =  AnimationUtils.loadAnimation(<span class="keyword">this</span>,R.anim.rotation);</div><div class="line">        rotateAnimation.setFillEnabled(<span class="keyword">true</span>);</div><div class="line">        rotateAnimation.setFillAfter(<span class="keyword">true</span>);</div><div class="line">        rotateAnimation.setInterpolator(<span class="keyword">new</span> LinearInterpolator());</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">        unbindService(MainActivity.<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"绑定成功"</span>);</div><div class="line">        mediaPlayer = ((MusicPlayService.MyBinder)iBinder).getMediaPlayer();</div><div class="line">        progressBar.setMax(mediaPlayer.getDuration());<span class="comment">//设置进度条</span></div><div class="line">        duration.setText(<span class="string">""</span>+secondsToMinutes(mediaPlayer.getDuration()));</div><div class="line">        currentTime.setText(<span class="string">"00:00"</span>);</div><div class="line">        System.out.println(mediaPlayer.getDuration());</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">secondsToMinutes</span><span class="params">(<span class="keyword">int</span> seconds)</span></span>&#123;</div><div class="line">        <span class="keyword">int</span> minute = seconds/<span class="number">60000</span>;</div><div class="line">        <span class="keyword">int</span> second = (seconds/<span class="number">1000</span>)%<span class="number">60</span>;</div><div class="line">        String  m = <span class="string">""</span>+ minute;</div><div class="line">        String  s = <span class="string">""</span> + second;</div><div class="line">        <span class="keyword">if</span> (minute&lt;<span class="number">10</span>)&#123;</div><div class="line">            m = <span class="string">"0"</span> + minute;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(second&lt;<span class="number">10</span>)&#123;</div><div class="line">           s = <span class="string">"0"</span> + second;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> m + <span class="string">":"</span> + s;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(mediaPlayer == <span class="keyword">null</span> )&#123;</div><div class="line">            System.out.println(<span class="string">"mediaplayer初始化失败"</span>);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">if</span>(mediaPlayer.isPlaying())&#123;</div><div class="line">                mediaPlayer.pause();</div><div class="line">                cover.clearAnimation();</div><div class="line">                playButton.setImageResource(R.drawable.play);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                mediaPlayer.start();</div><div class="line"></div><div class="line">                cover.startAnimation(rotateAnimation);</div><div class="line">                playButton.setImageResource(R.drawable.pause);</div><div class="line">            &#125;</div><div class="line">            System.out.println(mediaPlayer.isPlaying());</div><div class="line">            <span class="keyword">new</span> MyThread().start();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.LOLLIPOP)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refreshMusicInfo</span><span class="params">(Music curMusic)</span></span>&#123;</div><div class="line">        title.setText(curMusic.getName());<span class="comment">//设置歌曲名</span></div><div class="line">        <span class="comment">//        获取需要被模糊的原图bitmap</span></div><div class="line">        Resources res = getResources();</div><div class="line">        Bitmap scaledBitmap = BitmapFactory.decodeResource(res, curMusic.getCoverId());</div><div class="line">        <span class="comment">//        scaledBitmap为目标图像，25是缩放的倍数（越大模糊效果越高）</span></div><div class="line">        Bitmap blurBitmap = BlurImage.toBlur(scaledBitmap, <span class="number">50</span>);</div><div class="line">        root.setBackground(<span class="keyword">new</span> BitmapDrawable(blurBitmap));<span class="comment">//设置根面板背景</span></div><div class="line">        cover.setImageResource(curMusic.getCoverId());<span class="comment">//设置封面</span></div><div class="line">        <span class="keyword">if</span>(mediaPlayer == <span class="keyword">null</span>)&#123;</div><div class="line">            System.out.println(<span class="string">"mediaplayer初始化失败"</span>);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                AssetFileDescriptor afd = <span class="keyword">this</span>.getResources().openRawResourceFd(curMusic.getResourceId());</div><div class="line">                <span class="keyword">if</span> (afd == <span class="keyword">null</span>) &#123;</div><div class="line">                    Toast.makeText(<span class="keyword">this</span>,<span class="string">"音乐打开失败"</span>,Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;<span class="keyword">else</span>&#123;</div><div class="line">                    mediaPlayer.stop();</div><div class="line">                    <span class="keyword">final</span> AudioAttributes aa = <span class="keyword">new</span> AudioAttributes.Builder().build();</div><div class="line">                    mediaPlayer.setAudioAttributes(aa);</div><div class="line">                    mediaPlayer.setAudioSessionId(mediaPlayer.getAudioSessionId() + <span class="number">1</span>);</div><div class="line">                    mediaPlayer.setDataSource(afd.getFileDescriptor(), afd.getStartOffset(), afd.getLength());<span class="comment">//设置音乐源</span></div><div class="line">                    afd.close();<span class="comment">//关闭文件</span></div><div class="line">                    mediaPlayer.prepare();<span class="comment">//音乐准备</span></div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                Toast.makeText(<span class="keyword">this</span>,<span class="string">"音乐播放失败"</span>,Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">                currentTime.setText(<span class="string">"00:00"</span>);<span class="comment">//设置开始时间</span></div><div class="line">                duration.setText(secondsToMinutes(mediaPlayer.getDuration()));<span class="comment">//获取音乐时长,并设置时间</span></div><div class="line">                progressBar.setProgress(<span class="number">0</span>);<span class="comment">//将播放进度条清零</span></div><div class="line">                playButton.setImageResource(R.drawable.play);<span class="comment">//重新将按钮设置为播放</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.LOLLIPOP)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">previouMusic</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="comment">//可实现循环切换</span></div><div class="line">        musicCurIndex = (musicCurIndex + musics.size() -<span class="number">1</span>) % musics.size() ;<span class="comment">//加上music.size()防止出现负数</span></div><div class="line">        refreshMusicInfo(musics.get(musicCurIndex));</div><div class="line">        play();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.LOLLIPOP)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">nextMusic</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="comment">//可实现循环切换</span></div><div class="line">        musicCurIndex = (musicCurIndex + <span class="number">1</span>) % musics.size();</div><div class="line">        refreshMusicInfo(musics.get(musicCurIndex));</div><div class="line">        play();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</div><div class="line">        <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</div><div class="line">            <span class="keyword">while</span>(mediaPlayer.isPlaying())&#123;</div><div class="line">                progressBar.setMax(mediaPlayer.getDuration());</div><div class="line">                progressBar.setProgress(mediaPlayer.getCurrentPosition());</div><div class="line">                handler.sendMessage(Message.obtain());</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    Thread.sleep(<span class="number">1000</span>);</div><div class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                    <span class="comment">// TODO Auto-generated catch block</span></div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="界面设计"><a href="#界面设计" class="headerlink" title="界面设计"></a>界面设计</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.lovemefan.mp3player.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/root"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"fill_parent"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">        &gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">            <span class="attr">android:alpha</span>=<span class="string">"0.4"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#3c3c3c"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/musicName"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">                <span class="attr">android:textAlignment</span>=<span class="string">"center"</span></div><div class="line">                <span class="attr">android:textColorHighlight</span>=<span class="string">"@color/colorAccent"</span></div><div class="line">                <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></div><div class="line">                <span class="attr">android:textColor</span>=<span class="string">"#fff"</span></div><div class="line">                <span class="attr">android:textSize</span>=<span class="string">"18pt"</span> /&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/centerArea"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"7.5"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"fill_parent"</span></div><div class="line">                <span class="attr">android:layout_marginBottom</span>=<span class="string">"20dp"</span>&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                    <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></div><div class="line">                    <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></div><div class="line">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></div><div class="line">                    <span class="attr">android:src</span>=<span class="string">"@drawable/record"</span> /&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">com.lovemefan.mp3player.CircleImageView</span> <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/musicCover"</span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"225dp"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"225dp"</span></div><div class="line">                    <span class="attr">android:src</span>=<span class="string">"@drawable/nineliecover"</span></div><div class="line">                    <span class="attr">app:civ_border_color</span>=<span class="string">"#3c3c3c"</span></div><div class="line">                    <span class="attr">app:civ_border_width</span>=<span class="string">"2dp"</span></div><div class="line">                    <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></div><div class="line">                    <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></div><div class="line">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></div><div class="line">                    /&gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"20dp"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"-20dp"</span></div><div class="line">                <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/curTime"</span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"0pt"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                    <span class="attr">android:textAlignment</span>=<span class="string">"center"</span></div><div class="line">                    <span class="attr">android:layout_weight</span>=<span class="string">"1.2"</span> /&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">SeekBar</span></span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/progressBar"</span></div><div class="line">                    <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyleHorizontal"</span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                    <span class="attr">android:layout_weight</span>=<span class="string">"7.6"</span> /&gt;</div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                    <span class="attr">android:id</span>=<span class="string">"@+id/duration"</span></div><div class="line">                    <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">                    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                    <span class="attr">android:layout_weight</span>=<span class="string">"1.2"</span> /&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/playBar"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"1.5"</span></div><div class="line">            <span class="attr">android:alpha</span>=<span class="string">"0.4"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#3c3c3c"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/previouButton"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">                <span class="attr">android:layout_weight</span>=<span class="string">"2"</span></div><div class="line">                <span class="attr">android:onClick</span>=<span class="string">"previouMusic"</span></div><div class="line">                <span class="attr">app:srcCompat</span>=<span class="string">"@drawable/previous"</span> /&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/playButton"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">                <span class="attr">android:layout_weight</span>=<span class="string">"2"</span></div><div class="line">                <span class="attr">app:srcCompat</span>=<span class="string">"@drawable/play"</span> /&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/nextButton"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">                <span class="attr">android:layout_weight</span>=<span class="string">"2"</span></div><div class="line">                <span class="attr">android:onClick</span>=<span class="string">"nextMusic"</span></div><div class="line">                <span class="attr">app:srcCompat</span>=<span class="string">"@drawable/next"</span> /&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="界面效果"><a href="#界面效果" class="headerlink" title="界面效果"></a>界面效果</h2><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171116/dlca6h3hAD.png?imageslim" alt="mark"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171116/0GCA5kkBc2.png?imageslim" alt="mark"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171116/hKd52055A0.png?imageslim" alt="mark"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171116/jbaI2K4LC3.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Android学习笔记 (三)   MP3播放器：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt; 利用Intent 唤醒其他Activity或其他APP&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="lovemefan.win/tags/Android/"/>
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Android学习笔记 (二)   Intent唤醒其他Activity或APP</title>
    <link href="lovemefan.win/2017/10/20/Android%20%E5%A6%82%E4%BD%95%E5%94%A4%E9%86%92%E7%AC%AC%E4%B8%89%E6%96%B9APP/"/>
    <id>lovemefan.win/2017/10/20/Android 如何唤醒第三方APP/</id>
    <published>2017-10-20T10:43:00.000Z</published>
    <updated>2017-10-20T10:53:10.723Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Android学习笔记 (二)   Intent唤醒其他Activity或APP：</strong> <excerpt in="" index="" |="" 首页摘要=""><br> 利用Intent 唤醒其他Activity或其他APP<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Android-如何唤醒第三方APP"><a href="#Android-如何唤醒第三方APP" class="headerlink" title="Android 如何唤醒第三方APP"></a>Android 如何唤醒第三方APP</h1><h2 id="Intent类的通常用法"><a href="#Intent类的通常用法" class="headerlink" title="Intent类的通常用法"></a>Intent类的通常用法</h2><h3 id="1-启动-Activity："><a href="#1-启动-Activity：" class="headerlink" title="1.启动 Activity："></a><code>1.启动 Activity：</code></h3><blockquote><p>Activity 表示应用中的一个屏幕。通过将 Intent 传递给 startActivity()，您可以启动新的 Activity 实例。Intent 描述了要启动的 Activity，并携带了任何必要的数据。<br>如果您希望在 Activity 完成后收到结果，请调用 startActivityForResult()。在 Activity 的 onActivityResult() 回调中，您的 Activity 将结果作为单独的 Intent 对象接收。如需了解详细信息，请参阅 Activity 指南。</p></blockquote><h3 id="2-启动服务："><a href="#2-启动服务：" class="headerlink" title="2.启动服务："></a><code>2.启动服务：</code></h3><blockquote><p>Service 是一个不使用用户界面而在后台执行操作的组件。通过将 Intent 传递给 startService()，您可以启动服务执行一次性操作（例如，下载文件）。Intent 描述了要启动的服务，并携带了任何必要的数据。<br>如果服务旨在使用客户端-服务器接口，则通过将 Intent 传递给 bindService()，您可以从其他组件绑定到此服务。如需了解详细信息，请参阅服务指南。</p></blockquote><h3 id="3-传递广播："><a href="#3-传递广播：" class="headerlink" title="3.传递广播："></a><code>3.传递广播：</code></h3><blockquote><p>广播是任何应用均可接收的消息。系统将针对系统事件（例如：系统启动或设备开始充电时）传递各种广播。通过将 Intent 传递给 sendBroadcast()、sendOrderedBroadcast() 或 sendStickyBroadcast()，您可以将广播传递给其他应用。</p></blockquote><h3 id="以下内容只讨论启动Activity"><a href="#以下内容只讨论启动Activity" class="headerlink" title="以下内容只讨论启动Activity"></a><code>以下内容只讨论启动Activity</code></h3><h2 id="Intent-启动Activity"><a href="#Intent-启动Activity" class="headerlink" title="Intent 启动Activity"></a>Intent 启动Activity</h2><h3 id="1-启动Activity"><a href="#1-启动Activity" class="headerlink" title="1.启动Activity"></a>1.启动Activity</h3><p><code>代码示例:</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//调用系统默认浏览器打开百度</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openBaidu</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW);</div><div class="line">        intent.setData(Uri.parse(<span class="string">"http://www.baidu.com"</span>));<span class="comment">//设置url</span></div><div class="line">        startActivity(intent);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//调用系统电话,拨打10086.需要添加权限</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openCall</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (ActivityCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            <span class="comment">// <span class="doctag">TODO:</span> Consider calling</span></div><div class="line">            <span class="comment">//    ActivityCompat#requestPermissions</span></div><div class="line">            <span class="comment">// here to request the missing permissions, and then overriding</span></div><div class="line">            <span class="comment">//   public void onRequestPermissionsResult(int requestCode, String[] permissions,</span></div><div class="line">            <span class="comment">//                                          int[] grantResults)</span></div><div class="line">            <span class="comment">// to handle the case where the user grants the permission. See the documentation</span></div><div class="line">            <span class="comment">// for ActivityCompat#requestPermissions for more details.</span></div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        startActivity(<span class="keyword">new</span> Intent(Intent.ACTION_CALL, Uri.parse(<span class="string">"tel:10086"</span>)));</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//调用系统信息应用</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openSms</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW);</div><div class="line">        intent.setType(<span class="string">"vnd.android-dir/mms-sms"</span>);</div><div class="line">        intent.putExtra(<span class="string">"sms_body"</span>,<span class="string">""</span>); <span class="comment">//第二个参数为短信内容</span></div><div class="line">        startActivity(intent);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//打开QQ,uin=10000为打开qq10000的用户的聊天界面</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openQQ</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        EditText editText = (EditText)findViewById(R.id.editText);</div><div class="line">        startActivity(<span class="keyword">new</span> Intent(Intent.ACTION_VIEW,Uri.parse(<span class="string">"mqqwpa://im/chat?chat_type=wpa&amp;uin="</span>+ editText.getText()+<span class="string">"&amp;version=1"</span>)));</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//打开系统相机</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openCamera</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        startActivity(<span class="keyword">new</span> Intent(<span class="string">"android.media.action.STILL_IMAGE_CAMERA"</span>));</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//打开微信</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openWechat</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent();</div><div class="line">        ComponentName cmp = <span class="keyword">new</span> ComponentName(<span class="string">"com.tencent.mm"</span>,<span class="string">"com.tencent.mm.ui.LauncherUI"</span>);</div><div class="line">        intent.setAction(Intent.ACTION_MAIN);</div><div class="line">        intent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">        intent.setComponent(cmp);</div><div class="line">        startActivityForResult(intent, <span class="number">0</span>);</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="comment">//打开新浪微博</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openBlog</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent();</div><div class="line">        ComponentName cmp = <span class="keyword">new</span> ComponentName(<span class="string">"com.sina.weibo"</span>,<span class="string">"com.sina.weibo.SplashActivity"</span>);</div><div class="line">        intent.setAction(Intent.ACTION_MAIN);</div><div class="line">        intent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">        intent.setComponent(cmp);</div><div class="line">        startActivityForResult(intent, <span class="number">0</span>);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><p><code>以上代码主要用了两种方法设置将要跳转的Activity的信息,第一个是设置Uri,第二种是设置Component来实现跳转</code></p><h3 id="2-启动APP"><a href="#2-启动APP" class="headerlink" title="2.启动APP"></a>2.启动APP</h3><p>对于第三方APP,笔者主要采用设置<code>Component</code>的方法</p><p>在监听器或其他区域,输入以下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent();</div><div class="line"><span class="comment">//ComponentName(String psk,String cls)</span></div><div class="line"><span class="comment">//PKG的组件存在的包的名字。不能为空。CLS的PKG实现组件的内部类的名字。不能为空。</span></div><div class="line">      ComponentName cmp = <span class="keyword">new</span> ComponentName(<span class="string">"com.tencent.mm"</span>,<span class="string">"com.tencent.mm.ui.LauncherUI"</span>);<span class="comment">//启动微信</span></div><div class="line">      intent.setAction(Intent.ACTION_MAIN);</div><div class="line">      intent.addCategory(Intent.CATEGORY_LAUNCHER);</div><div class="line">      intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">      intent.setComponent(cmp);</div><div class="line">      startActivityForResult(intent, <span class="number">0</span>);</div></pre></td></tr></table></figure><h2 id="一些安卓应用的pkg和cls"><a href="#一些安卓应用的pkg和cls" class="headerlink" title="一些安卓应用的pkg和cls"></a>一些安卓应用的pkg和cls</h2><p><code>以下的APP都是根据笔者的当前手机的app导出得到的,所以只有部分常用的应用</code><br>导出App信息(pkg和cls)项目:<a href="https://github.com/lovemefan/PackageMangerDemo" target="_blank" rel="external">https://github.com/lovemefan/PackageMangerDemo</a><br>|应用|pkg |cls |<br>|:——–|:———-:|:————–:|<br>|阿里云|com.alibaba.aliyun|com.alibaba.aliyun.biz.login.WelcomeActivity|<br>|爱奇艺|com.qiyi.video|com.qiyi.video.WelcomeActivity|<br>|百度贴吧|com.baidu.tieba|com.baidu.tieba.LogoActivity|<br>|百度网盘|com.baidu.netdisk|com.baidu.netdisk.ui.Navigate|<br>|备忘录|com.samsung.android.app.memo|com.samsung.android.app.memo.Main|<br>|哔哩哔哩|tv.danmaku.bili|tv.danmaku.bili.ui.splash.SplashActivity|<br>|车来了|com.ygkj.chelaile.standard|dev.xesam.chelaile.app.module.func.SplashActivity|<br>|电话|com.android.contacts|com.android.dialer.DialtactsActivity|<br>|电子邮件|com.samsung.android.email.provider|com.samsung.android.email.ui.activity.MessageListXL|<br>|盖乐世空间|com.samsung.android.voc|com.samsung.android.voc.LauncherActivity|<br>|高德地图|com.autonavi.minimap|com.autonavi.map.activity.SplashActivity|<br>|高铁管家12306火车票|com.gtgj.view|com.gtgj.view.LaunchActivity|<br>|黑域|me.piebridge.brevent|me.piebridge.brevent.ui.BreventActivity|<br>|计算器|com.sec.android.app.popupcalculator|com.sec.android.app.popupcalculator.Calculator|<br>|交管12123|com.tmri.app.main|com.tmri.app.ui.activity.TmriActivity|<br>|京东|com.jingdong.app.mall|com.jingdong.app.mall.main.MainActivity|<br>|联系人|com.android.contacts|com.android.contacts.activities.PeopleActivity|<br>|猎吧出行|com.example.liabarcarandroid|com.liabarcar.guide.SplashActivity|<br>|浏览器|com.sec.android.app.sbrowser|com.sec.android.app.sbrowser.SBrowserMainActivity|<br>|录音机|com.sec.android.app.voicenote|com.sec.android.app.voicenote.main.VNMainActivity|<br>|南昌航空大学|com.eteasun.nanhang|com.eteasun.nanhang.activity.WelcomeActvity|<br>|全民K歌|com.tencent.karaoke|com.tencent.karaoke.module.splash.ui.SplashBaseActivity|<br>|三星健康|com.sec.android.app.shealth|com.samsung.android.app.shealth.home.HomeMainActivity|<br>|三星生活助手|com.samsung.android.app.sreminder|com.samsung.android.app.sreminder.phone.cardlist.SReminderActivity|<br>|三星视频|com.samsung.android.onlinevideo|com.samsung.android.onlinevideo.list.activity.VideoList|<br>|三星音乐|com.samsung.android.app.music.chn|com.samsung.android.app.music.common.activity.MusicMainActivity|<br>|三星阅读|com.mci.smagazine|com.chaozh.iReader.ui.activity.WelcomeActivity|<br>|三星云|com.samsung.multidevicecloud|com.kanbox.wp.Main|<br>|扫描全能王|com.intsig.camscanner|com.intsig.camscanner.WelcomeActivity|<br>|扇贝单词|com.shanbay.words|com.shanbay.words.startup.SplashActivity|<br>|设置|com.android.settings|com.android.settings.Settings|<br>|时钟|com.sec.android.app.clockpackage|com.sec.android.app.clockpackage.ClockPackage|<br>|手机淘宝|com.taobao.taobao|com.taobao.tao.welcome.Welcome|<br>|手机营业厅|com.sinovatech.unicom.ui|com.sinovatech.unicom.ui.WelcomeClient|<br>|搜狐视频|com.sohu.sohuvideo|com.sohu.sohuvideo.FirstNavigationActivityGroup|<br>|腾讯动漫|com.qq.ac.android|com.qq.ac.android.view.activity.SplashActivity|<br>|腾讯课堂|com.tencent.edu|com.tencent.edu.module.SplashActivity|<br>|腾讯视频|com.tencent.qqlive|com.tencent.qqlive.ona.activity.WelcomeActivity|<br>|通卡宝|com.nci.tkb|com.nci.tkb.ui.SplashActivity|<br>|网易有道词典|com.youdao.dict|com.youdao.dict.activity.DictSplashActivity|<br>|网易云音乐|com.netease.cloudmusic|com.netease.cloudmusic.activity.LoadingActivity|<br>|微博|com.sina.weibo|com.sina.weibo.SplashActivity|<br>|微信|com.tencent.mm|com.tencent.mm.ui.LauncherUI|<br>|我的文件|com.sec.android.app.myfiles|com.sec.android.app.myfiles.common.MainActivity|<br>|闲鱼|com.taobao.idlefish|com.taobao.fleamarket.home.activity.InitActivity.Round|<br>|相册|com.sec.android.gallery3d|com.sec.android.gallery3d.app.GalleryOpaqueActivity|<br>|相机|com.sec.android.app.camera|com.sec.android.app.camera.Camera|<br>|小米VR|com.mi.dlabs.vr.hulk|com.mi.dlabs.vr.hulk.launch.HulkLaunchActivity|<br>|信息|com.android.mms|com.android.mms.ui.ConversationComposer|<br>|一键锁屏|com.yujing.lockscreen|com.yujing.lockscreen.MainActivity|<br>|应用商店|com.sec.android.app.samsungapps|com.sec.android.app.samsungapps.SamsungAppsMainActivity|<br>|影梭|com.github.shadowsocks|com.github.shadowsocks.Shadowsocks|<br>|优酷|com.youku.phone|com.youku.phone.ActivityWelcome|<br>|悦动圈|com.yuedong.sport|com.yuedong.sport.main.WelcomeActivity_|<br>|支付宝|com.eg.android.AlipayGphone|com.eg.android.AlipayGphone.AlipayLogin|<br>|知乎|com.zhihu.android|com.zhihu.android.app.ui.activity.MainActivity|<br>|智能管理器|com.samsung.android.sm|com.samsung.android.sm.app.dashboard.SmartManagerDashBoardActivity|<br>|主题商店|com.samsung.android.themestore|com.samsung.android.themestore.activity.Launcher|<br>|租八戒|com.rentpig.customer|com.rentpig.customer.main.WelcomeActivity|<br>|AChm Free|com.pchen.achmfree|com.pchen.achm.MainActivity|<br>|Chrome|com.android.chrome|com.google.android.apps.chrome.Main|<br>|ES文件浏览器|com.estrongs.android.pop|com.estrongs.android.pop.app.openscreenad.NewSplashActivity|<br>|Excel|com.microsoft.office.excel|com.microsoft.office.apphost.LaunchActivity|<br>|Github|com.seasonfif.github|com.seasonfif.github.ui.activity.SplashScreenActivity|<br>|IT之家|com.ruanmei.ithome|com.ruanmei.ithome.ui.MainActivity|<br>|netkeeper|com.xinli.netkeeper|com.xinli.netkeeper.activitys.WelcomeActivity|<br>|ofo共享单车|so.ofo.labofo|so.ofo.labofo.activities.EntryActivity|<br>|QQ|com.tencent.mobileqq|com.tencent.mobileqq.activity.SplashActivity|<br>|RD Client Beta|com.microsoft.rdc.android.beta|com.microsoft.rdc.ui.activities.HomeActivity|<br>|S 换机助手|com.sec.android.easyMover|com.sec.android.easyMover.DistributionActivity|<br>|S 日历|com.android.calendar|com.android.calendar.AllInOneActivity|<br>|S Voice|com.samsung.voiceserviceplatform|com.samsung.voiceserviceplatform.ui.SVoiceMainActivity|<br>|Samsung Gear|com.samsung.android.app.watchmanager|com.samsung.android.app.watchmanager.setupwizard.SetupWizardWelcomeActivity|<br>|Super Pads|com.opalastudios.pads|com.opalastudios.pads.ui.MainActivity|<br>|Survival Online|com.gameline.survivalcraftfree|com.unity3d.player.UnityPlayerActivity|<br>|TapTap|com.taptap|com.play.taptap.ui.MainAct|<br>|UC浏览器|com.UCMobile|com.UCMobile.main.UCMobile|<br>|USIM卡应用|com.android.stk|com.android.stk.StkLauncherActivity|<br>|WiFi万能钥匙|com.snda.wifilocating|com.lantern.launcher.ui.MainActivity|<br>|Word|com.microsoft.office.word|com.microsoft.office.apphost.LaunchActivity|</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Android学习笔记 (二)   Intent唤醒其他Activity或APP：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt; 利用Intent 唤醒其他Activity或其他APP&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="lovemefan.win/tags/Android/"/>
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Excel 宏命令处理(一)</title>
    <link href="lovemefan.win/2017/10/18/Excel%20%E5%AE%8F%E5%91%BD%E4%BB%A4%E5%A4%84%E7%90%86/"/>
    <id>lovemefan.win/2017/10/18/Excel 宏命令处理/</id>
    <published>2017-10-18T05:58:00.000Z</published>
    <updated>2017-10-18T12:53:11.712Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Excel 宏命令处理(一)：</strong> <excerpt in="" index="" |="" 首页摘要=""></excerpt></p><a id="more"></a><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Excel-宏命令处理"><a href="#Excel-宏命令处理" class="headerlink" title="Excel 宏命令处理"></a>Excel 宏命令处理</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;在我们工作的时候,常常会遇到大量的数据处理.人工操作费时费力,于是笔者开始百度看看有没有什么自动化的方法,最后发现了excel可以使用宏指令来实现编程式处理.</p><h2 id="Excel-VBA"><a href="#Excel-VBA" class="headerlink" title="Excel VBA"></a>Excel VBA</h2><blockquote><p> Visual Basic for Applications(VBA)是Visual Basic的一种宏语言，是微软开发出来在其桌面应用程序中执行通用的自动化(OLE)任务的编程语言。主要能用来扩展Windows的应用程式功能，特别是Microsoft Office软件。也可说是一种应用程式视觉化的Basic 脚本。该语言于1993年由微软公司开发的的应用程序共享一种通用的自动化语言——–Visual Basic For Application(VBA)，实际上VBA是寄生于VB应用程序的版本。微软在1994年发行的Excel5.0版本中，即具备了VBA的宏功能。<br>要熟悉VBA，那么就不得不先了解宏和它们之间的关系。<br>VBA被称为宏语言，但是它决不能和宏划上等号，宏是一条指令或者几条指令的集合，控制WORD或EXCEL等执行一连串的操作。而VBA则是不折不扣的高级语言，通过面向对象的方法来实现不能实现的功能。在编辑一个宏的时候，visual basic 编辑器会将这个宏记录为一个VBA过程<br>VBA使应用程序具有生命的特征，以适应不同的环境，不同的应用，其主要表现为定制、自动化、协作化。<br>VBA的特点是将VB语言与应用对象模型结合起来，处理各种应用需求。WORD VBA则是将VB应用于Word对象模型，或者说是用VB语言来操控这些Word对象模型，以达到各种应用的要求。所以，如果你想通过VBA控制WORD或EXCEL，必须同时熟悉VB语言和Word对象模型。</p></blockquote><h2 id="如何使用VBA"><a href="#如何使用VBA" class="headerlink" title="如何使用VBA"></a>如何使用VBA</h2><p><code>视图-宏</code><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171018/hHHBK2h4eh.png?imageslim" alt="VBA"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171018/F7CBBaFhH3.png?imageslim" alt="mark"></p><p>如果不能使用宏,可能你的excel禁用了.启动即可<br>启用方式:<br><code>文件-选项-信任中心-信任中心设置-宏设置-启用所有宏</code><br>配合录制宏就可以试着写代码了</p><h2 id="Sheet-分割示例"><a href="#Sheet-分割示例" class="headerlink" title="Sheet 分割示例"></a>Sheet 分割示例</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Sub</span> 自动分类()</div><div class="line"></div><div class="line"><span class="comment">' 前提条件:总表已经根据某个要分类的标识字段排好了顺序</span></div><div class="line"><span class="comment">' 此方法是将一张数据量非常大的sheet表按某个字段进行分类并分割成不同的sheet表</span></div><div class="line"><span class="comment">' 同时将该sheet的名称命名为sheet内标识该sheet的字段的名称</span></div><div class="line">    <span class="keyword">Dim</span> sheetPage As Integer</div><div class="line">    <span class="keyword">Dim</span> length As Integer <span class="comment">'总表的最后一列的列数</span></div><div class="line">    <span class="keyword">Dim</span> i As Integer</div><div class="line">    <span class="keyword">Dim</span> Name As <span class="built_in">String</span></div><div class="line">    <span class="keyword">Dim</span> topLeft As Integer <span class="comment">'所选区域的左上角</span></div><div class="line">    <span class="keyword">Dim</span> bottomRight As Integer <span class="comment">'所选区域的右下角</span></div><div class="line">    </div><div class="line"> <span class="comment">'  参数初始化</span></div><div class="line">    Name = <span class="string">"2013"</span> <span class="comment">'总表的名称</span></div><div class="line">    length = <span class="number">1510</span> <span class="comment">'总表的最后一列的列数</span></div><div class="line">    sheetPage = <span class="number">4</span> <span class="comment">'从第几张sheet开始生成</span></div><div class="line">    topLeft = <span class="number">2</span>   <span class="comment">'初始从第几列开始</span></div><div class="line">    bottomRight = <span class="number">2</span> <span class="comment">'初始从第几列结束</span></div><div class="line"> <span class="comment">'</span></div><div class="line">    <span class="comment">'先建表</span></div><div class="line">        <span class="keyword">For</span> i = <span class="number">2</span> <span class="keyword">To</span> length</div><div class="line">            Sheets(Name).<span class="keyword">Select</span></div><div class="line">            bottomRight = i</div><div class="line">            <span class="keyword">If</span> Range(<span class="string">"A"</span> &amp; topLeft).Value &lt;&gt; Range(<span class="string">"A"</span> &amp; bottomRight).Value <span class="keyword">Then</span></div><div class="line">                Sheets.Add After:=ActiveSheet</div><div class="line">                topLeft = bottomRight</div><div class="line">            <span class="keyword">End</span> <span class="keyword">If</span></div><div class="line">        <span class="keyword">Next</span> i</div><div class="line">    <span class="comment">'割分</span></div><div class="line">    </div><div class="line">        topLeft = <span class="number">2</span></div><div class="line">        <span class="keyword">For</span> i = <span class="number">2</span> <span class="keyword">To</span> length</div><div class="line">           Sheets(Name).<span class="keyword">Select</span></div><div class="line">           </div><div class="line">           bottomRight = i</div><div class="line">           <span class="keyword">If</span> Range(<span class="string">"A"</span> &amp; topLeft).Value &lt;&gt; Range(<span class="string">"A"</span> &amp; bottomRight).Value <span class="keyword">Then</span></div><div class="line">                Sheets(Name).<span class="keyword">Select</span></div><div class="line">                Range(<span class="string">"A"</span> &amp; topLeft &amp; <span class="string">":"</span> &amp; <span class="string">"G"</span> &amp; (bottomRight - <span class="number">1</span>)).<span class="keyword">Select</span> <span class="comment">'选择从AtopLeft到Gbottom的区域等待复制</span></div><div class="line">                Selection.Copy</div><div class="line">                </div><div class="line">                Sheets(sheetPage).<span class="keyword">Select</span></div><div class="line">                Range(<span class="string">"A1"</span>).<span class="keyword">Select</span></div><div class="line">                ActiveSheet.Paste</div><div class="line">                Sheets(sheetPage).Name = Range(<span class="string">"A1"</span>).Value</div><div class="line">                sheetPage = sheetPage + <span class="number">1</span></div><div class="line">                topLeft = bottomRight</div><div class="line">           <span class="keyword">End</span> <span class="keyword">If</span></div><div class="line">            </div><div class="line">        <span class="keyword">Next</span> i</div><div class="line">        </div><div class="line">         Sheets(<span class="string">"2013"</span>).<span class="keyword">Select</span></div><div class="line">         Range(<span class="string">"A"</span> &amp; topLeft &amp; <span class="string">":"</span> &amp; <span class="string">"G"</span> &amp; (bottomRight - <span class="number">1</span>)).<span class="keyword">Select</span></div><div class="line">         Selection.Copy</div><div class="line">         </div><div class="line">         Sheets(sheetPage - <span class="number">1</span>).<span class="keyword">Select</span></div><div class="line">         Sheets.Add After:=ActiveSheet</div><div class="line">         Sheets(sheetPage).<span class="keyword">Select</span></div><div class="line">         </div><div class="line">         Range(<span class="string">"A1"</span>).<span class="keyword">Select</span></div><div class="line">         ActiveSheet.Paste</div><div class="line">         sheetName = Range(<span class="string">"A1"</span>).Value</div><div class="line">         Sheets(sheetPage).Name = sheetName</div><div class="line">         </div><div class="line">         topLeft = bottomRight</div><div class="line">    </div><div class="line">    </div><div class="line">    </div><div class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></div><div class="line"><span class="keyword">Sub</span> 排序()</div><div class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> Sh <span class="keyword">In</span> Worksheets</div><div class="line">        <span class="keyword">If</span> Sh.Index &gt; <span class="number">4</span> <span class="keyword">Then</span>  <span class="comment">'限定工作表范围</span></div><div class="line">            Sh.<span class="keyword">Select</span></div><div class="line">            Columns(<span class="string">"B:B"</span>).<span class="keyword">Select</span></div><div class="line">            Sh.Sort.SortFields.Clear</div><div class="line">            Sh.Sort.SortFields.Add Key:=Range(<span class="string">"B1"</span>), _</div><div class="line">                SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal</div><div class="line">            <span class="keyword">With</span> Sh.Sort</div><div class="line">                .SetRange Range(<span class="string">"A1:G69"</span>)</div><div class="line">                .Header = xlNo</div><div class="line">                .MatchCase = <span class="literal">False</span></div><div class="line">                .Orientation = xlTopToBottom</div><div class="line">                .SortMethod = xlPinYin</div><div class="line">                .Apply</div><div class="line">            <span class="keyword">End</span> <span class="keyword">With</span></div><div class="line">            <span class="keyword">End</span> <span class="keyword">If</span></div><div class="line">        <span class="keyword">Next</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></div></pre></td></tr></table></figure><h2 id="github源码下载"><a href="#github源码下载" class="headerlink" title="github源码下载"></a><a href="https://github.com/lovemefan/Excell-Macro" target="_blank" rel="external">github源码下载</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Excel 宏命令处理(一)：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;/excerpt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="VBA" scheme="lovemefan.win/tags/VBA/"/>
    
      <category term="Excel" scheme="lovemefan.win/tags/Excel/"/>
    
      <category term="宏命令" scheme="lovemefan.win/tags/%E5%AE%8F%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Java学习笔记 (一)   基于Robot类的一些自动测试类的一些应用</title>
    <link href="lovemefan.win/2017/10/17/Java%20Robot%E7%B1%BB%E7%9A%84%E4%B8%80%E4%BA%9B%E5%BA%94%E7%94%A8/"/>
    <id>lovemefan.win/2017/10/17/Java Robot类的一些应用/</id>
    <published>2017-10-17T13:03:00.000Z</published>
    <updated>2017-10-17T13:06:08.604Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Java学习笔记 (一)   基于Robot类的一些自动测试类的一些应用：</strong> <excerpt in="" index="" |="" 首页摘要=""></excerpt></p><a id="more"></a><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Java-Robot类的一些应用"><a href="#Java-Robot类的一些应用" class="headerlink" title="Java Robot类的一些应用"></a>Java Robot类的一些应用</h1><h2 id="Robot简介"><a href="#Robot简介" class="headerlink" title="Robot简介"></a>Robot简介</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;Robot类是JAVA程序实现自动测试，自动演示功能，或者是其它的一些鼠标和键盘控制的应用。出于这样的目的，自从JDK1.3开始，它就为我们提供了一个用来产生本机输入事件的机器人类－－java.awt.Robot.<br>&nbsp;&nbsp;&nbsp;&nbsp;此类本来是通过操作鼠标键盘来完成软件的自动测试使用的,我们可以利用Robot类来实现一些我们想要达到的结果</p><h2 id="Robot-API"><a href="#Robot-API" class="headerlink" title="Robot API"></a>Robot API</h2><p><a href="https://docs.oracle.com/javase/7/docs/api/java/awt/Robot.html" target="_blank" rel="external">官方英文API</a><br><code>Robot类其中的方法:</code><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171017/17j0LJJLEB.png?imageslim" alt="methods"></p><p>通过查看API,Robot类提供了<code>截屏</code> <code>获取屏幕某一点的像素的颜色``键盘按下和释放事件``鼠标点击和释放事件``鼠标移动事件``鼠标滑轮事件</code>.</p><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p>这个demo是来实现模拟键盘的一个例子.实现一个信息轰炸功能.<br>点击运行后,将光标移到输入区域,程序运行五秒之后会在光标出不断输出字符.<br>其中还要使用到java.awt.event.KeyEvent类中的键值<br>代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.awt.AWTException;</div><div class="line"><span class="keyword">import</span> java.awt.Robot;</div><div class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sendMessage</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> delayTime;</div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> range;</div><div class="line">Robot robot ;</div><div class="line">Map map;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">sendMessage</span><span class="params">(<span class="keyword">int</span> delayTime,<span class="keyword">int</span> range)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">this</span>.delayTime = delayTime;</div><div class="line"><span class="keyword">this</span>.range = range;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="comment">//使用map 将控制键盘的常量存起来，好方便取用。</span></div><div class="line">map = <span class="keyword">new</span> HashMap();</div><div class="line">map.put(<span class="number">0</span>, <span class="number">0x30</span>);<span class="comment">//键盘的0</span></div><div class="line">map.put(<span class="number">1</span>, <span class="number">0x31</span>);<span class="comment">//键盘的1</span></div><div class="line">map.put(<span class="number">2</span>, <span class="number">0x32</span>);</div><div class="line">map.put(<span class="number">3</span>, <span class="number">0x33</span>);</div><div class="line">map.put(<span class="number">4</span>, <span class="number">0x34</span>);</div><div class="line">map.put(<span class="number">5</span>, <span class="number">0x35</span>);</div><div class="line">map.put(<span class="number">6</span>, <span class="number">0x36</span>);</div><div class="line">map.put(<span class="number">7</span>, <span class="number">0x37</span>);</div><div class="line">map.put(<span class="number">8</span>, <span class="number">0x38</span>);</div><div class="line">map.put(<span class="number">9</span>, <span class="number">0x39</span>);</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">robot = <span class="keyword">new</span> Robot();</div><div class="line">robot.delay(<span class="number">5000</span>);<span class="comment">//延迟5秒供你打开编辑器</span></div><div class="line">editContent2();</div><div class="line"></div><div class="line">&#125; <span class="keyword">catch</span> (AWTException e) &#123;</div><div class="line"><span class="comment">// TODO Auto-generated catch block</span></div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line"><span class="comment">//每隔几毫秒,以及数值的范围</span></div><div class="line">sendMessage demo = <span class="keyword">new</span> sendMessage(<span class="number">1000</span>,<span class="number">200</span>);</div><div class="line">demo.send();</div><div class="line">&#125;</div><div class="line"><span class="comment">/*********************************************</span></div><div class="line"> *editContent1实验的功能输出从0到Range的一个方法</div><div class="line">    ********************************************/</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editContent1</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="comment">//让机器从0数到Range</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= range; i++) &#123;</div><div class="line">robot.delay(<span class="keyword">this</span>.delayTime);</div><div class="line"><span class="comment">// 个位数的处理</span></div><div class="line"><span class="keyword">if</span> (i &lt;= <span class="number">9</span>) &#123;</div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(i));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(i));</div><div class="line">robot.keyPress(KeyEvent.VK_ENTER);</div><div class="line">robot.keyRelease(KeyEvent.VK_ENTER);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 两位数的处理</span></div><div class="line"><span class="keyword">if</span> (i &gt; <span class="number">9</span> &amp;&amp; i &lt;= <span class="number">99</span>) &#123;</div><div class="line"><span class="keyword">int</span> a = i / <span class="number">10</span>;<span class="comment">// 十位</span></div><div class="line"><span class="keyword">int</span> b = i % <span class="number">10</span>;<span class="comment">// 个位</span></div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(a));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(a));</div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(b));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(b));</div><div class="line">robot.keyPress(KeyEvent.VK_ENTER);</div><div class="line">robot.keyRelease(KeyEvent.VK_ENTER);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 三位数的处理</span></div><div class="line"><span class="keyword">if</span> (i &gt; <span class="number">99</span> &amp;&amp; i &lt;= <span class="number">999</span>) &#123;</div><div class="line"><span class="keyword">int</span> a = i / <span class="number">100</span>;<span class="comment">// 百位</span></div><div class="line"><span class="keyword">int</span> b = (i % <span class="number">100</span>) / <span class="number">10</span>;<span class="comment">// 十位</span></div><div class="line"><span class="keyword">int</span> c = i % <span class="number">10</span>;<span class="comment">// 个位</span></div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(a));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(a));</div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(b));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(b));</div><div class="line">robot.keyPress((<span class="keyword">int</span>) map.get(c));</div><div class="line">robot.keyRelease((<span class="keyword">int</span>) map.get(c));</div><div class="line">robot.keyPress(KeyEvent.VK_ENTER);</div><div class="line">robot.keyRelease(KeyEvent.VK_ENTER);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">/************************************************************************</span></div><div class="line"> *editContent2为模拟键盘输入,在英文输入法状态下输出为拼音字母,中文输入法状态下为中文</div><div class="line">    ************************************************************************/</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editContent2</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; range; i++) &#123;</div><div class="line">robot.delay(<span class="keyword">this</span>.delayTime/<span class="number">2</span>);</div><div class="line">robot.keyPress(KeyEvent.VK_C);</div><div class="line">robot.keyRelease(KeyEvent.VK_C);</div><div class="line">robot.keyPress(KeyEvent.VK_N);</div><div class="line">robot.keyRelease(KeyEvent.VK_N);</div><div class="line">robot.keyPress(KeyEvent.VK_M);</div><div class="line">robot.keyRelease(KeyEvent.VK_M);</div><div class="line">robot.keyPress(KeyEvent.VK_SPACE);</div><div class="line">robot.delay(<span class="keyword">this</span>.delayTime/<span class="number">2</span>); <span class="comment">//注意,不过不加delay,在按下之母后立即继续按下后续操作会让输入法来不及相应,所以要延迟一小段时间</span></div><div class="line">robot.keyPress(KeyEvent.VK_ENTER);</div><div class="line">robot.keyRelease(KeyEvent.VK_ENTER);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>上面有两个方法分别是<code>editContent1</code>和<code>editContent2</code>,前者仅仅是从键盘输入一些数字,后者是在打开中文输入法的情况下依次输入中文的拼音,模拟人为打字.</p><p>运行结果如下:<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/171017/afljFb21L3.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Java学习笔记 (一)   基于Robot类的一些自动测试类的一些应用：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;/excerpt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Java" scheme="lovemefan.win/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (四)  安装scrapy框架</title>
    <link href="lovemefan.win/2017/09/23/scrapy%E6%A1%86%E6%9E%B6/"/>
    <id>lovemefan.win/2017/09/23/scrapy框架/</id>
    <published>2017-09-23T06:40:00.000Z</published>
    <updated>2017-09-23T07:07:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (四)  安装scrapy框架：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>安装scrapy框架<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="scrapy框架"><a href="#scrapy框架" class="headerlink" title="scrapy框架"></a>scrapy框架</h2><blockquote><p>Scrapy，Python开发的一个快速、高层次的屏幕抓取和web抓取框架，用于抓取web站点并从页面中提取结构化的数据。Scrapy用途广泛，可以用于数据挖掘、监测和自动化测试。<br>Scrapy吸引人的地方在于它是一个框架，任何人都可以根据需求方便的修改。它也提供了多种类型爬虫的基类，如BaseSpider、sitemap爬虫等，最新版本又提供了web2.0爬虫的支持。 –百度百科</p></blockquote><h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><ul><li>pip install whell</li><li>pip install lxml</li><li>pipi nstall twisted</li><li>pip install scrapy</li></ul><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><p>在控制台下输入:</p><ul><li>创建项目: scrapy startproject 项目名      </li><li>创建爬虫: scrapy genspider -t basic 爬虫名 目标URL</li></ul><p><strong>项目目录如下:</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170923/a4l4a8H3eJ.png?imageslim" alt="mark"></p><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><p>  在控制台下输入: scrapy crawl  爬虫名</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (四)  安装scrapy框架：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;安装scrapy框架&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Android学习笔记 (一)   按钮事件处理的五种方法</title>
    <link href="lovemefan.win/2017/09/12/Android%20%E6%8C%89%E9%92%AE%E4%BA%8B%E4%BB%B6%E7%9A%84%E4%BA%94%E7%A7%8D%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>lovemefan.win/2017/09/12/Android 按钮事件的五种处理方法/</id>
    <published>2017-09-12T05:58:00.000Z</published>
    <updated>2017-09-12T07:50:43.134Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Android学习笔记 (一)   按钮事件处理的五种方法：</strong> <excerpt in="" index="" |="" 首页摘要=""><br> 收集了五种处理按钮事件处理的方法<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Android-按钮事件的五种处理方法"><a href="#Android-按钮事件的五种处理方法" class="headerlink" title="Android 按钮事件的五种处理方法"></a>Android 按钮事件的五种处理方法</h1><p>这里用一个小例子来说明:<br>首先在新建的工程的activity_main.xml中添加一个Button和一个TextView.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.lovemefan.myapplication3.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/tv1"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></div><div class="line">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></div><div class="line">        <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></div><div class="line">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></div><div class="line">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/bt1"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"click"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="1-使用匿名内部类"><a href="#1-使用匿名内部类" class="headerlink" title="1.使用匿名内部类"></a><code>1.使用匿名内部类</code></h2><p>接下来在MainActivity.java文件中如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">       bt.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">                TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">                tv.setText(<span class="string">"hello android"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;);<span class="comment">//内部匿名类实现按键处理</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="2-使用自定义单击事件监听类"><a href="#2-使用自定义单击事件监听类" class="headerlink" title="2.使用自定义单击事件监听类"></a><code>2.使用自定义单击事件监听类</code></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">        bt.setOnClickListener(<span class="keyword">new</span> myButtonClick());<span class="comment">//自定义事件监听类实现按钮事件处理</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myButtonClick</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</div><div class="line"></div><div class="line">       <span class="meta">@Override</span></div><div class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">           TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">           tv.setText(<span class="string">"hello android"</span>);</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="3-使用lambda语法实现按钮处理"><a href="#3-使用lambda语法实现按钮处理" class="headerlink" title="3.使用lambda语法实现按钮处理"></a><code>3.使用lambda语法实现按钮处理</code></h2><p>首先确保环境支持<code>lambda</code>语法,即JDK在1.8及以上.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">        bt.setOnClickListener((view)-&gt;&#123;</div><div class="line">            TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">            tv.setText(<span class="string">"hello android"</span>);</div><div class="line">        &#125;);<span class="comment">//lambda语法实现按钮处理事件</span></div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>如果在Android Studio 下报错:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Error:Jack is required to support java 8 language features. Either enable Jack or remove sourceCompatibility JavaVersion.VERSION_1_8.</div></pre></td></tr></table></figure></p><p>请在<code>build.gradle(Module:app)</code>文件加入以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># 在 build.gradle 文件中加入如下代码</div><div class="line">defaultConfig &#123;</div><div class="line">    ...</div><div class="line">    jackOptions &#123;</div><div class="line">        enabled true</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">compileOptions &#123;</div><div class="line">    sourceCompatibility org.gradle.api.JavaVersion.VERSION_1_8</div><div class="line">    targetCompatibility org.gradle.api.JavaVersion.VERSION_1_8</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="4-Activity继承View-OnClickListener"><a href="#4-Activity继承View-OnClickListener" class="headerlink" title="4.Activity继承View.OnClickListener"></a><code>4.Activity继承View.OnClickListener</code></h2><p>由Activity实现OnClick(View view)方法，在OnClick(View view)方法中用switch-case对不同id代表的button进行相应的处理：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button bt = (Button) findViewById(R.id.bt1);</div><div class="line">        bt.setOnClickListener((view)-&gt;&#123;</div><div class="line">            TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">            tv.setText(<span class="string">"hello android"</span>);</div><div class="line">        &#125;);<span class="comment">//lambda语法实现按钮处理事件</span></div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;  </div><div class="line">  </div><div class="line">        <span class="keyword">switch</span> (view.getId())&#123;  </div><div class="line">            <span class="keyword">case</span> R.id.bt:  </div><div class="line">                TextView tv = (TextView) findViewById(R.id.tv1);</div><div class="line">            tv.setText(<span class="string">"hello android"</span>);  </div><div class="line">            <span class="keyword">break</span>;  </div><div class="line">            <span class="keyword">default</span>:  </div><div class="line">            <span class="keyword">break</span>;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>这个方法适合多个按钮</p><h2 id="5-在XML文件指定按钮的onClick属性"><a href="#5-在XML文件指定按钮的onClick属性" class="headerlink" title="5.在XML文件指定按钮的onClick属性"></a><code>5.在XML文件指定按钮的onClick属性</code></h2><p>在XML文件中显示指定按钮的onClick属性，这样点击按钮时会利用反射的方式调用对应Activity中的click()方法：<br>在我之前学习的Windows 10 <code>UWP</code> 的app开发中都是用的这种方法.<br>UWP也是类似的在相应的XAML代码中设置click属性即可,并且Visual Studio会自动为其添加相应方法.<strong>\(▔＾▔)/ 微软大法好</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:onClick</span>=<span class="string">"sayHelloAndroid"</span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/bt1"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"click"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</div></pre></td></tr></table></figure></p><p>笔者经过百度了后,发现Android Studio 有快捷键来生成click相应的方法:点击onclick的属性值,然后按Alt+Enter<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170912/5jeDm9Klik.png?imageslim" alt="生成方法"><br>然后就生成了相应方法,这样可以避免手动写方法时不小心拼错单词了.<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170912/547A3AcCIg.png?imageslim" alt="mark"></p><p>我个人比较喜欢用第五种方法.界面与后台代码可以完全分开,代码量也少.不过反射最大的缺点就是影响性能和效率.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Android学习笔记 (一)   按钮事件处理的五种方法：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt; 收集了五种处理按钮事件处理的方法&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="lovemefan.win/tags/Android/"/>
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>查四六级准考证号的一种方法</title>
    <link href="lovemefan.win/2017/08/29/%E5%9B%9B%E5%85%AD%E7%BA%A7%E6%9F%A5%E8%AF%A2%E5%87%86%E8%80%83%E8%AF%81%E6%96%B9%E6%B3%95/"/>
    <id>lovemefan.win/2017/08/29/四六级查询准考证方法/</id>
    <published>2017-08-29T13:23:00.000Z</published>
    <updated>2017-08-29T13:35:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 查四六级准考证号的一种方法：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>利用某软件返回值,js代码查询准考证号<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="四六级查询准考证方法"><a href="#四六级查询准考证方法" class="headerlink" title="四六级查询准考证方法"></a>四六级查询准考证方法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>身边有好多小伙伴们有忘记四六级准考证号而且还找不回准考证的情况.<br>因为以前的九九宿舍不能用了,并且网上很少提供这种查询的网站(可能是我孤陋寡闻没听过)<br>所以这里分享一个贴吧大神公布的方法(该贴已被删).实际上是利用某一个软件的bug,也不知道什么时候会被封.</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>某一软件的一个查询口语的入口,即使没有报口语,在其内部的返回值中会包含准考证号的信息,利用这点获得准考证号</p><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><p>最好用<code>谷歌的chrome浏览器</code>,我试过edge和UC都没用.其他没测试过.<br>必要条件:</p><ul><li>身份证号</li><li>姓名</li></ul><p>下面以chrome为例:</p><ol><li>打开chrom,转到下面网址<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://app.cet.edu.cn:7066/baas/app/setuser.do?method=UserVerify</div></pre></td></tr></table></figure></li></ol><p>这时候会出现一堆错误,没关系,继续下一步<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/lFCj5E5CF5.png?imageslim" alt="chromerror"><br>2.按下F12打开开发者工具,点击Console切换到控制台<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/i6Gc65eAbg.png?imageslim" alt="控制台"><br>3.在下面空白光标出输入以下代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">d, s</span>)</span>&#123; d.body.appendChild(s = d.createElement(<span class="string">'script'</span>)).src = <span class="string">'http://code.jquery.com/jquery-1.9.1.min.js'</span>&#125;)(<span class="built_in">document</span>);</div></pre></td></tr></table></figure></p><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/JBGHkmkkm0.png?imageslim" alt="mark"><br>如果出现<code>Uncaught SyntaxError: Unexpected end of input</code>字样,应该是代码不完整或部分拼写错误.重新复制一遍就好了<br>4.接下来输入另一段代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> url = <span class="string">"http://app.cet.edu.cn:7066/baas/app/setuser.do?method=UserVerify"</span>;</div><div class="line"><span class="keyword">var</span> ks_data = &#123;</div><div class="line"><span class="string">"ks_xm"</span>: <span class="string">"姓名"</span>,</div><div class="line"><span class="string">"ks_sfz"</span>: <span class="string">"身份证号"</span>,</div><div class="line"><span class="string">"jb"</span>: <span class="string">"四级填1,六级填2"</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> postdata = &#123;</div><div class="line"><span class="string">"action"</span>: <span class="string">""</span>,</div><div class="line"><span class="string">"params"</span>: <span class="built_in">JSON</span>.stringify(ks_data)</div><div class="line">&#125;;</div><div class="line">$.post(url = url, data = postdata, callback = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">data = $.parseJSON(data)</div><div class="line"><span class="built_in">console</span>.log(data[<span class="string">"ks_bh"</span>])</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p>将上述代码的姓名,身份证等参数替换掉,回车确定<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170829/Icg2EBD67j.png?imageslim" alt="返回准考证号"><br>如果出现其他错误,可能你的<code>信息输入有误</code>,请核对再输一遍.如果还有错则该考生不存在(没报考).<br>这个只能查最近一次的准考证.<br>好了,大功告成<br>点击下面:<br><a href="http://cet.neea.edu.cn/cet/" target="_blank" rel="external">四级查询路口 http://cet.neea.edu.cn/cet/</a><br> 然后就可以查分数了.<br> 溜了溜了…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 查四六级准考证号的一种方法：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;利用某软件返回值,js代码查询准考证号&lt;br&gt;
    
    </summary>
    
    
      <category term="其他" scheme="lovemefan.win/tags/%E5%85%B6%E4%BB%96/"/>
    
      <category term="JavaScript" scheme="lovemefan.win/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (三)  简单爬虫实战</title>
    <link href="lovemefan.win/2017/08/19/Python%20%E5%AE%9E%E6%88%98/"/>
    <id>lovemefan.win/2017/08/19/Python 实战/</id>
    <published>2017-08-19T14:00:00.000Z</published>
    <updated>2017-08-20T14:00:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (三)  简单爬虫实战：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>Python实战 抓取网页<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="Python-实战"><a href="#Python-实战" class="headerlink" title="Python 实战"></a>Python 实战</h1><h2 id="简单的静态文本抓取"><a href="#简单的静态文本抓取" class="headerlink" title="简单的静态文本抓取"></a>简单的静态文本抓取</h2><h3 id="request库命令安装"><a href="#request库命令安装" class="headerlink" title="request库命令安装"></a>request库命令安装</h3><p>windows下进入cmd ，定位到你Python的安装路径，我的是D:\Program Files\Python27\Scripts。因为以后常用，不妨加到环境变量中，以后就不用在定位到安装路径，直接调用。<br>然后在cmd、PowerShell、XShell中输入以下命令</p><ul><li>Windows :  pip install request</li><li>Linux :  sudo pip install request</li><li>Mac OS :  sudo pip install request  <h3 id="抓取目标："><a href="#抓取目标：" class="headerlink" title="抓取目标："></a>抓取目标：</h3></li><li><a href="http://my.0ff0.net/" target="_blank" rel="external">http://my.0ff0.net/</a></li><li><a href="https://get.freevpnss.me/#vpn" target="_blank" rel="external">https://get.freevpnss.me/#vpn</a></li></ul><p>以上是两个免费的VPN网站，目标是将网站中的VPN服务器IP、用户名、密码、IPSec密钥等相关信息抓取下来以便使用。本次程序需要用到request库，如果没有安装</p><h3 id="网站分析"><a href="#网站分析" class="headerlink" title="网站分析"></a>网站分析</h3><h4 id="第一个网站"><a href="#第一个网站" class="headerlink" title="第一个网站"></a>第一个网站</h4><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170726/i9GiJIBJcd.png?imageslim" alt="http://my.0ff0.net"><br>查看其源码如下：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170726/fj8DBkdhgD.png?imageslim" alt="my.0ff0.nety源码"><br>第一个网站结构和源码都比较简单，直接使用Python的正则表达式匹配其字符就行<br>直接上源代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line">html = requests.get(<span class="string">"http://my.0ff0.net/"</span>)</div><div class="line"><span class="comment"># html.encoding = 'utf-8'</span></div><div class="line">content = re.findall(<span class="string">'&lt;div class="content"&gt;(.*?)&lt;/div&gt;'</span>,html.text,re.S)[<span class="number">0</span>]</div><div class="line">serverip =re.findall(<span class="string">'&lt;span id="ip"&gt;(.*?)&lt;/span&gt;'</span>,content,re.S)</div><div class="line">user =re.findall(<span class="string">'&lt;span id="user"&gt;(.*?)&lt;/span&gt;'</span>,content,re.S)</div><div class="line">password =re.findall(<span class="string">'&lt;span id="pw"&gt;(.*?)\n&lt;/span&gt;'</span>,content,re.S)</div><div class="line">secret =re.findall(<span class="string">'&lt;span id="secret"&gt;(.*?)&lt;/span&gt;'</span>,content,re.S)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># print html.text</span></div><div class="line"><span class="keyword">print</span> <span class="string">"服务器地址: %s "</span>%str(serverip[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"用户名: %s"</span>%str(user[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"密码: %s"</span>%str(password[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"IPSec密钥: %s"</span>%str(secret[<span class="number">0</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">"连接方式：PPTP和Cisco IPSec(IKEv1)"</span></div></pre></td></tr></table></figure></p><p>运行结果：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170726/maJClL2Ha4.png?imageslim" alt="运行结果"></p><h4 id="第二个网站"><a href="#第二个网站" class="headerlink" title="第二个网站"></a>第二个网站</h4><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170820/hkebHGd2L7.png?imageslim" alt="freeVPN"><br><strong>F12查看源码,同样用正则表达式吧需要的字符匹配出来.</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170820/L0g8L9L5C5.png?imageslim" alt="mark"></p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">from</span> encodings <span class="keyword">import</span> gb18030</div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line">html = requests.get(<span class="string">"http://jn9.org/indexcn.html"</span>)</div><div class="line">html.encoding = <span class="string">'utf-8'</span></div><div class="line"></div><div class="line">target = re.findall(<span class="string">'&lt;div class="panel-heading"&gt;(.*?)&lt;span class="label label-success"&gt;Active&lt;/span&gt;&lt;/p&gt;.*?&lt;/div&gt;.*?&lt;/div&gt;.*?&lt;/div&gt;&lt;!-- /.col-sm-4 --&gt;'</span>,html.text,re.S)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(target.__len__()):</div><div class="line">    adress = re.findall(<span class="string">'&lt;h2 class="panel-title"&gt;(.*?)&lt;/h2&gt;'</span>,target[i],re.S)</div><div class="line">    contend = re.findall(<span class="string">'&lt;p&gt;(.*?)&lt;/p&gt;'</span>,target[i],re.S)</div><div class="line">    <span class="keyword">if</span> adress:</div><div class="line">        <span class="keyword">print</span> <span class="string">"地区:"</span>,adress[<span class="number">0</span>]</div><div class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> contend:</div><div class="line">        result = re.sub(<span class="string">'&lt;span class="hidden"&gt;(.*?)&lt;/span&gt;'</span>, <span class="string">''</span>,each)</div><div class="line">        <span class="keyword">print</span> result</div><div class="line">    <span class="keyword">print</span> <span class="string">"\n\n"</span></div></pre></td></tr></table></figure><p>运行结果如下:<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170820/49jGcfChGJ.png?imageslim" alt="效果图"><br><code>好了,翻个墙出去玩耍了.</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (三)  简单爬虫实战：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;Python实战 抓取网页&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>数学建模论文格式分析</title>
    <link href="lovemefan.win/2017/08/10/%E8%AE%BA%E6%96%87%E6%A0%BC%E5%BC%8F%E5%88%86%E6%9E%90%E9%89%B4%E8%B5%8F/"/>
    <id>lovemefan.win/2017/08/10/论文格式分析鉴赏/</id>
    <published>2017-08-10T00:00:00.000Z</published>
    <updated>2017-08-10T03:24:35.190Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 数学建模论文格式分析：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>关于数学建模论文格式分析 教会你怎么写相关论文<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="论文格式分析鉴赏"><a href="#论文格式分析鉴赏" class="headerlink" title="论文格式分析鉴赏"></a>论文格式分析鉴赏</h1><h2 id="论文格式"><a href="#论文格式" class="headerlink" title="论文格式"></a>论文格式</h2><p>根据分析论文中的格式，可以总结出以下格式：</p><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>摘要的特点首先在于’短”，要简短扼要，高度浓缩，目的是节省老师的时间、提高效率。老师阅读        摘要后，就能够确切地了解论文的主要内容和结果，决定是否需要阅读全文。摘要最好能引人入胜，使之产生看完全文的兴趣。尽量简述对问题的解决思路，最好先一句话用什么方法解决了什么类型的问题。</p><ul><li>模型的数学归类（在数学上属于什么类型）</li><li>建模的思想（思路）</li><li>算法思想（求解思路）</li><li>建模特点（模型优点，建模思想或方法，算法特点，结果检验，灵敏度 分析，模型检验）</li><li>主要结果（数值结果，结论）（回答题目所问的全部“问题”） <h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3>根据题目给出的已知条件，结合自己的理解，分析问题的解决方法，引出解题的思路．一个一个问题有条理得分析问题．最后一段总结．</li></ul><h3 id="模型假设"><a href="#模型假设" class="headerlink" title="模型假设"></a>模型假设</h3><p>首先基本假设的合理性很重要。</p><ul><li>根据题目中条件和要求作出假设 </li><li>关键性假设不能缺，假设要切合题意 </li></ul><h3 id="符号说明"><a href="#符号说明" class="headerlink" title="符号说明"></a>符号说明</h3><p>根据范文分析，就是将本文将会出现的数学符号通过表格清晰明了得进行说明。<br>如下图<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170810/EfCjfI7k8d.png?imageslim" alt="符号说明"></p><h3 id="模型建立与求解"><a href="#模型建立与求解" class="headerlink" title="模型建立与求解"></a>模型建立与求解</h3><h4 id="基本模型："><a href="#基本模型：" class="headerlink" title="基本模型："></a>基本模型：</h4><ul><li>首先要有数学模型：数学公式、方案等 </li><li>基本模型，要求 完整，正确，简明<h4 id="简化模型"><a href="#简化模型" class="headerlink" title="简化模型:"></a>简化模型:</h4><ul><li>要明确说明：简化思想，依据 </li></ul></li><li>简化后模型，尽可能完整给出<br>模型要实用，有效，以解决问题有效为原则。 数学建模面临的、要解决的是实际问题，不追求数学上。高（级）、深（刻）、 难（度大）。<h4 id="模型要求："><a href="#模型要求：" class="headerlink" title="模型要求："></a>模型要求：</h4></li><li>能用初等方法解决的、就不用高级方法;</li><li>能用简单方法解决的，就不用复杂方法; </li><li>能用被更多人看懂、理解的方法;</li><li>就不用只能少数人看懂、理解的方法</li><li>鼓励创新，但要切实，不要离题搞标新立异数模创新可出现在 </li><li>建模中，模型本身，简化的好方法、好策略等， <h4 id="模型求解中"><a href="#模型求解中" class="headerlink" title="模型求解中"></a>模型求解中</h4></li><li>结果表示、分析、检验，模型检验 </li><li>推广部分 <h4 id="在问题分析推导过程中，需要注意的问题："><a href="#在问题分析推导过程中，需要注意的问题：" class="headerlink" title="在问题分析推导过程中，需要注意的问题："></a>在问题分析推导过程中，需要注意的问题：</h4></li><li>分析：中肯、确切 </li><li>术语：专业、内行；；  </li><li>原理、依据：正确、明确, </li><li>表述：简明，关键步骤要列出 </li><li>忌：外行话，专业术语不明确，表述混乱，冗长。</li></ul><h3 id="模型评价和推广"><a href="#模型评价和推广" class="headerlink" title="模型评价和推广"></a>模型评价和推广</h3><h4 id="模型评价"><a href="#模型评价" class="headerlink" title="模型评价:"></a>模型评价:</h4><ul><li>优点突出（预测问题关注精度，优化问题关注性能，分类问题关注准确性，等等，根据实际问题写模型优点，一定要写到点上）</li><li>缺点不回避，但是缺点要挑无关痛痒的讲，可以将假设中的不足或局限性作为缺点。<br>模型推广:</li><li>适用的场景、人群、范围等等（不可硬套，根据实际题目实际情况来写） </li><li>推广或改进方向时，不要玩弄新数学术语（让人看得懂，复杂也要简单化，切莫把简单的描述的过于复杂）</li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p>按要求的格式写<br>尽量引用好的文献、书籍、资料等等</p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ul><li>程序代码（基本上是代码）</li><li>详细的结果，详细的数据表格，可在此列出，但不要错，错的宁可不列。</li><li>主要结果数据应在正文中列出，不怕重复。 </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 数学建模论文格式分析：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;关于数学建模论文格式分析 教会你怎么写相关论文&lt;br&gt;
    
    </summary>
    
    
      <category term="数学建模" scheme="lovemefan.win/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
      <category term="论文" scheme="lovemefan.win/tags/%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (二)  第三方库安装</title>
    <link href="lovemefan.win/2017/07/22/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E5%AE%89%E8%A3%85/"/>
    <id>lovemefan.win/2017/07/22/第三方库安装/</id>
    <published>2017-07-22T13:00:00.000Z</published>
    <updated>2017-07-22T15:10:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (二)  第三方库安装：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>Python的第三方库的安装<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="第三方库安装"><a href="#第三方库安装" class="headerlink" title="第三方库安装"></a>第三方库安装</h2><h3 id="命令安装"><a href="#命令安装" class="headerlink" title="命令安装"></a>命令安装</h3><p>windows下进入cmd ，定位到你Python的安装路径，我的是D:\Program Files\Python27\Scripts。因为以后常用，不妨加到环境变量中，以后就不用在定位到安装路径，直接调用。<br>然后在cmd、PowerShell、XShell中输入以下命令</p><ul><li>Windows :  pip install xxx</li><li>Linux :  sudo pip install xxx</li><li>Mac OS :  sudo pip install xxx   </li></ul><p><code>少用easy_install 因为只能安装不能卸载</code></p><h3 id="自定义安装"><a href="#自定义安装" class="headerlink" title="自定义安装"></a>自定义安装</h3><p> 当出现问题或者不想用命令安装时  请戳&gt;&gt;<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="external">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a><br> 这个网站有Python所有的第三方库文件。将下载好的文件原后缀.whl改为.zip,并解压到python安装目录的Lib文件夹下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (二)  第三方库安装：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;Python的第三方库的安装&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 (一)  初识Python</title>
    <link href="lovemefan.win/2017/07/22/%E5%88%9D%E8%AF%86Python/"/>
    <id>lovemefan.win/2017/07/22/初识Python/</id>
    <published>2017-07-22T12:00:00.000Z</published>
    <updated>2017-07-22T14:12:04.460Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Python学习笔记 (一)  初识Python：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>认识Python及搭建开发环境<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="初识Python"><a href="#初识Python" class="headerlink" title="初识Python"></a>初识Python</h1><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><blockquote><p>Python[1]  （英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。<br>Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议[2]  。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。<br>Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中[3]  有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。–百度百科</p></blockquote><p><strong><em>个人认为Python是一款非常适合初学者的语言，同时有面向过程和对象的特性，语法简单非常接近自然语言，功能强大</em></strong></p><h2 id="发展历程"><a href="#发展历程" class="headerlink" title="发展历程"></a>发展历程</h2><blockquote><p>自从20世纪90年代初Python语言诞生至今，它已被逐渐广泛应用于系统管理任务的处理和Web编程。<br>Python的创始人为Guido van Rossum。1989年圣诞节期间，在阿姆斯特丹，Guido为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，做为ABC 语言的一种继承。之所以选中Python（大蟒蛇的意思）作为该编程语言的名字，是因为他是一个叫Monty Python的喜剧团体的爱好者。<br>ABC是由Guido参加设计的一种教学语言。就Guido本人看来，ABC 这种语言非常优美和强大，是专门为非专业程序员设计的。但是ABC语言并没有成功，究其原因，Guido 认为是其非开放造成的。Guido 决心在Python 中避免这一错误。同时，他还想实现在ABC 中闪现过但未曾实现的东西。<br>就这样，Python在Guido手中诞生了。可以说，Python是从ABC发展起来，主要受到了Modula-3（另一种相当优美且强大的语言，为小型团体所设计的）的影响。并且结合了Unix shell和C的习惯。<br>Python[4]  已经成为最受欢迎的程序设计语言之一。2011年1月，它被TIOBE编程语言排行榜评为2010年度语言。自从2004年以后，python的使用率呈线性增长[5]  。<br>由于Python语言的简洁性、易读性以及可扩展性，在国外用Python做科学计算的研究机构日益增多，一些知名大学已经采用Python来教授程序设计课程。例如卡耐基梅隆大学的编程基础、麻省理工学院的计算机科学及编程导论就使用Python语言讲授。众多开源的科学计算软件包都提供了Python的调用接口，例如著名的计算机视觉库OpenCV、三维可视化库VTK、医学图像处理库ITK。而Python专用的科学计算扩展库就更多了，例如如下3个十分经典的科学计算扩展库：NumPy、SciPy和matplotlib，它们分别为Python提供了快速数组处理、数值运算以及绘图功能。因此Python语言及其众多的扩展库所构成的开发环境十分适合工程技术、科研人员处理实验数据、制作图表，甚至开发科学计算应用程序。<br>说起科学计算，首先会被提到的可能是MATLAB。然而除了MATLAB的一些专业性很强的工具箱还无法替代之外，MATLAB的大部分常用功能都可以在Python世界中找到相应的扩展库。和MATLAB相比，用Python做科学计算有如下优点：<br>● 首先，MATLAB是一款商用软件，并且价格不菲。而Python完全免费，众多开源的科学计算库都提供了Python的调用接口。用户可以在任何计算机上免费安装Python及其绝大多数扩展库。<br>● 其次，与MATLAB相比，Python是一门更易学、更严谨的程序设计语言。它能让用户编写出更易读、易维护的代码。<br>● 最后，MATLAB主要专注于工程和科学计算。然而即使在计算领域，也经常会遇到文件管理、界面设计、网络通信等各种需求。而Python有着丰富的扩展库，可以轻易完成各种高级任务，开发者可以用Python实现完整应用程序所需的各种功能。</p></blockquote><h2 id="风格"><a href="#风格" class="headerlink" title="风格"></a>风格</h2><blockquote><p>Python在设计上坚持了清晰划一的风格，这使得Python成为一门易读、易维护，并且被大量用户所欢迎的、用途广泛的语言。<br>设计者开发时总的指导思想是，对于一个特定的问题，只要有一种最好的方法来解决就好了。这在由Tim Peters写的Python格言（称为The Zen of Python）里面表述为：There should be one– and preferably only one –obvious way to do it. 这正好和Perl语言（另一种功能类似的高级动态语言）的中心思想TMTOWTDI（There’s More Than One Way To Do It）完全相反。<br>Python的作者有意的设计限制性很强的语法，使得不好的编程习惯（例如if语句的下一行不向右缩进）都不能通过编译。其中很重要的一项就是Python的缩进规则。<br>一个和其他大多数语言（如C）的区别就是，一个模块的界限，完全是由每行的首字符在这一行的位置来决定的（而C语言是用一对花括号{}来明确的定出模块的边界的，与字符的位置毫无关系）。这一点曾经引起过争议。因为自从C这类的语言诞生后，语言的语法含义与字符的排列方式分离开来，曾经被认为是一种程序语言的进步。不过不可否认的是，通过强制程序员们缩进（包括if，for和函数定义等所有需要使用模块的地方），Python确实使得程序更加清晰和美观。</p><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><h2 id="下载Python"><a href="#下载Python" class="headerlink" title="下载Python"></a>下载Python</h2><p>官网下载<a href="https://www.python.org/" target="_blank" rel="external">Python</a>,建议下载Python 2.X 版的。目前网上大部分教程为2.X版。3.X版改进很大。这里是一些关于2和3版本的区别和指导，请自己斟酌<br><a href="http://www.cnblogs.com/codingmylife/archive/2010/06/06/1752807.html" target="_blank" rel="external">Python3.x和Python2.x的区别</a><br><a href="https://www.zhihu.com/question/24549965" target="_blank" rel="external">应该学习最新版本的 Python 3 还是旧版本的 Python 2？</a><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170722/l6aFIFLfC3.png?imageslim" alt="mark"></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>我的电脑右键属性-高级系统变量-环境变量-向Path 添加Python的安装路径<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170722/Ebeb0LC1iE.png?imageslim" alt="mark"></p><h2 id="下载IDE"><a href="#下载IDE" class="headerlink" title="下载IDE"></a>下载IDE</h2><p>点击这里有推荐  <a href="http://www.oschina.net/news/57468/best-python-ide-for-developers" target="_blank" rel="external">提供给开发者 10 款最好的 Python IDE</a><br>另外VIsual Studio 也可以。我自己使用破解版的<code>JetBrains PyCharm</code><a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="external">下载</a> 。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170722/b4mFhHgAFj.png?imageslim" alt="PyCharm"><br>然后就愉快的玩耍了</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Python学习笔记 (一)  初识Python：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;认识Python及搭建开发环境&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="lovemefan.win/tags/Python/"/>
    
      <category term="编程语言" scheme="lovemefan.win/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>UWP学习笔记 (三)   XAML界面原理和语法</title>
    <link href="lovemefan.win/2017/07/10/%E4%BB%80%E4%B9%88%E6%98%AFXAML/"/>
    <id>lovemefan.win/2017/07/10/什么是XAML/</id>
    <published>2017-07-10T14:00:00.000Z</published>
    <updated>2017-07-15T02:51:16.807Z</updated>
    
    <content type="html"><![CDATA[<p><strong> UWP学习笔记 (三)   XAML界面原理和语法：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>学习XAML在UWP 中的原理及语法<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="什么是XAML"><a href="#什么是XAML" class="headerlink" title="什么是XAML"></a>什么是XAML</h2><blockquote><p>XAML是EXtensible Application Markup Language的英文缩写，相应的中文名称为可扩展应用程序标记语言，它是微软公司为构建应用程序用户界面而创建的一种新的描述性语言。XAML提供了一种便于扩展和定位的语法来定义和程序逻辑分离的用户界面，而这种实现方式和ASP.NET中的”代码后置”模型非常类似。XAML是一种解析性的语言，尽管它也可以被编译。它的优点是简化编程式上的用户创建过程，应用时要添加代码和配置等。 –百度百科</p></blockquote><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>&#160;&#160;&#160;&#160;XAML简化了.Net Framework 3.0编程模式上的用户界面创建过程，使用XAML开发人员可以对WPF程序的所有用户界面元素(例如文本、按钮、图像和列表框等)进行详细的定置，同时还可以对整个界面进行合理化的布局，这与使用HTML非常相似。但是由于XAML是基于XML的，所以它本身就是一个组织良好的XML文档，而且相对于HTML，它的语法更严谨、更明确。预计以后大部分的XAML都可由相应的软件自动生成，就如同我们现在制作一个静态页面时，几乎不用编写任何HTML代码就可以直接通过Dreamweaver软件生成一个美观的页面。但是最初通过手动编写XAML代码将是一次绝佳的学习体验，虽然实现的过程繁杂了些，但是将加深您对XAML语法和各个元素的理解。<br>大多数的WPF程序可能同时包含程序代码和 XAML。我们可以使用XAML定义应用程序的初始界面，而后才编写相应的功能实现代码。我们可以将逻辑代码直接嵌入到一个XAML文件中，也可以将它保留在一个单独的文件中。实际上，能够用XAML实现的所有功能我们都可以使用程序代码来完成。因此，我们根本无需使用任何的XAML就可以创建一个完好的WPF程序。一般来说，程序代码的优势在于流程处理和逻辑判断，而不是界面的构建上。而XAML则是集中关注于界面的编程，我们可以将它和其它的.NET语言配合使用，从而构建出一个功能完善、界面美观的WPF程序。XAML是一种纯正的、用来描述用户界面构成元件和编排方式的标记语言。尽管有部分的XAML语法具备程序设计语言的特性(例如XAML中的Trigger和TRansform)，但是XAML并不是一种用于程序设计的语言，它的功能也不是为了执行应用程序逻辑。<br>&#160;&#160;&#160;&#160;微软推荐XAML被编译成BAML(Binary Application Markup Language-二进制语言程序标记语言)。XAML和BAML都可以被WPF解析，并且将以一种和HTML相似的方式进行界面的呈现。但是和HTML不同的是，XAML是强类型化的。也就是说，HTML会忽略那些它不能识别的元素和属性，而XAML必须在识别所有的元素和属性的情况下，才对页面进行呈现。尽管在XAML中各个属性都是以一个个的字符串(例如Background)表示的，但是这些字符串实际上代表的是WPF中的对象，只有被WPF识别的对象才可以作为元素的属性，所以我们说XAML是强类型化的。</p><h3 id="新功能"><a href="#新功能" class="headerlink" title="新功能"></a>新功能</h3><p>微软Build 2013发布了一些已经被添加到Windows 8.1中的XAML新功能。[1]  </p><ul><li>Hub控件</li><li>命令栏</li><li>弹出（Flyout）控件</li><li>日期/时间选择控件</li><li>取消StandardStyles.xaml<h3 id="与HTML的区别"><a href="#与HTML的区别" class="headerlink" title="与HTML的区别"></a>与HTML的区别</h3>&#160;&#160;&#160;&#160;还有一点是我们反复强调的，XAML并不是HTML。尽管XAML在元素的声明、程序样式的设置和指定事件处理程序上都和HTML非常类似，但是XAML是基于XML的，它是WPF的外在表现形式。而HTML只是一种标记语言，仅仅是用来为浏览器呈现页面内容。XAML除了用来呈现信息和请求用户输入等基本的功能外，它还包含了一些高级的特性，例如它提供了对动画和3D众多方面的支持。<br>XAML是可扩展的，正如它的名字指明的那样。开发人员可以创建自定义的控件、元素和函数来扩展XAML。而且由于XAML各元素在本质上就是WPF类的映射，所以开发人员可以很轻松地使用面向对象的技术对XAML元素进行扩展。也就是说我们可以开发一些自定义控件和组合元素，并将它公开给用户界面设计人员和其它的开发人员使用。</li></ul><h2 id="XAML代码在UWP中的角色"><a href="#XAML代码在UWP中的角色" class="headerlink" title="XAML代码在UWP中的角色"></a>XAML代码在UWP中的角色</h2><ul><li>Page是UWP的用户界面主体。传统桌面程序是由一个个窗口组成的，而UWP是由一个Page（页面）组成的</li><li>Page是一个partial类</li><li>我们的任务是扩展Page这个类<ul><li>微软预制的Page为一个空的界面，没有内容</li><li>我们只能扩展它</li></ul></li><li>XAML代码是界面部分，用来实例化.NET对象的标记语言。它可以非常简单的创建对象。<br>如下图，这段XAML代码创建了一个Button 对象<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170711/L1H43BAcC0.jpg?imageslim" alt="XAML代码"><br>同样的用C#实现会怎么样呢？<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170711/Cabge4dJHj.jpg?imageslim" alt="C#代码"><br>&#160;&#160;&#160;&#160;&#160;XAML中的Margin是直接等于一个字符串，而C#中是需要给Margin赋值一个Thickness对象的。这归功于XAML的类型转换器。XAML在编译的时候，XAML语法分析器将字符串转换为对应的对象或枚举值，这样的话，我们可以直接用一个非常简单的值来代替冗长的类型名和枚举值来提高效率。<h2 id="XAML语法"><a href="#XAML语法" class="headerlink" title="XAML语法"></a>XAML语法</h2><h3 id="Content-Property-（内容属性）"><a href="#Content-Property-（内容属性）" class="headerlink" title="Content Property （内容属性）"></a>Content Property （内容属性）</h3>每个标签都有自己的默认的内容属性。比如<code>&lt;Grid/&gt;</code>的默认属性是<code>&lt;Grid.Children&gt;&lt;Grid.Children/&gt;</code>,<code>&lt;Button&gt;</code>的默认属性是<code>&lt;Button.Content&gt;</code>.通常内容属性可省略。<h3 id="self-closing"><a href="#self-closing" class="headerlink" title="self-closing"></a>self-closing</h3>XAML标签与其他标签类似有两种开闭形式</li><li><code>&lt;xxx&gt;&lt;xxx/&gt;</code></li><li><code>&lt;xxx/&gt;</code><h3 id="Attribute-与简单的property"><a href="#Attribute-与简单的property" class="headerlink" title="Attribute 与简单的property"></a>Attribute 与简单的property</h3>可以直接在标签内定义该控件的一些简单属性，比如<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Name</span>=<span class="string">"button"</span> <span class="attr">Height</span>=<span class="string">"200"</span> <span class="attr">Width</span>=<span class="string">"200"</span>/&gt;</span></div></pre></td></tr></table></figure></li></ul><h3 id="复杂的property与property标签"><a href="#复杂的property与property标签" class="headerlink" title="复杂的property与property标签"></a>复杂的property与property标签</h3><p>标签里的属性对象很复杂的时候，编译器无法将字符转化成对象是，就需要使用属性标签。<br>比如说，当我要设置背景颜色时，如果时简单的颜色可以直接这样<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Background</span>=<span class="string">"red"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></p><p>当然，我们肯定不能满足这种单一色调的背景，我想要一个渐变的漂亮的背景怎么做呢？<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">Grid.Background</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!--LinearGradientBrush为线性笔刷--&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">LinearGradientBrush</span> <span class="attr">EndPoint</span>=<span class="string">"0.5,1"</span> <span class="attr">StartPoint</span>=<span class="string">"0.5,0"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--从#FFAC6CC开始 偏移量为0，#FF2D7099 结束偏移量为1--&gt;</span>            </div><div class="line">                <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">"#FFACD6CC"</span> <span class="attr">Offset</span>=<span class="string">"0"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">GradientStop</span> <span class="attr">Color</span>=<span class="string">"#FF2D7099"</span> <span class="attr">Offset</span>=<span class="string">"1"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">LinearGradientBrush</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Grid.Background</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></p><h3 id="特殊属性（UWP，WPF特有）"><a href="#特殊属性（UWP，WPF特有）" class="headerlink" title="特殊属性（UWP，WPF特有）"></a>特殊属性（UWP，WPF特有）</h3><ul><li>Dependency Property 依赖属性<br>依赖属性就是自己自己没有值，通过Binding从数据源获得值，就是依赖在别人身上，拥有依赖属性的对象称为依赖对象。<br>几种应用依赖属性的场景： <ol><li>希望可在样式中设置属性。 </li></ol></li></ul><ol><li>希望属性支持数据绑定。 </li><li>希望可使用动态资源引用设置属性。 </li><li>希望从元素树中的父元素自动继承属性值。 </li><li>希望属性可进行动画处理。 </li><li>希望属性系统在属性系统、环境或用户执行的操作或者读取并使用样式更改了属性以前的值时报告。 </li><li>希望使用已建立的、WPF 进程也使用的元数据约定，例如报告更改属性值时是否要求布局系统重新编写元素的可视化对象。<br>依赖对象创建时并不包含存储数据空间。WPF中必须使用依赖对象作为依赖属性的宿主。<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">x:Name</span>=<span class="string">"textBox1"</span> <span class="attr">Margin</span>=<span class="string">"10"</span>  <span class="attr">Text</span>=<span class="string">"&#123;Binding Path=Title&#125;"</span>/&gt;</span></div></pre></td></tr></table></figure></li></ol><ul><li>Attached Property 附加属性 。附加属性为本不应该是该控件的属性而在该控件下设置的属性。<br>比如<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--声明该Grid有三行--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"auto"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"auto"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"auto"</span>/&gt;</span></div><div class="line">       <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--这里的Grid.row本来是Grid的属性，却被当做是Button的属性。Grid.Row为Button的附加属性--&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">Grid.Row</span>=<span class="string">"2"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; UWP学习笔记 (三)   XAML界面原理和语法：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;学习XAML在UWP 中的原理及语法&lt;br&gt;
    
    </summary>
    
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="UWP" scheme="lovemefan.win/tags/UWP/"/>
    
  </entry>
  
  <entry>
    <title>UWP学习笔记 (二)   UWP开发环境及项目工程解析</title>
    <link href="lovemefan.win/2017/07/09/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%8F%8A%E9%A1%B9%E7%9B%AE%E5%B7%A5%E7%A8%8B%E8%A7%A3%E6%9E%90/"/>
    <id>lovemefan.win/2017/07/09/开发环境及项目工程解析/</id>
    <published>2017-07-09T14:48:00.000Z</published>
    <updated>2017-07-10T14:02:48.993Z</updated>
    
    <content type="html"><![CDATA[<p><strong> UWP学习笔记 (二)   UWP开发环境及项目工程解析：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>介绍开发环境及UWP的组成部分<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h1 id="开发环境及项目工程解析"><a href="#开发环境及项目工程解析" class="headerlink" title="开发环境及项目工程解析"></a>开发环境及项目工程解析</h1><p>工欲善其事，必先利其器。本章将介绍如何搭建Windows 10通用应用开发的环境以<br>及开发第一个Windows 10通用应用程序，并解析其工程结构和代码以及如何适配不同平<br>台的特殊代码。</p><h2 id="搭建开发环境"><a href="#搭建开发环境" class="headerlink" title="搭建开发环境"></a>搭建开发环境</h2><h3 id="开发环境的要求"><a href="#开发环境的要求" class="headerlink" title="开发环境的要求"></a>开发环境的要求</h3><p>进行Windows 10的开发，计算机需要达到以下要求</p><ul><li>1.操作系统Windows 10(64位专业版)。</li><li>2.系统盘需要至少8G的剩余硬盘空间。</li><li>3.内存达到4GB以上。</li><li>4.Windows10的手机模拟器基于Hyper-V,需要CPU支持二级地址转换技术。</li></ul><p>注意部分计算机会默认关闭主板BIOS的虚拟化技术，这时需要进入主板BIOS设置<br>页面开启虚拟化技术，然后再启动或者关闭Windows功能界面启动Hyper-V服务。</p><p>###开发工具的安装</p><p>Windows10 SDK已集成在Visual Studio上o 2015最新的版本中。开发工具可以直接到敝<br>软的Windows开发者网站进行下载(<a href="https //dev.windows.com">https //dev.windows.com</a>)，由于开发工具的更新速<br>度较快，请以官方最新版本为准。安装完成后，里面包含了程序的SDK.运行模拟器和编程<br>工具。Windows 10 Developer Tools包含的工具集合详细信息如下</p><ul><li>1.Visual Stuio是Winoows 10的集成开发环境(IDE)，其中包括了C#和XAML.代码编辑<br>功能、简单界面的布局与设计功能、编译程序、连接模拟器、部署程序，以及调试程序等功能。</li><li>2.Emulator是Winows 10的模拟器，开发者可以把应用程序部署到各种分辨率的模拟器上来检查程序运行效果。如果用户有Windows 10手机，可以直接使用手机来调试和运行自己编的程序。<h2 id="创建Windows-10-通用应用"><a href="#创建Windows-10-通用应用" class="headerlink" title="创建Windows 10 通用应用"></a>创建Windows 10 通用应用</h2>打开Visual Studio 2015/2017。本人用的是Visual Studio 2017。新建一个C#通用项目<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/cAjddJLAIJ.png?imageslim" alt="mark"><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/0LJL24D0fm.png?imageslim" alt="新建UWP项目"><br>编辑MainPage.xaml文件，添加以下代码<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Background</span>=<span class="string">"&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;"</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span> <span class="attr">Margin</span>=<span class="string">"125,105,0,0"</span> <span class="attr">TextWrapping</span>=<span class="string">"Wrap"</span> <span class="attr">Text</span>=<span class="string">"Hello World"</span> <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span> <span class="attr">FontSize</span>=<span class="string">"72"</span>/&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div></pre></td></tr></table></figure></li></ul><p>如图：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/G7JCl403Eg.png?imageslim" alt="hello world"><br>运行结果：<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/KCl6BB6mAG.png?imageslim" alt="结果"></p><h2 id="解析Hello-World-应用"><a href="#解析Hello-World-应用" class="headerlink" title="解析Hello World 应用"></a>解析Hello World 应用</h2><p>Hello World 项目工程中里面包含了MainPage.xaml文件、MainPage.xaml.cs文件、App.xaml文件、App.xaml.cs文件、Package.appxmanifest文件、AssemblyInfo.cs文件和一些图片文件。</p><h3 id="MainPage-xaml-文件"><a href="#MainPage-xaml-文件" class="headerlink" title="MainPage.xaml 文件"></a>MainPage.xaml 文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Page</span></span></div><div class="line">    <span class="attr">x:Class</span>=<span class="string">"HelloWorld.MainPage"</span></div><div class="line">    <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></div><div class="line">    <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></div><div class="line">    <span class="attr">xmlns:local</span>=<span class="string">"using:HelloWorld"</span></div><div class="line">    <span class="attr">xmlns:d</span>=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></div><div class="line">    <span class="attr">xmlns:mc</span>=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></div><div class="line">    <span class="attr">mc:Ignorable</span>=<span class="string">"d"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Background</span>=<span class="string">"&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span> <span class="attr">Margin</span>=<span class="string">"125,105,0,0"</span> <span class="attr">TextWrapping</span>=<span class="string">"Wrap"</span> <span class="attr">Text</span>=<span class="string">"Hello World"</span> <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span> <span class="attr">FontSize</span>=<span class="string">"72"</span>/&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Page</span>&gt;</span></div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;Page元素是一个程序页面的根元素，表示当前的XAML代码是一个页面，当前页面的其他所有UI元素都必须在Page元素下面。在当前的页面里面有两个控件：Grid控件、TextBlock法控件。其中，Grid控件是布局容器控件，所以在可视化视图上并没有看到Grid控件的显示。Text131ock控件是一个文本框控件，用于显示文本的内容，在可视化视图上看到的。“TextBlock”就是TextBlock控件。在上面的页面代码中可以看到TextBlock控件里面还有很多属性，这些属性用于定义控件的各种特性的设置。例如，”x Name。属性定义了<br>控件的名称，在后台代码里就可以通过名称来访问控件。Text。属性定义了TextBlock控<br>件文本显示的内容，等等。</p><h3 id="MainPage-xmal-cs文件"><a href="#MainPage-xmal-cs文件" class="headerlink" title="MainPage.xmal.cs文件"></a>MainPage.xmal.cs文件</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System;</div><div class="line"><span class="keyword">using</span> System.Collections.Generic;</div><div class="line"><span class="keyword">using</span> System.IO;</div><div class="line"><span class="keyword">using</span> System.Linq;</div><div class="line"><span class="keyword">using</span> System.Runtime.InteropServices.WindowsRuntime;</div><div class="line"><span class="keyword">using</span> Windows.Foundation;</div><div class="line"><span class="keyword">using</span> Windows.Foundation.Collections;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls.Primitives;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Data;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Input;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Media;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Navigation;</div><div class="line"></div><div class="line"><span class="comment">// https://go.microsoft.com/fwlink/?LinkId=402352&amp;clcid=0x804 上介绍了“空白页”项模板</span></div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 可用于自身或导航至 Frame 内部的空白页。</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainPage</span> : <span class="title">Page</span></div><div class="line">    &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainPage</span>(<span class="params"></span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">this</span>.InitializeComponent();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;MainPage.xmal.cs文件就是MainPage.xmal文件对应的后台代码的处理，在MainPage.xmal.cs文件会完成程序页面的控件的初始化工作和处理控件的触发事件。</p><h3 id="App-xaml-文件"><a href="#App-xaml-文件" class="headerlink" title="App.xaml 文件"></a>App.xaml 文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Application</span></span></div><div class="line">    <span class="attr">x:Class</span>=<span class="string">"HelloWorld.App"</span></div><div class="line">    <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></div><div class="line">    <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></div><div class="line">    <span class="attr">xmlns:local</span>=<span class="string">"using:HelloWorld"</span></div><div class="line">    <span class="attr">RequestedTheme</span>=<span class="string">"Light"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">Application</span>&gt;</span></div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;App.xaml文件是应用程序的入口XAML文件，一个应用程序只有一个该文件，并且<br>它还会有一个对应的App.xaml.cs文件。App.xaml文件的根节点是Appplication元素，它<br>里面的属性定义和空间定义与上面的Mainpage.xaml页面是一样的，不一样的地方是在<br>App.xam]文件中定义的元素是对整个应用程序是公用的，例如你在App.xaml文件中，添<br>加了〈Application，Resources〉元素来定义一些资源文件或者样式，这些资源在整个应用程序的所有页面都可以引用，而在Page的页画所定义的资源或者控件就只能否在当前的页面使用。</p><h3 id="App-xaml-cs"><a href="#App-xaml-cs" class="headerlink" title="App.xaml.cs"></a>App.xaml.cs</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System;</div><div class="line"><span class="keyword">using</span> System.Collections.Generic;</div><div class="line"><span class="keyword">using</span> System.IO;</div><div class="line"><span class="keyword">using</span> System.Linq;</div><div class="line"><span class="keyword">using</span> System.Runtime.InteropServices.WindowsRuntime;</div><div class="line"><span class="keyword">using</span> Windows.ApplicationModel;</div><div class="line"><span class="keyword">using</span> Windows.ApplicationModel.Activation;</div><div class="line"><span class="keyword">using</span> Windows.Foundation;</div><div class="line"><span class="keyword">using</span> Windows.Foundation.Collections;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Controls.Primitives;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Data;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Input;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Media;</div><div class="line"><span class="keyword">using</span> Windows.UI.Xaml.Navigation;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> 提供特定于应用程序的行为，以补充默认的应用程序类。</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">sealed</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">App</span> : <span class="title">Application</span></div><div class="line">    &#123;</div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 初始化单一实例应用程序对象。这是执行的创作代码的第一行，</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 已执行，逻辑上等同于 main() 或 WinMain()。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">App</span>(<span class="params"></span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">this</span>.InitializeComponent();</div><div class="line">            <span class="keyword">this</span>.Suspending += OnSuspending;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 在应用程序由最终用户正常启动时进行调用。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 将在启动应用程序以打开特定文件等情况下使用。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="e"&gt;</span>有关启动请求和过程的详细信息。<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLaunched</span>(<span class="params">LaunchActivatedEventArgs e</span>)</span></div><div class="line">        &#123;</div><div class="line">            Frame rootFrame = Window.Current.Content <span class="keyword">as</span> Frame;</div><div class="line"></div><div class="line">            <span class="comment">// 不要在窗口已包含内容时重复应用程序初始化，</span></div><div class="line">            <span class="comment">// 只需确保窗口处于活动状态</span></div><div class="line">            <span class="keyword">if</span> (rootFrame == <span class="literal">null</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="comment">// 创建要充当导航上下文的框架，并导航到第一页</span></div><div class="line">                rootFrame = <span class="keyword">new</span> Frame();</div><div class="line"></div><div class="line">                rootFrame.NavigationFailed += OnNavigationFailed;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (e.PreviousExecutionState == ApplicationExecutionState.Terminated)</div><div class="line">                &#123;</div><div class="line">                    <span class="comment">//<span class="doctag">TODO:</span> 从之前挂起的应用程序加载状态</span></div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="comment">// 将框架放在当前窗口中</span></div><div class="line">                Window.Current.Content = rootFrame;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (e.PrelaunchActivated == <span class="literal">false</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">if</span> (rootFrame.Content == <span class="literal">null</span>)</div><div class="line">                &#123;</div><div class="line">                    <span class="comment">// 当导航堆栈尚未还原时，导航到第一页，</span></div><div class="line">                    <span class="comment">// 并通过将所需信息作为导航参数传入来配置</span></div><div class="line">                    <span class="comment">// 参数</span></div><div class="line">                    rootFrame.Navigate(<span class="keyword">typeof</span>(MainPage), e.Arguments);</div><div class="line">                &#125;</div><div class="line">                <span class="comment">// 确保当前窗口处于活动状态</span></div><div class="line">                Window.Current.Activate();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 导航到特定页失败时调用</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span><span class="doctag">&lt;param name="sender"&gt;</span>导航失败的框架<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span><span class="doctag">&lt;param name="e"&gt;</span>有关导航失败的详细信息<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">OnNavigationFailed</span>(<span class="params"><span class="keyword">object</span> sender, NavigationFailedEventArgs e</span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Failed to load Page "</span> + e.SourcePageType.FullName);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 在将要挂起应用程序执行时调用。  在不知道应用程序</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 无需知道应用程序会被终止还是会恢复，</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 并让内存内容保持不变。</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="sender"&gt;</span>挂起的请求的源。<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="e"&gt;</span>有关挂起请求的详细信息。<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnSuspending</span>(<span class="params"><span class="keyword">object</span> sender, SuspendingEventArgs e</span>)</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">var</span> deferral = e.SuspendingOperation.GetDeferral();</div><div class="line">            <span class="comment">//<span class="doctag">TODO:</span> 保存应用程序状态并停止任何后台活动</span></div><div class="line">            deferral.Complete();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;App.xaml.cs 文件是一个控制整个应用程序的全局文件，整个应用程序的生命周期都在该文件中定义和处理。应用程序在整个生命周期会有三个状态：Running（运行），NotRunning（未运行）和 Suspended（挂起）<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170710/DmKlm3EJ1b.png?imageslim" alt="应用程序生命周期"></p><h3 id="Package-appxmanifest文件"><a href="#Package-appxmanifest文件" class="headerlink" title="Package.appxmanifest文件"></a>Package.appxmanifest文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">Package</span></span></div><div class="line">  <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/foundation/windows10"</span></div><div class="line">  <span class="attr">xmlns:mp</span>=<span class="string">"http://schemas.microsoft.com/appx/2014/phone/manifest"</span></div><div class="line">  <span class="attr">xmlns:uap</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/uap/windows10"</span></div><div class="line">  <span class="attr">IgnorableNamespaces</span>=<span class="string">"uap mp"</span>&gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Identity</span></span></div><div class="line">    <span class="attr">Name</span>=<span class="string">"f85505e4-25a4-4f06-b489-dfc4750ab693"</span></div><div class="line">    <span class="attr">Publisher</span>=<span class="string">"CN=Lovemefan"</span></div><div class="line">    <span class="attr">Version</span>=<span class="string">"1.0.0.0"</span> /&gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">mp:PhoneIdentity</span> <span class="attr">PhoneProductId</span>=<span class="string">"f85505e4-25a4-4f06-b489-dfc4750ab693"</span> <span class="attr">PhonePublisherId</span>=<span class="string">"00000000-0000-0000-0000-000000000000"</span>/&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">DisplayName</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">DisplayName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">PublisherDisplayName</span>&gt;</span>Lovemefan<span class="tag">&lt;/<span class="name">PublisherDisplayName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Logo</span>&gt;</span>Assets\StoreLogo.png<span class="tag">&lt;/<span class="name">Logo</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">TargetDeviceFamily</span> <span class="attr">Name</span>=<span class="string">"Windows.Universal"</span> <span class="attr">MinVersion</span>=<span class="string">"10.0.0.0"</span> <span class="attr">MaxVersionTested</span>=<span class="string">"10.0.0.0"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Dependencies</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Resources</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Resource</span> <span class="attr">Language</span>=<span class="string">"x-generate"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Resources</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Applications</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Application</span> <span class="attr">Id</span>=<span class="string">"App"</span></span></div><div class="line">      <span class="attr">Executable</span>=<span class="string">"$targetnametoken$.exe"</span></div><div class="line">      <span class="attr">EntryPoint</span>=<span class="string">"HelloWorld.App"</span>&gt;</div><div class="line">      <span class="tag">&lt;<span class="name">uap:VisualElements</span></span></div><div class="line">        <span class="attr">DisplayName</span>=<span class="string">"HelloWorld"</span></div><div class="line">        <span class="attr">Square150x150Logo</span>=<span class="string">"Assets\Square150x150Logo.png"</span></div><div class="line">        <span class="attr">Square44x44Logo</span>=<span class="string">"Assets\Square44x44Logo.png"</span></div><div class="line">        <span class="attr">Description</span>=<span class="string">"HelloWorld"</span></div><div class="line">        <span class="attr">BackgroundColor</span>=<span class="string">"transparent"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">uap:DefaultTile</span> <span class="attr">Wide310x150Logo</span>=<span class="string">"Assets\Wide310x150Logo.png"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">uap:SplashScreen</span> <span class="attr">Image</span>=<span class="string">"Assets\SplashScreen.png"</span> /&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">uap:VisualElements</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">Application</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Applications</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Capabilities</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Capability</span> <span class="attr">Name</span>=<span class="string">"internetClient"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Capabilities</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Package</span>&gt;</span></div></pre></td></tr></table></figure><p>&#160;&#160;&#160;&#160;Package.appxmanifest文件是Windows 10应用程序的清单文件，声明应用的标识、应<br>用的功能以及用来进行部署和更新的信息。可以在清单文件对当前的应用程序进行配置，<br>例如添加磁帖图像和初始屏幕、指示应用支持的方向以及定义应用的功能种类、Package<br>元素是整个清单的根节点；Identity元素表示应用程序版本发布者名称等信息mp:<br>Phoneldentity元素表示应用程序相关的唯一标识符信息Properties元素包含了应用程序<br>的名称、发布者名称等信息的设置；Prerequisites元素则是用于设置应用程序所支持的系<br>统版本号；Resources元素表示应用程序所使用资源信息，例如语言资源Applications元<br>素里面则包含了与应用程序相关的logo设置、闪屏图片设置等可视化的设置信息<br>Capabilities元素表示当前应用程序所使用的一些手机特定功能，例如internetclient表示<br>使用网络的功能。</p><p>&#160;&#160;&#160;&#160;Page.appxmanifest文件可以支持在可视化图形中进行设置，可以双击解决方案中<br>的package.appxmanifest文件来打开此文件的可视化编辑视图。我们可以直接在可视化界<br>面上设置程序的logo、磁贴、功能权限等。在后续的应用程序开发里面有些功能会需要在<br>Package.appxmanifest清单文件上进行相关的配置，到时候再进行详细的讲解。</p><h2 id="不同平台设备的适配"><a href="#不同平台设备的适配" class="headerlink" title="不同平台设备的适配"></a>不同平台设备的适配</h2><p>&#160;&#160;&#160;&#160;Windows 10通用应用程序针对特定的平台还会有一个子API的集合，当我们要使用<br>到某个平台的特定API的时候(例如手机相机硬件按钮触发事件)，这时候就需要调用特定<br>平台的API.因为Winclows 10应用程序是一个安装包，可以部署到所有的Windows 10系<br>统平台，所以这里就涉及一个八PI适配的问题，对特定平台的API进行特殊处理。除了特<br>定平台的API,还有一个适配的工作就是界面适配，Windows 10也提供了一系列的API来<br>给我们做界面的适配工作。</p><p>###特定平台的API调用</p><p>&#160;&#160;&#160;&#160;目前在Winclows 10里面有Windows Mobile Extension SDK和田indows Desktop<br>Extension SDK两个扩展的SDK分别表示手机版本和桌面版本的扩展SDK(在后面<br>章节里面若用到特定平台的API,都会进行区分标识)。这两个SDK都是直接内置在<br>Windows 10的开发SDK里面的，但是默认情况下不会给项目工程添加上，需要使用时可以<br>在项目工程里面引用，路径为Project-&gt;Add Reference-&gt;-Windows Universal-&gt;Extensions.<br>在使用特定平台的API的时候，必须判断当前的环境是否支持(不支持的平台调用将会引<br>发异常)。判断的方法为Windows.Foundation.Metadata.ApiInformation.IsTypepresent<br>(String type Name)，type Name表示带完整的命名空间的API的名称，返回true表示支持，<br>返回false表示不支持。</p><p>##界面适配<br>&#160;&#160;&#160;&#160;Windows 10系统支持多种硬件平台和分辨率，Windows 10系统底层对界面的适配色<br>昼非常强大的，同样的控件在不同的硬件平台上显示也可能会有差异，这种适配就是由<br>Windows 10系统自己来完成适配，来匹配不同的硬件和分辨率的显示效果。虽然<br>Windpws 10底层完成了各种控件的适配，但是很多时候还是需要在程序里来实现适配。在<br>开发通用程序的时候，要充分地考虑各种不同分辨率下的显示效果，可以通过可视化设计界<br>面和各种分辨率的模拟器来进行测试。适配界面有几种常用的编程技巧</p><ul><li>使用相对的布局控件来进行排列，如Grid.Relativepanel等;</li><li>使用相对的属性来设置控件在容器的位置，如orizontalAlignment.VerticalAlignment属性;</li><li>设置长度宽度的最大值最小值限制;</li><li>根据设备实际分辨率来设置长度宽度或者位置。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; UWP学习笔记 (二)   UWP开发环境及项目工程解析：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;介绍开发环境及UWP的组成部分&lt;br&gt;
    
    </summary>
    
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="UWP" scheme="lovemefan.win/tags/UWP/"/>
    
  </entry>
  
  <entry>
    <title>UWP学习笔记 (一) 初识UWP</title>
    <link href="lovemefan.win/2017/07/08/%E4%BB%80%E4%B9%88%E6%98%AFUWP/"/>
    <id>lovemefan.win/2017/07/08/什么是UWP/</id>
    <published>2017-07-08T03:02:00.000Z</published>
    <updated>2017-07-10T03:23:15.509Z</updated>
    
    <content type="html"><![CDATA[<p><strong> UWP学习笔记 (一) 初识UWP：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>认识UWP及开发前的一些准备<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><h2 id="什么是UWP"><a href="#什么是UWP" class="headerlink" title="什么是UWP"></a>什么是UWP</h2><blockquote><p>UWP即Windows 10 中的Universal Windows Platform简称。即Windows通用应用平台，在Win 10 Mobile/Surface(Windows平板电脑）/PC/Xbox/HoloLens等平台上运行，uwp不同于传统pc上的exe应用也跟只适用于手机端的app有本质区别。它并不是为某一个终端而设计，而是可以在所有windows10设备上运行。<br>微软在MWC 2015上首次展示了Win10统一平台战略的“代表作”：Win10通用应用（Windows10 Universal App）平台。在Win10中，所有设备将会运行在一个统一的Windows10系统核心之上。这样的设计使得一款应用可以在所有Win10设备上运行，今后Win10手机、平板电脑、笔记本电脑、PC、Xbox，甚至是3D全息眼镜HoloLens、巨屏触控Surface Hub和物联网设备例如Raspberry Pi 2等都不再有界限。新的通用平台允许新类型的Windows10通用应用真正实现一次编写、一套业务逻辑和统一的用户界面。应用在统一的Win10商店中将只会有一个安装包，而它将适用于所有Win10设备。[1]  在 Windows 10 Insider Preview 中的 Universal Windows Platform (UWP)借助 Windows 10 UWP 将在 Windows 应用中更上一层楼。UWP 会根据不同的设备类型使用相应的自适应 UI 控件，并使用运行 Windows 10 Insider Preview 的所有设备上必须具有的通用 API 集。简单的说，uwp就是通用应用的意思可以在电脑端，手机端，或其他设备通用。不用分别为不同的平台设计不同的软件。即一个软件就可以通吃。这是微软为win10系统定制的趋势。微软声称不管是开发者，还是使用者，都省事。   –百度百科</p></blockquote><p>首先来欣赏一下国内一些比较用心的UWP<br><strong>网易云音乐</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170708/HJG2J760dA.png?imageslim" alt="网易云音乐"></p><p><strong>IT之家</strong><br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170708/A65Aa9ECm6.png?imageslim" alt="IT之家"></p><h3 id="如何获取UWP"><a href="#如何获取UWP" class="headerlink" title="如何获取UWP"></a>如何获取UWP</h3><ul><li>1.从Window 应用商店获取。打开应用商店，搜索并选择下载。</li><li>2.<a href="https://www.windows10.pro/how-to-install-uwp-offline-packages" target="_blank" rel="external">离线部署</a><h2 id="开发准备"><a href="#开发准备" class="headerlink" title="开发准备"></a>开发准备</h2></li><li>开发环境：Windows 10 +Visual Studio 2015/2017    这里说明必须是<strong>Windows 10 </strong>，其他不行。VS 2015及以上才支持UWP开发，所以只能用VS 2015或2017。我目前的环境是 Win10 创意者 + VS 2017。</li><li>开发者模式。前往 设置-更新与安全-针对开发者-开发者模式</li><li>技术储备 C#/C++/VB 后期我们将使用C#进行开发程序的逻辑部分 <a href="http://bit.do/csharp-fundamentals" target="_blank" rel="external">C#微软官方教程（有中文字幕）</a></li><li>XAML(EXtensible Application Markup Language)。XAML是一种类似HTML的标记语言。用来设计UI部分后面会着重学习XAML语言。如果是有HTML基础的同学会很容易上手。<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>我对windows Phone有一种特有的情怀，从之前的Windows Phone 7 开始，我就喜欢Windows Phone上了其流畅顺滑的操作。到后来的Windows 10 mobile 。由于其软件生态太差，无法满足生活需求，我才不得不转向Android阵营。以前Android的卡慢是我无法忍受的，但随着Android 6.0/7.0，即将发布的Android 8.0，Android慢慢优化的系统也能适应大部分人的需求。Android，iOS是大势所趋，我为什么还要选择UWP这种有些人听都没听过的平台呢？</li><li>首先，我看重的是UWP的优势，一次编译，能在所有Win 10 设备运行，包括电脑、平板、手机(Win10 手机)、XBox、HoloLens、surface Hub、loT(物联网)。微软费尽心思推广Win10，就是为了增加UWP的运行环境。现在及未来Win10的装机量不容小视。而且UWP小巧轻便，前途无可限量。</li><li>其次，UWP有着自己的类似Google Play和Apple Store的应用商店，保证其安全性。</li><li>然后，我想尽自己一份微薄力量来完善Windows 生态，主要还是Windows phone的生态。<h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2></li><li>UWP微软官方学习课程 <a href="">官方MVA]</a> <a href="http://www.bilibili.com/video/av7997007/" target="_blank" rel="external">bilibili搬运</a><br>Microsoft Virtual Academy (MVA)   <a href="https://mva.microsoft.com/" target="_blank" rel="external">【链接】</a>是微软官方的一个免费的视频教学课堂。里面有大量的学习资源(有中文字幕)，强烈推荐。</li><li>深出浅入UWP （中文课程）<a href="http://www.bilibili.com/video/av3610677" target="_blank" rel="external">【bilibili】</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; UWP学习笔记 (一) 初识UWP：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;认识UWP及开发前的一些准备&lt;br&gt;
    
    </summary>
    
    
      <category term="APP开发" scheme="lovemefan.win/tags/APP%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习笔记" scheme="lovemefan.win/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="UWP" scheme="lovemefan.win/tags/UWP/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell篇 (一) 初识PowerShell</title>
    <link href="lovemefan.win/2017/07/05/PowerShell%E7%AF%87%20%20(%E4%B8%80)%E5%88%9D%E8%AF%86PowerShell/"/>
    <id>lovemefan.win/2017/07/05/PowerShell篇  (一)初识PowerShell/</id>
    <published>2017-07-05T12:53:23.000Z</published>
    <updated>2017-07-07T02:46:11.707Z</updated>
    
    <content type="html"><![CDATA[<p><strong> PowerShell篇 (一) 初识PowerShell：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>什么是PowerShell<br><a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><h1 id="初识PowerShell"><a href="#初识PowerShell" class="headerlink" title="初识PowerShell"></a>初识PowerShell</h1><p><code>作者：lovemefan</code> <code>以下资料收集于IT之家和知乎</code></p><h2 id="PowerShell的邂逅"><a href="#PowerShell的邂逅" class="headerlink" title="PowerShell的邂逅"></a>PowerShell的邂逅</h2><p>&#160;&#160;&#160;&#160;在我搭建我的博客的时候，cmd命令肯定是少不了的。除了cmd我们还可以选择Git Bash和PowerShell。<br>Git Bash是Git自带的一个命令行工具，用来上传，克隆等一些GitHub的操作。我之前也只知道Power Shell也是命令行，用它部署过离线的<a href="http://baike.baidu.com/link?url=J5GeaQ_aSSMscd2pdx3O7nv1xTjZ99hw4ppIODqWFTtGFqHuxw13ppv9HviTZ8IglPkdRudcQb4-expkEoxC_a" target="_blank" rel="external">UWP</a>，但平常不太会用所以没太在意。我只知道是微软为了替代cmd而特意在Windows 10里添加的新功能 。但在我使用Windows 10 创意者 的时候，正如往常使用鼠标右键+Shift ，本来是<strong>“从此处打开命令窗口”</strong>，结果就是没找到。反而这样显示<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/IKDe87048g.jpg?imageslim" alt="mark"><br>后来发现这是微软故意而为之的</p><h2 id="什么是PowerShell"><a href="#什么是PowerShell" class="headerlink" title="什么是PowerShell"></a>什么是PowerShell</h2><blockquote><p>&#160;&#160;&#160;&#160;Windows PowerShell 是一种命令行外壳程序和脚本环境，使命令行用户和脚本编写者可以利用 .NET Framework的强大功能。<br>&#160;&#160;&#160;&#160;它引入了许多非常有用的新概念，从而进一步扩展了您在 Windows 命令提示符和 Windows Script Host 环境中获得的知识和创建的脚本。<br>&#160;&#160;&#160;&#160;Windows PowerShell v3将伴随着MicrosoftHyper-V3.0和Windows Server 2012发布。PowerShell v3是一个Windows任务自动化的框架，它由一个命令行shell和内置在这个.NET框架上的编程语言组成。<br>&#160;&#160;&#160;&#160;PowerShell v3采用新的cmdlet让管理员能够更深入到系统进程中，这些进程可以制作成可执行的文件或脚本（script）。一条cmdlet是一条轻量命令，Windows PowerShell运行时间在自动化脚本的环境里调用它。Cmdlet包括显示当前目录的Get-Location，访问文件内容的Get-Content和结束运行进程的Stop-Process。<br>&#160;&#160;&#160;&#160;PowerShell v3在Windows Server 8中装载了Windows Management Framework 3.0。PowerShell运行时间也能嵌入到其它应用。——百度百科</p></blockquote><p><a href="https://msdn.microsoft.com/en-us/powershell" target="_blank" rel="external">微软PowerShell官网</a></p><p>&#160;&#160;&#160;&#160;从Windows10创意者更新开始，PowerShell正式上位替换了命令提示符CMD。不论是Windows+X右键超级菜单，还是Shift+文件夹空白处右键，又或在文件资源管理器文件菜单中，都没有命令提示符CMD的身影了，全部都由PowerShell取而代之了。长期使用CMD的Windows系统管理员或Windows命令行极客恐怕一时不能适应，使用CMD都只能去开始菜单-所有应用-Windows系统-命令提示符打开使用，或者Windows+R键然后输入cmd，或者在小娜输入框输入cmd，再或者在PowerShell中输入cmd(看来又绕回来了)。藏得这么深，显然是不想让人用了啊。不仅如此，Power Shell还登陆了Linux和MacOS<br><a href="https://zhuanlan.zhihu.com/p/26346821?utm_source=qq&amp;utm_medium=social" target="_blank" rel="external">在Linux下安装PowerShell</a><br>PoweShell上位图如下<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/bfiiJCEHd4.jpg?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;问题来了，PowerShell这货凭什么力压CMD，强行上位？如果你之前试用过PowerShell，相信它一定没有给你什么好印象。打开慢！反应慢！命令还陌生！还动不动就弹一大堆谁都看不懂错误，PowerShell究竟凭什么在Windows10创意者更新中替代命令提示符CMD呢？微软脑抽了？<br>微软没有脑抽，PowerShell是凭借其强大的功能替换CMD的。这里要先说明以下PowerShell究竟是什么东西，或者它究竟是不是东西？<br>&#160;&#160;&#160;&#160;Windows PowerShell不是东西，它是专为系统管理员设计的新Windows命令行shell，它包括交互式提示和脚本环境。PowerShell定义很多命令与操作系统，特别是与文件系统交互，能够启动应用程序，甚至操纵应用程序；PowerShell允许将几个命令组合起来放到文件里执行，实现文件级的重用，也就是说有脚本的性质；PowerShell能够充分利用.Net类型和COM对象，来简单地与各种系统交互，完成各种复杂的、自动化的操作。<br>&#160;&#160;&#160;&#160;用人话说就是CMD能做的PowerShell都能做，CMD不能做的Powershell也能做。就是这么自信！不信？赶紧打开PowerShell把下面的命令复制进去，看看它干了什么事，然后你用CMD做出来吧！<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># create new excel instance</span></div><div class="line"><span class="variable">$objExcel</span> = <span class="built_in">New-Object</span> -comobject Excel.Application</div><div class="line"><span class="variable">$objExcel</span>.Visible = <span class="literal">$True</span></div><div class="line"><span class="variable">$objWorkbook</span> = <span class="variable">$objExcel</span>.Workbooks.Add()</div><div class="line"><span class="variable">$objWorksheet</span> = <span class="variable">$objWorkbook</span>.Worksheets.Item(<span class="number">1</span>)</div><div class="line"><span class="comment"># write information to the excel file</span></div><div class="line"><span class="variable">$i</span> = <span class="number">0</span></div><div class="line"><span class="variable">$first10</span> = (ps | sort ws -Descending | select -first <span class="number">10</span>)</div><div class="line"><span class="variable">$first10</span> | <span class="keyword">foreach</span> -Process &#123;<span class="variable">$i</span>++; <span class="variable">$objWorksheet</span>.Cells.Item(<span class="variable">$i</span>,<span class="number">1</span>) = <span class="variable">$_</span>.name; <span class="variable">$objWorksheet</span>.Cells.Item(<span class="variable">$i</span>,<span class="number">2</span>) = <span class="variable">$_</span>.ws&#125;</div><div class="line"><span class="variable">$otherMem</span> = (ps | measure ws -s).Sum - (<span class="variable">$first10</span> | measure ws -s).Sum</div><div class="line"><span class="variable">$objWorksheet</span>.Cells.Item(<span class="number">11</span>,<span class="number">1</span>) = <span class="string">"Others"</span>; <span class="variable">$objWorksheet</span>.Cells.Item(<span class="number">11</span>,<span class="number">2</span>) = <span class="variable">$otherMem</span></div><div class="line"><span class="comment"># draw the pie chart</span></div><div class="line"><span class="variable">$objCharts</span> = <span class="variable">$objWorksheet</span>.ChartObjects()</div><div class="line"><span class="variable">$objChart</span> = <span class="variable">$objCharts</span>.Add(<span class="number">0</span>, <span class="number">0</span>, <span class="number">500</span>, <span class="number">300</span>)</div><div class="line"><span class="variable">$objChart</span>.Chart.SetSourceData(<span class="variable">$objWorksheet</span>.range(<span class="string">"A1:B11"</span>), <span class="number">2</span>)</div><div class="line"><span class="variable">$objChart</span>.Chart.ChartType = <span class="number">70</span></div><div class="line"><span class="variable">$objChart</span>.Chart.ApplyDataLabels(<span class="number">5</span>)</div></pre></td></tr></table></figure></p><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/CJi70f9ahF.png?imageslim" alt="mark"><br>没错，有点慢，等下吧，接下来它自动打开了excel，如图，我果然还是IT之家老粉丝啊<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/B8IDAdFlm4.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;上面一段代码是PowerShell界常见的一段神代码，很多初学者被其带入了PowerShell的大门。有效代码不过20来行，作用是把当前系统中最占内存的10个进程的数据发送到Excel中，并绘制成三维饼图。CMD是很难做到了，被替代也理所应当了。<br>&#160;&#160;&#160;&#160;PowerShell的定位是操作系统和应用程序的管理工具，从这个角度看，它是CMD的升级版，并非简单的对CMD进行扩展，事实上微软也不打算扩展和升级CMD了，以后PowerShell将全方位的替代CMD，目前CMD和PowerShell还是并存状态。<br>下面正式介绍PowerShell。</p><h3 id="（一）简单的命令"><a href="#（一）简单的命令" class="headerlink" title="（一）简单的命令"></a>（一）简单的命令</h3><p>&#160;&#160;&#160;&#160;在CMD中，命令是从非常简单（如attrib.exe）到非常复杂（如netsh.exe）的可执行程序，新入门用户一旦遇到复杂命令，只能束手无策，只能求助搜索引擎，解决当前需求之后，就把命令的用法抛诸脑后，下次使用又要重新学习，极其不便。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/526ijlFjLJ.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;PowerShell命令设计非常规范，它的命令由“动词”和“名词”两部分组成，比如“get”表示检索数据，“process”表示系统进程，把“get”和“process”组合起来的PowerShell命令就是“get-process”，意思是获取系统进程列表，这种命令在PowerShell中称为“cmdlet（读作“command-let”）”。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/CIBlH2i1f7.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;使用“动词-名词”结构还有一个好处，就是不同的“动词”和“名词”可以自由组合，很少的几个“动词”和“名词”就可以组合出大量的可用命令，使命令记忆量大为降低，只需记住简单的几个词语，就可以使用大量的命令，这是包括命令提示符CMD在内的Shell不具备的，并且不会产生歧义，对新用户非常友好。</p><h3 id="（二）别名系统"><a href="#（二）别名系统" class="headerlink" title="（二）别名系统"></a>（二）别名系统</h3><p>&#160;&#160;&#160;&#160;“动词-名词”结构的cmdlet固然对新手友好，但也带来了另一个问题，命令名称过长，在命令行交互使用时不方便，在命令行窗口输入命令可以使用Tab键进行补全，可是经常使用还是需要键入大量的内容，要是能够把命令缩短一些就好了。PowerShell在设计时已经考虑到了，为此创建了别名系统，之所以叫名别系统，是因为PowerShell中的别名非常强大，能够非常方便的对别名进行增加、删除、修改，还为之创建了别名驱动器，可以像访问文件系统驱动器一样方便的访问别名驱动器。<br>PowerShell非常贴心的为用户创建了大量内置别名，一方面减少了常用命令的输入长度，另一方面也为熟悉其它Shell而不熟悉PowerShell的用户提供了方便，常见Shell如bash、cmd，PowerShell都为用户提供了他们熟悉的别名。下面是可以在Powershell中使用的通用的Cmd.exe和UNIX命令的简短列表。<br><strong>在PowerShell下输入</strong><br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">get-alias</span></div></pre></td></tr></table></figure></p><p>以下只显示了部分，要想查询所有别名请用<code>alias</code>命令查询<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/6AghbjEgAg.png?imageslim" alt="mark"><br>&#160;&#160;&#160;&#160;PowerShell除了自带别名外，用户自己也可以创建别名，不仅仅可以为cmdlet创建别名，也可以为PowerShell函数、带参数的命令和包含完整路径的命令行程序创建别名。<br>比如为记事本创建别名，可以使用如下命令<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">New-Alias</span> np c:\windows\notepad.exe</div></pre></td></tr></table></figure></p><p>&#160;&#160;&#160;&#160;创建别名完成后，在命令行中输入np就能直接打开记事本。在命令行中创建的别名只能在当前命令行窗口中使用，如果想以后也能使用此别名，可以把以上命令保存在PowerShell配置文件中，以后无论是在命令行中，还是使用脚本，都可以在本机使用np别名了。<br><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/8h0kd2FD21.png?imageslim" alt="mark"><br>PowrShell配置文件位置可以使用$profile命令查询。</p><p>&#160;&#160;&#160;&#160;想查看当前命令行窗口可以使用的别名，可以进入别名驱动器查看，使用dir alias:就能查看所有能用的别名，也可以使用get-alias命令查看别名。</p><h3 id="三-管理任务"><a href="#三-管理任务" class="headerlink" title="(三) 管理任务"></a>(三) 管理任务</h3><p>Windows PowerShell的基本目标是使用户能够以交互方式或通过脚本更好、更容易地对系统进行管理控制，为了达成这个目标，PowerShell提供了大量命令来执行各种管理任务，让用户轻松完成管理系统任务。</p><h4 id="1、管理进程"><a href="#1、管理进程" class="headerlink" title="1、管理进程"></a>1、管理进程</h4><p>前面已经提过管理系统进程的命令，管理进程常用命令就是get-process命令和stop-process命令，get-process命令获取进程之后可以直接用管道发送给stop-process命令结束进程。比如，关闭之前打开的记事本，可以使用下面的命令很方便的关闭记事本。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">get-process</span> -Name notepad | <span class="built_in">stop-process</span></div></pre></td></tr></table></figure></p><h4 id="2、处理文件和文件夹"><a href="#2、处理文件和文件夹" class="headerlink" title="2、处理文件和文件夹"></a>2、处理文件和文件夹</h4><p>&#160;&#160;&#160;&#160;PowerShell使用Get-ChildItem获取文件夹中直接包含的所有项，它有系统内置别名dir和ls，使用CMD和BASH的用户均可以轻松上手。如果想查看C:中的文件夹和文件，直接使用dir c:，PowerShell立刻就会列出C:中的文件和文件夹。其它处理文件和文件夹的命令有Copy-Item、New-Item、Remove-Item等，具体用法可以使用get-help然后跟命令名称即可查询。</p><h4 id="3、处理系统服务"><a href="#3、处理系统服务" class="headerlink" title="3、处理系统服务"></a>3、处理系统服务</h4><p>&#160;&#160;&#160;&#160;可以像管理进程一样管理系统服务，Get-Service命令获取服务列表，Stop-Service命令停止服务，Start-Service命令启动服务，Suspend-Service命令挂起服务，Restart-Service命令重启服务，Set-Service服务设置服务属性。如果想一次性启动已经停止的服务，可以使用以下命令：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">get-service</span> | <span class="built_in">where-object</span> &#123;<span class="variable">$_</span>.Status <span class="nomarkup">-eq</span> <span class="string">"Stopped"</span>&#125; -exclude</div><div class="line">wisvc | <span class="built_in">start-service</span></div></pre></td></tr></table></figure></p><p>&#160;&#160;&#160;&#160;这行命名会把除wisvc之外的命令都启动，这只是一个示例，不要在自己电脑使用，启动所有服务会消耗大量系统资源。</p><h4 id="4、处理注册表"><a href="#4、处理注册表" class="headerlink" title="4、处理注册表"></a>4、处理注册表</h4><p>&#160;&#160;&#160;&#160;PowerShell可以非常方便的处理注册表项目，与进程和服务不同的是，PowerShell并未提供专用的注册表命令，而是使用处理文件和文件夹的命令，这并不奇怪，PowerShell为用户提供了注册表驱动器，可以很好的处理注册表项目。由于注册表对系统非常重要，错误处理注册表也许会导致系统出问题，处理注册表，特别是删除注册表项目要非常小心，最好能在处理注册表项目之前先备份要处理的项目。没有管理员权限也能处理部分注册表项目，这与regedit注册表编辑器不同，注册表编辑器必须使用管理员权限打开，然后才能操作项目。<br><strong>下面的表格列出了访问注册表所需的所有命令</strong></p><p><img src="http://oskhhyaq3.bkt.clouddn.com/blog/170705/LcIe6FFlJ4.png?imageslim" alt="mark"><br>PowerShell只提供了两个注册表驱动器HKCU:和HKLM:，其中HKLM:是HKEY_LOCAL_MACHINE的缩写，HKCU:是HKEY_CURRENT_USER的缩写，如果想要访问所有注册表驱动器，可以进入Microsoft.PowerShell.Core\Registry::。</p><h4 id="5、处理其它任务"><a href="#5、处理其它任务" class="headerlink" title="5、处理其它任务"></a>5、处理其它任务</h4><p>PowerShell还可以处理证书、防火墙、appx应用、打印机等任务。大家可以使用get-command命令查找相关命令。</p></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; PowerShell篇 (一) 初识PowerShell：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;什么是PowerShell&lt;br&gt;
    
    </summary>
    
    
      <category term="PowerShell" scheme="lovemefan.win/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>我为什么要建立这个博客</title>
    <link href="lovemefan.win/2017/07/04/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BB%BA%E7%AB%8B%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <id>lovemefan.win/2017/07/04/为什么要建立这个博客/</id>
    <published>2017-07-04T13:32:00.000Z</published>
    <updated>2017-07-07T02:47:01.590Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 我为什么要建立这个博客：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>建立博客的原因<br><a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><h1 id="为什么要建立这个博客"><a href="#为什么要建立这个博客" class="headerlink" title="为什么要建立这个博客"></a>为什么要建立这个博客</h1><p><code>作者：lovemefan</code>  <a href="www.github.com/lovemefan">我的GitHub</a></p><blockquote><p> &#160; &#160;&#160; &#160;我现在是一名即将大三的软件的学生。对编程还谈得上热爱，但至今也只能承认懂得点皮毛。为什么我要写这个博客？根本原因还是“懒”。我需要一个能够鞭策我一直坚持下去的东西。不过我也承认有一点点装B的嫌疑。我个人性格有点不羁，不喜欢按部就班，墨守成规。总想着做点疯狂的事。兴趣与时间总是矛盾的，可是时间又是从海绵里挤出来的。想想大一大二就这样“嗖”一般的过掉了…掉了…了。东西没学到多少，时间就快没了。看到有的同学能做一个看起来就很牛逼的程序，然后讲一堆从来没听过的专业术语。“卧槽！卧槽！！！”，“厉害了，我的哥”，“哇，大神，带我飞”，像这样的话没少听。一般这种时候我都会嫉妒一下。“TM为什么我不会”，“不过，不会也正常，我TM又不是神”，“妈蛋，下次去学，嗯！一定要学会”，“好像也就这样了，先放一放吧”。大多数情况下这件事就被无限延期了。<br>  &#160; &#160;&#160; &#160;首先，我总结了一个原因——懒。这种东西确实是人类的天敌，当然不排除某些勤奋已经成了日常的hentai。我有一些类似的经历，写作业写到两三点停不下来，还像打了鸡血一样很兴奋，鬼知道发生了什么。最长的一次在图书馆呆了13多个小时，从早上8点到晚上9点半，丝毫不想走。这种接近痴狂的人生，我个人觉得还蛮不错的。但是，但是，但是我又双叒叕被懒惰打败了，一不小心就荒废了下学业。结果就是期末成绩无情的嘲讽。懒惰这东西迟早，一定，必须面对。所以我觉得有必要做些事情，比如维护这博客。<br> &#160; &#160;&#160; &#160;其次，我吐槽下大学现在这个机制不是我想要的。大学也读了一半了，大多数人是这么过的：“上课可以不听，下课我看一下就好了。”，“这题好像老师讲过，不过我忘了。”“学习，学个屁”，“这次考试考哪些重点，帮我画一下”，“最后一个礼拜复习，祈祷不挂”，“复习什么，大家一起挂”，“成绩出来了，吐血，80多”（MD，老子一巴掌。。。）。然而结果不是我所期望的。考试这种东西确实是有存在的必要，但现在的考试总感觉变了味。老师说什么会考，就考什么，可能还是去年的原题。只要刷几套往年试卷，就可以考得很好，于是更多的人在钻研怎么“考试”，而不是解决问题。两年下来，你是更擅长考试，还是更擅长你的专业知识。我非常敬佩那些不以考试为目的教学的老师。就比如说那个陈胖子（没事，他看不到），他上的Java和c语言数据结构还是很有分量的。<br> &#160; &#160;&#160; &#160;假设大学四年我都这样过的话，满足吗？能力能提高多少呢？到底能学到多少东西呢？我现在可以C，C++，C#，Java，JavaScript，Matlab，Python…写一个Hello world，这样够吗?有人会说可以了，已经很不错了。可是野心不大一点，目标不远一点，不疯狂一点还是我的风格吗？现在还不疯狂一把，以后还有机会吗？你能保证未来不会因现在后悔吗？<br>所以，我建立了在个博客，并且想维护它。我想多学点东西。现在的初心是既可以记录学习的点滴，也可以每时每刻都鞭策着我，因为每更新一次这个东西，就会得到一种“快感”，成就感。更新GitHub时也是一样。私心还是有的，当然希望被人关注了，肯定是越多越好了。</p></blockquote><h2 id="博客的内容"><a href="#博客的内容" class="headerlink" title="博客的内容"></a>博客的内容</h2><p>我尽量能写就多写，最近在知乎，CDNS，简书…中看到大量IT干货，激发了我极大的兴趣<br>所以想着现在来建立这博客也不迟，算得上是学习了一种记录和鞭策吧</p><ul><li>一些学习过程中的问题，解决思路方法。</li><li>我感兴趣的事物，可能以后会写测评。</li><li>GitHub，知乎,IT之家等 一些趣味知识。</li><li>开发UWP。我曾经是一名wper（Lumia 1020），早在很久之前就打算学习UWP了，我希望能够坚持下去，尽管可能没有太多的时间和精力。就算是龟速更新，我也不会停止学习的。<h2 id="计划列表"><a href="#计划列表" class="headerlink" title="计划列表"></a>计划列表</h2></li><li>UWP，Android，web(大三必修)</li><li>UE4(虚幻4)，unity  (项目所需和个人兴趣爱好)</li><li>学些脚本语言，待定：PowerShell，JavaScript等</li><li>待定</li></ul></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 我为什么要建立这个博客：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;建立博客的原因&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
