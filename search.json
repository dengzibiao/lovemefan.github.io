[{"title":"Python小实践   微博爬虫之数据分析","url":"/2018/06/20/python 词云/","content":"# python 词云\n## 1. 前期准备\n### 1.1 下载相关库\n* jieba (用于分词)\n* matplotlib\n* wordcloud\n`注意事项:`\n如果相关库安装失败,请到[https://www.lfd.uci.edu/~gohlke/pythonlibs/](https://www.lfd.uci.edu/~gohlke/pythonlibs/)下载相应包手动安装,注意python版本号与操作系统位数,如下图,例如python3.6,64位操作系统则选择`cp36-win_amd64.whl`文件下载\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180905/6Ch55mcee6.png?imageslim)\n### 使用命令行安装相关库\n```powershell\npip install 包名或本地包路径\n```\n## 2. wordcloud\n>wordcloud基于Python的词云生成类库,很好用,而且功能强大\n[Github](https://github.com/amueller/word_cloud )\n[官方文档](https://amueller.github.io/word_cloud)\n[参考博文](https://blog.csdn.net/fly910905/article/details/77763086)\n\n\n## 3. 小试牛刀\n```python\n# coding: utf-8\n\nimport json\n\nimport jieba.analyse\nimport matplotlib as mpl\nfrom scipy.misc import imread\nfrom wordcloud import WordCloud\n\n# mpl.use('TkAgg')\nimport matplotlib.pyplot as plt\n\n\ndef keywords(mblogs):\n    text = []\n    for blog in mblogs:\n        keyword = jieba.analyse.extract_tags(blog['text'])\n        text.extend(keyword)\n    return text\n\n\ndef gen_img(texts, img_file):\n    data = ' '.join(text for text in texts)\n    image_coloring = imread(img_file)\n    wc = WordCloud(\n        background_color='white',\n        mask=image_coloring,\n        max_font_size=500,  # 设置字体最大值\n        font_path='Fonts/HYC6GFM.TTF',\n        random_state = 30  # 设置有多少种随机生成状态，即有多少种配色方案\n    )\n    wc.generate(data)\n    # plt.figure()\n    # plt.imshow(wc, interpolation=\"bilinear\")\n    # plt.axis(\"off\")\n    # plt.show()\n\n    wc.to_file(img_file.split('.')[0] + '_wc.png')\n\n\nif __name__ == '__main__':\n    keyword = 'shida'\n    mblogs = json.loads(open('result_{}.json'.format(keyword), 'r', encoding='utf-8').read())\n    print('微博总数：', len(mblogs))\n\n    words = []\n    for blog in mblogs:\n        words.extend(jieba.analyse.extract_tags(blog['text']))\n\n    print(\"总词数：\", len(words))\n    print(words)\n    gen_img(words, 'love.jpg')\n\n\n```\n效果图\n\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180905/EhLH9dKA6g.png?imageslim)\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180905/02i70841eb.png?imageslim)","tags":["编程语言"]},{"title":"Python小实践   下载漫画","url":"/2018/06/12/爬取前准备/","content":"\n# 爬取前准备\n[GitHub项目](https://github.com/lovemefan/python_tools)\n目标网站:[http://www.omanhua.com/comic/17521/](http://www.omanhua.com/comic/17521/)\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180612/jm0j3bkaiB.png?imageslim)\n## 分析网页\n```html\n<div class=\"subBookList\">\n<ul>\n    <li>\n        <a href='/comic/17521/366691/' title='332' target='_blank' class='new'>332</a>\n    </li>\n    <li>\n        <a href='/comic/17521/364901/' title='331' target='_blank' class='new'>331</a>\n    </li>\n    <li>\n        <a href='/comic/17521/364900/' title='腾讯动漫6周年福利活动！' target='_blank' class='new'>腾讯动漫6周年福利活动！</a>\n    </li>\n    <li>\n        <a href='/comic/17521/364899/' title='330。他们也是我们' target='_blank' class='new'>330。他们也是我们</a>\n    </li>\n    <li>\n    <a href='/comic/17521/364730/' title='329' target='_blank' class='new'>329</a>\n    </li>\n\t...\n</ul>\n```\n这里很明显 每个&lta&gt标签的href属性的值就是具体每一话的url\n先点进一话的页面看看\n[http://www.omanhua.com/comic/17521/366691/](http://www.omanhua.com/comic/17521/366691/)\n## 抓包分析\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180612/aJDLmKLIc8.png?imageslim)\n哈哈,没错这个,这是当前显示的一张漫画.但是只有一张.再看看下一张\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180612/iij3m7cKh7.png?imageslim)\n对比URL路径,我特么..,没有丝毫规律,陷入了僵局...,于是没有了后文.\n\n我就像看个漫画嘛,要不是腾讯收费,我&*%^*&%.\n但我还没有放弃,我打算看看js代码里有没有请求什么的痕迹\n就在我垂头顿足的时候,我发现了再网页里的一段神奇的代码\n```html\n<script type=\"text/javascript\">  var pVars = pVars || {}; var uzmh = uzmh || {};eval(function(p,a,c,k,e,d)\n{\n\te=function(c){return(c\n    <a?\"\":e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};\n\tif(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];\n\t\te=function(){return'\\\\w+'};c=1;};\n\twhile(c--)\n\t\tif(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);\n\treturn p;\n}('h i={\"g\":1,\"e\":\"4\",\"f\":\"1.0\",\"m\":\"/n/1/2/l.j\",\"k\":2,\"6\":\"3\",\"7\":[\"8.0\",\"c.0\",\"5.0\",\"b.0\",\"9.0\",\"a.0\",\"d.0\",\"o.0\",\"D.0\",\"E.0\",\"C.0\",\"A.0\",\"B.0\",\"I.0\",\"J.0\",\"H.0\",\"F.0\",\"G.0\",\"z.0\",\"s.0\",\"t.0\",\"r.0\"],\"p\":q,\"x\":y,\"w\":\"/u/v/4/3/\"}||{};\n',46,46,'jpg|17521|366691|332|一人之下|388594b38e|cname|files|38ba1443ba|38f89724c3|381bce4fb2|3886aef5b2|38b823d13d|3857d21ce5|bname|bpic|bid|var|cInfo|html|cid|index|burl|comic|38779d6852|finished|false|3971856aff|399a8af80e|39cc4b3915|tu|undefined|path|len|22|39f92a9dae|387ed1275c|38e5f2512a|385573db27|387ab75347|3866af1df0|38d7d1fc53|382c0123f1|386a165c3e|3859ad824b|38e85b3b5a'.split('|'),0,{}))\n\n</script>\n```\n## 小有成就\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180612/G5L5cHjgFf.png?imageslim)\n通过一比对\n哇!!!我抑制不住内心的激动,这不就是图片名吗?\n以上代码为例,包含了漫画编号(17521),漫画集数编号(36691),漫画集数(332),漫画名(一人之下),当前集的漫画图片数(len=22),以及每张图片的文件名(比如38ba1443ba.jpg)\n大功告成!!!\n# 爬取图片\n## 思路\n有之前准备已经可以再页面上得到每一话的URL,每一话中的图片URL,剩下的就是对页面里的数据提取,分别下载了\n## python 代码\n```python\n# -*- codeing: utf-8 -*-\n# @Time:2018/3/13 22:20\n# @Author:lovemefan\n# @File:一人之下漫画爬虫.py\n# @Software:PyCharm\nimport os\nfrom imp import reload\nimport re\nimport requests as requests\nfrom urllib.request import urlretrieve\n\nrequestSession = requests.session()\n# 保存一张图片\n# 输入参数imgUrl 图片路径,imgPath 保存路径\ndef savePicture(imgUrl, imgPath):\n    response = requests.get(imgUrl)\n    codimg = response.content\n    fn = open(imgPath, 'wb')\n    fn.write(codimg)\n    fn.close()\n\n# 一人之下的漫画路径\nurl = \"http://www.omanhua.com/comic/17521/\"\nhtml = requests.get(url)\nhtml.encoding = 'UTF-8'\n# print(html.text)\n# 先获取每一话\n# 先将数据块取出\nbookListBlock = re.findall(r'<div class=\"subBookList\">(.*?)</div></div>', html.text, re.S)\n# booklist 为每一话的URL的列表\nbookList = re.findall(\"</a></li><li><a href='(.*?)' title='(.*?)'\", bookListBlock[0],re.S)\n\n# 逐话操作\nfor index in bookList:\n    indexUrl = \"http://www.omanhua.com/\"+index[0]+'index.html'\n    indexHtml = requests.get(indexUrl)\n    indexHtml.encoding = 'UTF-8'\n    print(indexHtml.url)\n    # 获得当前话的每张图片路径\n    picList = re.findall(\"一人之下\\|(.*?)'\\.\", indexHtml.text)[0].split('|')\n    #删去piclist无用的信息\n    for item in picList[:]:\n        if item.__len__() != 10:\n            picList.remove(item)\n\n    print(index[1]+'共有%d页'%picList.__len__())\n    picUrlRoot = u'http://pic.fxdm.cc/tu/undefined/一人之下/'\n    # 指定存储位置\n    location = \"J:/一人之下\"\n    # 分开放图片\n    # for page in range(len(picList)):\n    #     if not os.path.exists(\"%s/%s/\"%(location,index[1])):\n    #         os.makedirs(\"%s/%s/\"%(location,index[1]))\n    #     picUrl = picUrlRoot+ index[1]+'/'+picList[page]+'.jpg'\n    #     path = \"%s/%s/%d.jpg\"%(location,index[1],page)\n    #     picUrl.encode('UTF-8')\n    #     #不下载已经下载过的图片,便于更新\n    #     if not os.path.exists(path):\n    #         savePicture(picUrl,path)\n    #         print(picUrl + ' 保存到了 ' + path)\n    #\n\n    # 一起放图片\n    if not os.path.exists(location):\n        os.makedirs(location)\n    for page in range(len(picList)):\n        picUrl = picUrlRoot+ index[1]+'/'+picList[page]+'.jpg'\n        path = \"%s/%s_%d.jpg\"%(location,index[1],page)\n        picUrl.encode('UTF-8')\n        # 不下载已经下载过的图片,便于更新\n        if not os.path.exists(path):\n            savePicture(picUrl,path)\n            print(picUrl + ' 保存到了 ' + path)\n\n\n\n```\n如果想要图片分开放,取消掉注释的代码,注释掉后面一段代码\n\n## 结果\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180612/idJgkeGKgi.png?imageslim)\n### 分开放\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180612/8iDf2611JC.png?imageslim)\n### 一起放\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180612/J4gh2Gb514.png?imageslim)\n\n我要去看漫画了,不要打扰我(/≧▽≦)/~┴┴ \n\n## [`源码在这`](https://github.com/lovemefan/python_tools/blob/master/%E6%BC%AB%E7%94%BB/%E4%B8%80%E4%BA%BA%E4%B9%8B%E4%B8%8B%E6%BC%AB%E7%94%BB%E7%88%AC%E8%99%AB.py)\n\n\n","tags":["编程语言"]},{"title":"Python小实践   微博爬虫","url":"/2018/05/28/抓取女神微博动态并保存到数据库/","content":"\n# 抓取女神微博动态并保存到数据库\n\n偶少有刷微博,常常错过女神的动态.微博客户端也常常不给我推送动态,于是我想自己给自己推送,而且还想把数据保存到自己的数据库里,于是有了接下来的尝试\n## 使用chrome浏览器抓包\n这里随便用什么软件都可以,目的只是抓包.本人使用chrome抓包\n按下F12,查看这两个getindex的数据包\n需要获得两个参数`uid`和`containerid`\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180528/7HhB9BliF2.png?imageslim)\t\n这里需要通过手机版weibo http://m.weibo.com来进行模拟请求，不是通过分析html代码再通过筛选来完成数据抓取。\n笔者先用postmen软件模拟一次post请求,返回结果如下\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180528/8c54K4H2E1.png?imageslim)\n返回的是json数据,接下来就是处理数据了\n## 模拟请求\n以下是python模拟的post请求\n``` python\nimport requests\nimport json\nimport pymysql\ncursor = db.cursor()\nurl=\"https://m.weibo.cn/api/container/getIndex\"\nfor k in range(10):\n    # 用户的uid,containerid,以及页数.每页最多为十条记录\n    payload={'type':'uid','value':'56xxxxxx00','containerid':'1076xxxxxxxx5400','page': '%d'%page}\n    r=requests.post(url,data=payload)\n    raw_text=r.text\n    d=json.loads(raw_text)\n``` \n由于每页只有最新的十条记录,所以需要把每一页的数据都存起来\n\n## 数据库建表\n笔者选择了一些基本信息存储,并没有保存评论信息.其中包括\n* itemid 每条微博的ID\n* scheme 每条微博的跳转链接(方便查看)\n* id 也是用于表示每条微博的ID,具体与itemid的区别笔者未深究\n* created_at 发微博的时间,精确到天\n* text 微博内容\n* source 微博来源,比如手机型号\n* user_id 发微博的用户ID \n``` sql\nSET FOREIGN_KEY_CHECKS=0;\n\n-- ----------------------------\n-- Table structure for mblog\n-- ----------------------------\nDROP TABLE IF EXISTS `mblog`;\nCREATE TABLE `mblog` (\n  `itemid` varchar(40) NOT NULL,\n  `scheme` varchar(100) DEFAULT NULL,\n  `id` varchar(20) DEFAULT NULL,\n  `created_at` varchar(10) DEFAULT NULL,\n  `text` text,\n  `source` varchar(20) DEFAULT NULL,\n  `user_id` varchar(20) DEFAULT NULL,\n  PRIMARY KEY (`itemid`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n  \n```\n## 分析数据并插入表中\n这里直接贴代码了,代码有详细注释\n```python\n# -*- codeing: utf-8 -*-\n# @Time:2018/5/28 14:31\n# @Author:lovemefan\n# @File:抓取女神微博动态保存到数据库.py\n# @Software:PyCharm\n#\n#原始URL:https://m.weibo.cn/p/100xxxxxxxx15400\nimport requests\nimport json\nimport pymysql\n# 打开数据库连接\ndb = pymysql.connect(\"localhost\", \"账号\", \"密码\", \"数据库名\", charset='utf8')\n# 使用cursor()方法获取操作游标\ncursor = db.cursor()\nurl=\"https://m.weibo.cn/api/container/getIndex\"\npage = 1\nsum = 0\nfor k in range(35):\n    # 用户的uid,containerid,以及页数.每页最多为十条记录\n    payload={'type':'uid','value':'56xxxxxx00','containerid':'10760xxxxxxxx400','page': '%d'%page}\n    r=requests.post(url,data=payload)\n    raw_text=r.text\n    d=json.loads(raw_text)\n    try:\n        for i in range(10):\n            print(\"第%d页第%d条\"% (page,i))\n            print(d[\"data\"][\"cards\"])\n            itemid = str(d[\"data\"][\"cards\"][i][\"itemid\"])\n            scheme = str(d[\"data\"][\"cards\"][i][\"scheme\"])\n            id = str(d[\"data\"][\"cards\"][i][\"mblog\"][\"id\"])\n            create_at = str(d[\"data\"][\"cards\"][i][\"mblog\"][\"created_at\"])\n            #将内容中的单引号换成双引号,否则插入数据库中会报错\n            text = str(d[\"data\"][\"cards\"][i][\"mblog\"][\"text\"]).replace(\"'\",\"\\\"\")\n            source = str(d[\"data\"][\"cards\"][i][\"mblog\"][\"source\"])\n            user_id = str(d[\"data\"][\"cards\"][i][\"mblog\"][\"user\"][\"id\"])\n            # sql插入语句\n            sql = \"insert ignore into mblog(itemid,scheme,id,created_at,text,source,user_id) VALUES('%s','%s','%s','%s','%s','%s','%s')\" % (itemid,scheme,id,create_at,text,source,user_id)\n            print(sql)\n            # 执行sql语句\n            cursor.execute(sql)\n            # 执行sql语句\n            db.commit()\n            sum = sum + 1\n    except IndexError:\n        # 但记录不满10条的时候,捕获list越界异常,自动跳过\n        pass\n\n    page = page + 1\n    print(\"第%d页执行成功\"%page)\n        # print([\"text\"])\ndb.close()\nprint(\"一共插入了%d的条记录\"% sum)\n```\n## 结果\n![mark](http://oskhhyaq3.bkt.clouddn.com/img/180528/ICjHHa2I31.png?imageslim)\n保存成功,然后就可以去翻数据库里的数据了.\n## 缺陷\n* 只能一次性的保存至今的记录,后续添加监听并邮箱推送\n* 后续可以添加数据分析,关键子词云","tags":["编程语言"]},{"title":"Android学习笔记 (三)   MP3播放器","url":"/2017/11/12/MP3播放器/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n 利用Intent 唤醒其他Activity或其他APP\n<!-- more -->\n<The rest of contents | 余下全文>\n# MP3播放器\n整个音乐播放器设计模仿网易云音乐风格\n工程源代码已上传至Github: [源码下载](https://github.com/lovemefan/MP3Player)\n\n**实现的功能**:\n* **1.**暂停,开始音乐,后台播放\n* **2.**进度条可拖动,能实现音乐跳转\n* **3.**能够循环切换上一曲和下一曲\n* **4.**播放完毕后自动下一曲\n* **5.**歌曲封面有旋转的动画\n* **6.**背景图片毛玻璃美化\n\n**待实现的功能**\n* 音乐列表\n* 本地音乐读取播放\n* 网络音乐播放\n\n## Music.java设计\n要播放多首音乐,首先设计一个音乐类用于存放歌曲信息,如歌曲名,封面图片的ID,音乐文件的ID\n`Music.java`\n```java\npackage com.lovemefan.mp3player;\n\nimport android.os.Bundle;\nimport android.os.Parcel;\nimport android.os.Parcelable;\n\n\n/**\n * Created by Lovemefan on 2017/11/7.\n */\n\npublic class Music implements Parcelable{\n    private String name;//歌曲名\n    private int coverId;//封面的ID\n    private int resourceId;//资源路径ID\n    public Music(String name, int coverId, int resourceId) {\n        this.name = name;\n        this.coverId = coverId;\n        this.resourceId = resourceId;\n    }\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getCoverId() {\n        return coverId;\n    }\n\n    public void setCoverId(int coverId) {\n        this.coverId = coverId;\n    }\n\n    public int getResourceId() {\n        return resourceId;\n    }\n\n    public void setResourceId(int resourceId) {\n        this.resourceId = resourceId;\n    }\n\n    @Override\n    public int describeContents() {\n        return 0;\n    }\n\n//    实现接口Parcelable需要重写下面两个方法\n    @Override\n    public void writeToParcel(Parcel parcel, int i) {\n        parcel.writeString(getName());\n        Bundle bundle = new Bundle();\n        bundle.putInt(\"coverId\",getCoverId());\n        bundle.putInt(\"resourceId\",getResourceId());\n        parcel.writeBundle(bundle);\n    }//将成员变量一一写入Parcel中\n    public static final Creator<Music> CREATOR = new Creator<Music>() {\n        @Override\n        public Music createFromParcel(Parcel parcel) {\n            Bundle bundle = parcel.readBundle();\n            return new Music(parcel.readString(), bundle.getInt(\"coverId\"), bundle.getInt(\"resourceId\"));\n        }\n\n        @Override\n        public Music[] newArray(int i) {\n            return new Music[i];\n        }\n    };\n}\n```\n## 后台服务类\n为了让音乐能够在app后台运行,就要设计一个Service.\n`MusicPlayService.java`\n```java\npackage com.lovemefan.mp3player;\n\nimport android.app.Service;\nimport android.content.Intent;\nimport android.media.MediaPlayer;\nimport android.os.Binder;\nimport android.os.IBinder;\n\nimport java.util.ArrayList;\n\npublic class MusicPlayService extends Service {\n    private MediaPlayer mediaPlayer = null;\n    public MusicPlayService() {\n    }\n    class MyBinder extends Binder{\n        public MediaPlayer getMediaPlayer(){\n            return mediaPlayer;\n        }\n    }\n    @Override\n    public IBinder onBind(Intent intent) {\n        // TODO: Return the communication channel to the service.\n        return new MyBinder();\n    }\n    @Override\n    public void onCreate() {\n        mediaPlayer = MediaPlayer.create(this,R.raw.aimer_ninelie);//设置初始值\n//        mediaPlayer.start();\n        super.onCreate();\n    }\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n    }\n}\n```\n##  MainActivity.java\n由MainActivity绑定MusicPlayService服务,让音乐在服务中运行.另外还要创建一个线程来更新进度条和当前时间.\n`MainActivity.java`\n```java\npackage com.lovemefan.mp3player;\n\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.ServiceConnection;\nimport android.content.res.AssetFileDescriptor;\nimport android.content.res.Resources;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.media.AudioAttributes;\nimport android.media.MediaPlayer;\nimport android.os.Build;\nimport android.os.Handler;\nimport android.os.IBinder;\nimport android.os.Message;\nimport android.support.annotation.RequiresApi;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.Window;\nimport android.view.WindowManager;\nimport android.view.animation.Animation;\nimport android.view.animation.AnimationUtils;\nimport android.view.animation.LinearInterpolator;\nimport android.view.animation.RotateAnimation;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.ProgressBar;\nimport android.widget.SeekBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\n\n\npublic class MainActivity extends AppCompatActivity implements ServiceConnection {\n    ArrayList<Music> musics = new ArrayList<>();\n    MediaPlayer mediaPlayer;//媒体播放器\n    ImageView playButton;//播放按钮\n    SeekBar progressBar ;//进度条\n    TextView title;//标题,用于显示歌名\n    TextView currentTime;//显示当前播放的时间\n    TextView duration;//显示歌曲时长\n    Handler handler ;//用于其他线程更新\n    CircleImageView cover;//显示歌曲的封面\n    LinearLayout root;//根面板\n    int musicProcess=0;//歌曲的进度;\n    int musicCurIndex = 0;//当前播放的歌曲的下标\n    Animation rotateAnimation ;\n\n    //用于handle的handleMessage处理不同的事件\n    static final int UpdateCurrentTime=0;//刷新当前播放时间标识符\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        supportRequestWindowFeature(Window.FEATURE_NO_TITLE);;//去掉标题栏\n        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);//去掉信息栏\n        setContentView(R.layout.activity_main);\n        activityInit();//相关控件初始化\n        bindService(new Intent(MainActivity.this,MusicPlayService.class), MainActivity.this, Context.BIND_AUTO_CREATE);//绑定服务\n\n        musics.add(new Music(\"ninelie\",R.drawable.nineliecover,R.raw.aimer_ninelie));\n        musics.add(new Music(\"像风一样\",R.drawable.linkwinds,R.raw.like_winds));\n        musics.add(new Music(\"Let It Out\",R.drawable.let_it_out,R.raw.let_it_out));\n        refreshMusicInfo(musics.get(0));\n        //\n        progressBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {\n            @Override\n            public void onProgressChanged(SeekBar seekBar, int i, boolean b) {\n                musicProcess = i;\n                //自动播放下一曲\n                if(mediaPlayer.getDuration() - musicProcess < 500){\n                    musicCurIndex = (musicCurIndex + 1) % musics.size();\n                    refreshMusicInfo(musics.get(musicCurIndex));\n                    play();//播放音乐\n                }\n            }\n\n            @Override\n            public void onStartTrackingTouch(SeekBar seekBar) {\n\n            }\n\n            @Override\n            public void onStopTrackingTouch(SeekBar seekBar) {\n                mediaPlayer.seekTo(musicProcess);//跳转到\n            }\n        });\n\n        handler = new Handler(new Handler.Callback(){\n        @Override\n        public boolean handleMessage(Message message) {\n            switch (message.what){\n                case UpdateCurrentTime:currentTime.setText(secondsToMinutes(mediaPlayer.getCurrentPosition()));break;\n            }\n            return true;\n        }\n        });\n        findViewById(R.id.playButton).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                play();\n            }\n        });\n\n    }\n    public void activityInit(){\n        playButton = (ImageView) findViewById(R.id.playButton);\n        progressBar = ( SeekBar) this.findViewById(R.id.progressBar);\n        currentTime = (TextView) findViewById(R.id.curTime);\n        duration = (TextView) findViewById(R.id.duration);\n        title = (TextView) findViewById(R.id.musicName);\n        cover = (CircleImageView) findViewById(R.id.musicCover);\n        root = (LinearLayout) findViewById(R.id.root);\n        rotateAnimation =  AnimationUtils.loadAnimation(this,R.anim.rotation);\n        rotateAnimation.setFillEnabled(true);\n        rotateAnimation.setFillAfter(true);\n        rotateAnimation.setInterpolator(new LinearInterpolator());\n\n    }\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        unbindService(MainActivity.this);\n    }\n\n    @Override\n    public void onServiceConnected(ComponentName componentName, IBinder iBinder) {\n        System.out.println(\"绑定成功\");\n        mediaPlayer = ((MusicPlayService.MyBinder)iBinder).getMediaPlayer();\n        progressBar.setMax(mediaPlayer.getDuration());//设置进度条\n        duration.setText(\"\"+secondsToMinutes(mediaPlayer.getDuration()));\n        currentTime.setText(\"00:00\");\n        System.out.println(mediaPlayer.getDuration());\n\n    }\n\n    @Override\n    public void onServiceDisconnected(ComponentName componentName) {\n\n    }\n    public String secondsToMinutes(int seconds){\n        int minute = seconds/60000;\n        int second = (seconds/1000)%60;\n        String  m = \"\"+ minute;\n        String  s = \"\" + second;\n        if (minute<10){\n            m = \"0\" + minute;\n        }\n        if(second<10){\n           s = \"0\" + second;\n        }\n        return m + \":\" + s;\n    }\n\n    public void play() {\n        if(mediaPlayer == null ){\n            System.out.println(\"mediaplayer初始化失败\");\n        }else{\n            if(mediaPlayer.isPlaying()){\n                mediaPlayer.pause();\n                cover.clearAnimation();\n                playButton.setImageResource(R.drawable.play);\n            }else{\n                mediaPlayer.start();\n\n                cover.startAnimation(rotateAnimation);\n                playButton.setImageResource(R.drawable.pause);\n            }\n            System.out.println(mediaPlayer.isPlaying());\n            new MyThread().start();\n        }\n    }\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\n    public void refreshMusicInfo(Music curMusic){\n        title.setText(curMusic.getName());//设置歌曲名\n        //        获取需要被模糊的原图bitmap\n        Resources res = getResources();\n        Bitmap scaledBitmap = BitmapFactory.decodeResource(res, curMusic.getCoverId());\n        //        scaledBitmap为目标图像，25是缩放的倍数（越大模糊效果越高）\n        Bitmap blurBitmap = BlurImage.toBlur(scaledBitmap, 50);\n        root.setBackground(new BitmapDrawable(blurBitmap));//设置根面板背景\n        cover.setImageResource(curMusic.getCoverId());//设置封面\n        if(mediaPlayer == null){\n            System.out.println(\"mediaplayer初始化失败\");\n        }else{\n            try {\n                AssetFileDescriptor afd = this.getResources().openRawResourceFd(curMusic.getResourceId());\n                if (afd == null) {\n                    Toast.makeText(this,\"音乐打开失败\",Toast.LENGTH_SHORT).show();\n                }else{\n                    mediaPlayer.stop();\n                    final AudioAttributes aa = new AudioAttributes.Builder().build();\n                    mediaPlayer.setAudioAttributes(aa);\n                    mediaPlayer.setAudioSessionId(mediaPlayer.getAudioSessionId() + 1);\n                    mediaPlayer.setDataSource(afd.getFileDescriptor(), afd.getStartOffset(), afd.getLength());//设置音乐源\n                    afd.close();//关闭文件\n                    mediaPlayer.prepare();//音乐准备\n                }\n            } catch (IOException e) {\n                Toast.makeText(this,\"音乐播放失败\",Toast.LENGTH_SHORT).show();\n            }\n                currentTime.setText(\"00:00\");//设置开始时间\n                duration.setText(secondsToMinutes(mediaPlayer.getDuration()));//获取音乐时长,并设置时间\n                progressBar.setProgress(0);//将播放进度条清零\n                playButton.setImageResource(R.drawable.play);//重新将按钮设置为播放\n            }\n        }\n\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\n    public void previouMusic(View view) {\n        //可实现循环切换\n        musicCurIndex = (musicCurIndex + musics.size() -1) % musics.size() ;//加上music.size()防止出现负数\n        refreshMusicInfo(musics.get(musicCurIndex));\n        play();\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\n    public void nextMusic(View view) {\n        //可实现循环切换\n        musicCurIndex = (musicCurIndex + 1) % musics.size();\n        refreshMusicInfo(musics.get(musicCurIndex));\n        play();\n    }\n\n    class MyThread extends Thread{\n        public  void run(){\n            while(mediaPlayer.isPlaying()){\n                progressBar.setMax(mediaPlayer.getDuration());\n                progressBar.setProgress(mediaPlayer.getCurrentPosition());\n                handler.sendMessage(Message.obtain());\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}\n```\n## 界面设计\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"com.lovemefan.mp3player.MainActivity\">\n\n    <LinearLayout\n        android:id=\"@+id/root\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"fill_parent\"\n        android:orientation=\"vertical\"\n        >\n\n        <LinearLayout\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1\"\n            android:alpha=\"0.4\"\n            android:background=\"#3c3c3c\"\n            android:orientation=\"horizontal\">\n\n            <TextView\n                android:id=\"@+id/musicName\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_weight=\"1\"\n                android:textAlignment=\"center\"\n                android:textColorHighlight=\"@color/colorAccent\"\n                android:textStyle=\"bold\"\n                android:textColor=\"#fff\"\n                android:textSize=\"18pt\" />\n        </LinearLayout>\n\n        <LinearLayout\n            android:id=\"@+id/centerArea\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"7.5\"\n            android:orientation=\"vertical\">\n\n            <RelativeLayout\n                android:layout_width=\"fill_parent\"\n                android:layout_height=\"fill_parent\"\n                android:layout_marginBottom=\"20dp\">\n\n                <ImageView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_centerHorizontal=\"true\"\n                    android:layout_centerInParent=\"true\"\n                    android:layout_centerVertical=\"true\"\n                    android:src=\"@drawable/record\" />\n\n                <com.lovemefan.mp3player.CircleImageView xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                    android:id=\"@+id/musicCover\"\n                    android:layout_width=\"225dp\"\n                    android:layout_height=\"225dp\"\n                    android:src=\"@drawable/nineliecover\"\n                    app:civ_border_color=\"#3c3c3c\"\n                    app:civ_border_width=\"2dp\"\n                    android:layout_centerHorizontal=\"true\"\n                    android:layout_centerInParent=\"true\"\n                    android:layout_centerVertical=\"true\"\n                    />\n            </RelativeLayout>\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"20dp\"\n                android:layout_marginTop=\"-20dp\"\n                android:orientation=\"horizontal\">\n\n                <TextView\n                    android:id=\"@+id/curTime\"\n                    android:layout_width=\"0pt\"\n                    android:layout_height=\"match_parent\"\n                    android:textAlignment=\"center\"\n                    android:layout_weight=\"1.2\" />\n\n                <SeekBar\n                    android:id=\"@+id/progressBar\"\n                    style=\"?android:attr/progressBarStyleHorizontal\"\n                    android:layout_width=\"0dp\"\n                    android:layout_height=\"match_parent\"\n                    android:layout_weight=\"7.6\" />\n\n                <TextView\n                    android:id=\"@+id/duration\"\n                    android:layout_width=\"0dp\"\n                    android:layout_height=\"match_parent\"\n                    android:layout_weight=\"1.2\" />\n\n            </LinearLayout>\n\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:id=\"@+id/playBar\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1.5\"\n            android:alpha=\"0.4\"\n            android:background=\"#3c3c3c\"\n            android:orientation=\"horizontal\">\n\n            <ImageView\n                android:id=\"@+id/previouButton\"\n                android:layout_width=\"60dp\"\n                android:layout_height=\"60dp\"\n                android:layout_marginTop=\"10dp\"\n                android:layout_weight=\"2\"\n                android:onClick=\"previouMusic\"\n                app:srcCompat=\"@drawable/previous\" />\n\n            <ImageView\n                android:id=\"@+id/playButton\"\n                android:layout_width=\"60dp\"\n                android:layout_height=\"60dp\"\n                android:layout_marginTop=\"10dp\"\n                android:layout_weight=\"2\"\n                app:srcCompat=\"@drawable/play\" />\n\n            <ImageView\n                android:id=\"@+id/nextButton\"\n                android:layout_width=\"60dp\"\n                android:layout_height=\"60dp\"\n                android:layout_marginTop=\"10dp\"\n                android:layout_weight=\"2\"\n                android:onClick=\"nextMusic\"\n                app:srcCompat=\"@drawable/next\" />\n        </LinearLayout>\n\n    </LinearLayout>\n</android.support.constraint.ConstraintLayout>\n```\n\n## 界面效果\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/171116/dlca6h3hAD.png?imageslim)\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/171116/0GCA5kkBc2.png?imageslim)\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/171116/hKd52055A0.png?imageslim)\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/171116/jbaI2K4LC3.png?imageslim)","tags":["学习笔记"]},{"title":"Android学习笔记 (二)   Intent唤醒其他Activity或APP","url":"/2017/10/20/Android 如何唤醒第三方APP/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n 利用Intent 唤醒其他Activity或其他APP\n<!-- more -->\n<The rest of contents | 余下全文>\n# Android 如何唤醒第三方APP\n## Intent类的通常用法\n### `1.启动 Activity：`\n\n>Activity 表示应用中的一个屏幕。通过将 Intent 传递给 startActivity()，您可以启动新的 Activity 实例。Intent 描述了要启动的 Activity，并携带了任何必要的数据。 \n如果您希望在 Activity 完成后收到结果，请调用 startActivityForResult()。在 Activity 的 onActivityResult() 回调中，您的 Activity 将结果作为单独的 Intent 对象接收。如需了解详细信息，请参阅 Activity 指南。\n\n### `2.启动服务：`\n\n>Service 是一个不使用用户界面而在后台执行操作的组件。通过将 Intent 传递给 startService()，您可以启动服务执行一次性操作（例如，下载文件）。Intent 描述了要启动的服务，并携带了任何必要的数据。 \n如果服务旨在使用客户端-服务器接口，则通过将 Intent 传递给 bindService()，您可以从其他组件绑定到此服务。如需了解详细信息，请参阅服务指南。\n\n### `3.传递广播：`\n\n>广播是任何应用均可接收的消息。系统将针对系统事件（例如：系统启动或设备开始充电时）传递各种广播。通过将 Intent 传递给 sendBroadcast()、sendOrderedBroadcast() 或 sendStickyBroadcast()，您可以将广播传递给其他应用。\n\n### `以下内容只讨论启动Activity`\n## Intent 启动Activity\n### 1.启动Activity\n`代码示例:`\n```java\n//调用系统默认浏览器打开百度\n    public void openBaidu(View view) {\n        Intent intent = new Intent(Intent.ACTION_VIEW);\n        intent.setData(Uri.parse(\"http://www.baidu.com\"));//设置url\n        startActivity(intent);\n    }\n    //调用系统电话,拨打10086.需要添加权限\n    public void openCall(View view) {\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) {\n            // TODO: Consider calling\n            //    ActivityCompat#requestPermissions\n            // here to request the missing permissions, and then overriding\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\n            //                                          int[] grantResults)\n            // to handle the case where the user grants the permission. See the documentation\n            // for ActivityCompat#requestPermissions for more details.\n            return;\n        }\n        startActivity(new Intent(Intent.ACTION_CALL, Uri.parse(\"tel:10086\")));\n    }\n    //调用系统信息应用\n    public void openSms(View view) {\n        Intent intent = new Intent(Intent.ACTION_VIEW);\n        intent.setType(\"vnd.android-dir/mms-sms\");\n        intent.putExtra(\"sms_body\",\"\"); //第二个参数为短信内容\n        startActivity(intent);\n    }\n    //打开QQ,uin=10000为打开qq10000的用户的聊天界面\n    public void openQQ(View view) {\n        EditText editText = (EditText)findViewById(R.id.editText);\n        startActivity(new Intent(Intent.ACTION_VIEW,Uri.parse(\"mqqwpa://im/chat?chat_type=wpa&uin=\"+ editText.getText()+\"&version=1\")));\n    }\n    //打开系统相机\n    public void openCamera(View view) {\n        startActivity(new Intent(\"android.media.action.STILL_IMAGE_CAMERA\"));\n    }\n    //打开微信\n    public void openWechat(View view) {\n        Intent intent = new Intent();\n        ComponentName cmp = new ComponentName(\"com.tencent.mm\",\"com.tencent.mm.ui.LauncherUI\");\n        intent.setAction(Intent.ACTION_MAIN);\n        intent.addCategory(Intent.CATEGORY_LAUNCHER);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        intent.setComponent(cmp);\n        startActivityForResult(intent, 0);\n\n\n    }\n    //打开新浪微博\n    public void openBlog(View view) {\n        Intent intent = new Intent();\n        ComponentName cmp = new ComponentName(\"com.sina.weibo\",\"com.sina.weibo.SplashActivity\");\n        intent.setAction(Intent.ACTION_MAIN);\n        intent.addCategory(Intent.CATEGORY_LAUNCHER);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        intent.setComponent(cmp);\n        startActivityForResult(intent, 0);\n    }\n```\n`以上代码主要用了两种方法设置将要跳转的Activity的信息,第一个是设置Uri,第二种是设置Component来实现跳转`\n### 2.启动APP\n对于第三方APP,笔者主要采用设置`Component`的方法\n\n\n在监听器或其他区域,输入以下代码\n\n```java\n\t\tIntent intent = new Intent();\n\t\t//ComponentName(String psk,String cls)\n\t\t//PKG的组件存在的包的名字。不能为空。CLS的PKG实现组件的内部类的名字。不能为空。\n        ComponentName cmp = new ComponentName(\"com.tencent.mm\",\"com.tencent.mm.ui.LauncherUI\");//启动微信\n        intent.setAction(Intent.ACTION_MAIN);\n        intent.addCategory(Intent.CATEGORY_LAUNCHER);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        intent.setComponent(cmp);\n        startActivityForResult(intent, 0);\n```\n\n## 一些安卓应用的pkg和cls\n`以下的APP都是根据笔者的当前手机的app导出得到的,所以只有部分常用的应用`\n导出App信息(pkg和cls)项目:[https://github.com/lovemefan/PackageMangerDemo](https://github.com/lovemefan/PackageMangerDemo) \n|应用|pkg |cls |\n|:--------|:----------:|:--------------:|\n|阿里云|com.alibaba.aliyun|com.alibaba.aliyun.biz.login.WelcomeActivity|\n|爱奇艺|com.qiyi.video|com.qiyi.video.WelcomeActivity|\n|百度贴吧|com.baidu.tieba|com.baidu.tieba.LogoActivity|\n|百度网盘|com.baidu.netdisk|com.baidu.netdisk.ui.Navigate|\n|备忘录|com.samsung.android.app.memo|com.samsung.android.app.memo.Main|\n|哔哩哔哩|tv.danmaku.bili|tv.danmaku.bili.ui.splash.SplashActivity|\n|车来了|com.ygkj.chelaile.standard|dev.xesam.chelaile.app.module.func.SplashActivity|\n|电话|com.android.contacts|com.android.dialer.DialtactsActivity|\n|电子邮件|com.samsung.android.email.provider|com.samsung.android.email.ui.activity.MessageListXL|\n|盖乐世空间|com.samsung.android.voc|com.samsung.android.voc.LauncherActivity|\n|高德地图|com.autonavi.minimap|com.autonavi.map.activity.SplashActivity|\n|高铁管家12306火车票|com.gtgj.view|com.gtgj.view.LaunchActivity|\n|黑域|me.piebridge.brevent|me.piebridge.brevent.ui.BreventActivity|\n|计算器|com.sec.android.app.popupcalculator|com.sec.android.app.popupcalculator.Calculator|\n|交管12123|com.tmri.app.main|com.tmri.app.ui.activity.TmriActivity|\n|京东|com.jingdong.app.mall|com.jingdong.app.mall.main.MainActivity|\n|联系人|com.android.contacts|com.android.contacts.activities.PeopleActivity|\n|猎吧出行|com.example.liabarcarandroid|com.liabarcar.guide.SplashActivity|\n|浏览器|com.sec.android.app.sbrowser|com.sec.android.app.sbrowser.SBrowserMainActivity|\n|录音机|com.sec.android.app.voicenote|com.sec.android.app.voicenote.main.VNMainActivity|\n|南昌航空大学|com.eteasun.nanhang|com.eteasun.nanhang.activity.WelcomeActvity|\n|全民K歌|com.tencent.karaoke|com.tencent.karaoke.module.splash.ui.SplashBaseActivity|\n|三星健康|com.sec.android.app.shealth|com.samsung.android.app.shealth.home.HomeMainActivity|\n|三星生活助手|com.samsung.android.app.sreminder|com.samsung.android.app.sreminder.phone.cardlist.SReminderActivity|\n|三星视频|com.samsung.android.onlinevideo|com.samsung.android.onlinevideo.list.activity.VideoList|\n|三星音乐|com.samsung.android.app.music.chn|com.samsung.android.app.music.common.activity.MusicMainActivity|\n|三星阅读|com.mci.smagazine|com.chaozh.iReader.ui.activity.WelcomeActivity|\n|三星云|com.samsung.multidevicecloud|com.kanbox.wp.Main|\n|扫描全能王|com.intsig.camscanner|com.intsig.camscanner.WelcomeActivity|\n|扇贝单词|com.shanbay.words|com.shanbay.words.startup.SplashActivity|\n|设置|com.android.settings|com.android.settings.Settings|\n|时钟|com.sec.android.app.clockpackage|com.sec.android.app.clockpackage.ClockPackage|\n|手机淘宝|com.taobao.taobao|com.taobao.tao.welcome.Welcome|\n|手机营业厅|com.sinovatech.unicom.ui|com.sinovatech.unicom.ui.WelcomeClient|\n|搜狐视频|com.sohu.sohuvideo|com.sohu.sohuvideo.FirstNavigationActivityGroup|\n|腾讯动漫|com.qq.ac.android|com.qq.ac.android.view.activity.SplashActivity|\n|腾讯课堂|com.tencent.edu|com.tencent.edu.module.SplashActivity|\n|腾讯视频|com.tencent.qqlive|com.tencent.qqlive.ona.activity.WelcomeActivity|\n|通卡宝|com.nci.tkb|com.nci.tkb.ui.SplashActivity|\n|网易有道词典|com.youdao.dict|com.youdao.dict.activity.DictSplashActivity|\n|网易云音乐|com.netease.cloudmusic|com.netease.cloudmusic.activity.LoadingActivity|\n|微博|com.sina.weibo|com.sina.weibo.SplashActivity|\n|微信|com.tencent.mm|com.tencent.mm.ui.LauncherUI|\n|我的文件|com.sec.android.app.myfiles|com.sec.android.app.myfiles.common.MainActivity|\n|闲鱼|com.taobao.idlefish|com.taobao.fleamarket.home.activity.InitActivity.Round|\n|相册|com.sec.android.gallery3d|com.sec.android.gallery3d.app.GalleryOpaqueActivity|\n|相机|com.sec.android.app.camera|com.sec.android.app.camera.Camera|\n|小米VR|com.mi.dlabs.vr.hulk|com.mi.dlabs.vr.hulk.launch.HulkLaunchActivity|\n|信息|com.android.mms|com.android.mms.ui.ConversationComposer|\n|一键锁屏|com.yujing.lockscreen|com.yujing.lockscreen.MainActivity|\n|应用商店|com.sec.android.app.samsungapps|com.sec.android.app.samsungapps.SamsungAppsMainActivity|\n|影梭|com.github.shadowsocks|com.github.shadowsocks.Shadowsocks|\n|优酷|com.youku.phone|com.youku.phone.ActivityWelcome|\n|悦动圈|com.yuedong.sport|com.yuedong.sport.main.WelcomeActivity_|\n|支付宝|com.eg.android.AlipayGphone|com.eg.android.AlipayGphone.AlipayLogin|\n|知乎|com.zhihu.android|com.zhihu.android.app.ui.activity.MainActivity|\n|智能管理器|com.samsung.android.sm|com.samsung.android.sm.app.dashboard.SmartManagerDashBoardActivity|\n|主题商店|com.samsung.android.themestore|com.samsung.android.themestore.activity.Launcher|\n|租八戒|com.rentpig.customer|com.rentpig.customer.main.WelcomeActivity|\n|AChm Free|com.pchen.achmfree|com.pchen.achm.MainActivity|\n|Chrome|com.android.chrome|com.google.android.apps.chrome.Main|\n|ES文件浏览器|com.estrongs.android.pop|com.estrongs.android.pop.app.openscreenad.NewSplashActivity|\n|Excel|com.microsoft.office.excel|com.microsoft.office.apphost.LaunchActivity|\n|Github|com.seasonfif.github|com.seasonfif.github.ui.activity.SplashScreenActivity|\n|IT之家|com.ruanmei.ithome|com.ruanmei.ithome.ui.MainActivity|\n|netkeeper|com.xinli.netkeeper|com.xinli.netkeeper.activitys.WelcomeActivity|\n|ofo共享单车|so.ofo.labofo|so.ofo.labofo.activities.EntryActivity|\n|QQ|com.tencent.mobileqq|com.tencent.mobileqq.activity.SplashActivity|\n|RD Client Beta|com.microsoft.rdc.android.beta|com.microsoft.rdc.ui.activities.HomeActivity|\n|S 换机助手|com.sec.android.easyMover|com.sec.android.easyMover.DistributionActivity|\n|S 日历|com.android.calendar|com.android.calendar.AllInOneActivity|\n|S Voice|com.samsung.voiceserviceplatform|com.samsung.voiceserviceplatform.ui.SVoiceMainActivity|\n|Samsung Gear|com.samsung.android.app.watchmanager|com.samsung.android.app.watchmanager.setupwizard.SetupWizardWelcomeActivity|\n|Super Pads|com.opalastudios.pads|com.opalastudios.pads.ui.MainActivity|\n|Survival Online|com.gameline.survivalcraftfree|com.unity3d.player.UnityPlayerActivity|\n|TapTap|com.taptap|com.play.taptap.ui.MainAct|\n|UC浏览器|com.UCMobile|com.UCMobile.main.UCMobile|\n|USIM卡应用|com.android.stk|com.android.stk.StkLauncherActivity|\n|WiFi万能钥匙|com.snda.wifilocating|com.lantern.launcher.ui.MainActivity|\n|Word|com.microsoft.office.word|com.microsoft.office.apphost.LaunchActivity|","tags":["学习笔记"]},{"title":"Excel 宏命令处理(一)","url":"/2017/10/18/Excel 宏命令处理/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n\n<!-- more -->\n<The rest of contents | 余下全文>\n# Excel 宏命令处理\n&nbsp;&nbsp;&nbsp;&nbsp;在我们工作的时候,常常会遇到大量的数据处理.人工操作费时费力,于是笔者开始百度看看有没有什么自动化的方法,最后发现了excel可以使用宏指令来实现编程式处理.\n## Excel VBA\n>  Visual Basic for Applications(VBA)是Visual Basic的一种宏语言，是微软开发出来在其桌面应用程序中执行通用的自动化(OLE)任务的编程语言。主要能用来扩展Windows的应用程式功能，特别是Microsoft Office软件。也可说是一种应用程式视觉化的Basic 脚本。该语言于1993年由微软公司开发的的应用程序共享一种通用的自动化语言--------Visual Basic For Application(VBA)，实际上VBA是寄生于VB应用程序的版本。微软在1994年发行的Excel5.0版本中，即具备了VBA的宏功能。\n要熟悉VBA，那么就不得不先了解宏和它们之间的关系。\nVBA被称为宏语言，但是它决不能和宏划上等号，宏是一条指令或者几条指令的集合，控制WORD或EXCEL等执行一连串的操作。而VBA则是不折不扣的高级语言，通过面向对象的方法来实现不能实现的功能。在编辑一个宏的时候，visual basic 编辑器会将这个宏记录为一个VBA过程\nVBA使应用程序具有生命的特征，以适应不同的环境，不同的应用，其主要表现为定制、自动化、协作化。\nVBA的特点是将VB语言与应用对象模型结合起来，处理各种应用需求。WORD VBA则是将VB应用于Word对象模型，或者说是用VB语言来操控这些Word对象模型，以达到各种应用的要求。所以，如果你想通过VBA控制WORD或EXCEL，必须同时熟悉VB语言和Word对象模型。\n\n## 如何使用VBA\n`视图-宏`\n![VBA](http://oskhhyaq3.bkt.clouddn.com/blog/171018/hHHBK2h4eh.png?imageslim)\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/171018/F7CBBaFhH3.png?imageslim)\n\n如果不能使用宏,可能你的excel禁用了.启动即可\n启用方式:\n`文件-选项-信任中心-信任中心设置-宏设置-启用所有宏`\n配合录制宏就可以试着写代码了\n\n## Sheet 分割示例\n```vbscript\nSub 自动分类()\n\n' 前提条件:总表已经根据某个要分类的标识字段排好了顺序\n' 此方法是将一张数据量非常大的sheet表按某个字段进行分类并分割成不同的sheet表\n' 同时将该sheet的名称命名为sheet内标识该sheet的字段的名称\n    Dim sheetPage As Integer\n    Dim length As Integer '总表的最后一列的列数\n    Dim i As Integer\n    Dim Name As String\n    Dim topLeft As Integer '所选区域的左上角\n    Dim bottomRight As Integer '所选区域的右下角\n    \n '  参数初始化\n    Name = \"2013\" '总表的名称\n    length = 1510 '总表的最后一列的列数\n    sheetPage = 4 '从第几张sheet开始生成\n    topLeft = 2   '初始从第几列开始\n    bottomRight = 2 '初始从第几列结束\n '\n    '先建表\n        For i = 2 To length\n            Sheets(Name).Select\n            bottomRight = i\n            If Range(\"A\" & topLeft).Value <> Range(\"A\" & bottomRight).Value Then\n                Sheets.Add After:=ActiveSheet\n                topLeft = bottomRight\n            End If\n        Next i\n    '割分\n    \n        topLeft = 2\n        For i = 2 To length\n           Sheets(Name).Select\n           \n           bottomRight = i\n           If Range(\"A\" & topLeft).Value <> Range(\"A\" & bottomRight).Value Then\n                Sheets(Name).Select\n                Range(\"A\" & topLeft & \":\" & \"G\" & (bottomRight - 1)).Select '选择从AtopLeft到Gbottom的区域等待复制\n                Selection.Copy\n                \n                Sheets(sheetPage).Select\n                Range(\"A1\").Select\n                ActiveSheet.Paste\n                Sheets(sheetPage).Name = Range(\"A1\").Value\n                sheetPage = sheetPage + 1\n                topLeft = bottomRight\n           End If\n            \n        Next i\n        \n         Sheets(\"2013\").Select\n         Range(\"A\" & topLeft & \":\" & \"G\" & (bottomRight - 1)).Select\n         Selection.Copy\n         \n         Sheets(sheetPage - 1).Select\n         Sheets.Add After:=ActiveSheet\n         Sheets(sheetPage).Select\n         \n         Range(\"A1\").Select\n         ActiveSheet.Paste\n         sheetName = Range(\"A1\").Value\n         Sheets(sheetPage).Name = sheetName\n         \n         topLeft = bottomRight\n    \n    \n    \nEnd Sub\nSub 排序()\n    For Each Sh In Worksheets\n        If Sh.Index > 4 Then  '限定工作表范围\n            Sh.Select\n            Columns(\"B:B\").Select\n            Sh.Sort.SortFields.Clear\n            Sh.Sort.SortFields.Add Key:=Range(\"B1\"), _\n                SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal\n            With Sh.Sort\n                .SetRange Range(\"A1:G69\")\n                .Header = xlNo\n                .MatchCase = False\n                .Orientation = xlTopToBottom\n                .SortMethod = xlPinYin\n                .Apply\n            End With\n            End If\n        Next\n\n\n\n\nEnd Sub\n\n\n\n```\n## [github源码下载](https://github.com/lovemefan/Excell-Macro)","tags":["宏命令"]},{"title":"Java学习笔记 (一)   基于Robot类的一些自动测试类的一些应用","url":"/2017/10/17/Java Robot类的一些应用/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n\n<!-- more -->\n<The rest of contents | 余下全文>\n# Java Robot类的一些应用\n##  Robot简介\n&nbsp;&nbsp;&nbsp;&nbsp;Robot类是JAVA程序实现自动测试，自动演示功能，或者是其它的一些鼠标和键盘控制的应用。出于这样的目的，自从JDK1.3开始，它就为我们提供了一个用来产生本机输入事件的机器人类－－java.awt.Robot.\n&nbsp;&nbsp;&nbsp;&nbsp;此类本来是通过操作鼠标键盘来完成软件的自动测试使用的,我们可以利用Robot类来实现一些我们想要达到的结果\n\n## Robot API\n[官方英文API](https://docs.oracle.com/javase/7/docs/api/java/awt/Robot.html)\n``Robot类其中的方法:``\n![methods](http://oskhhyaq3.bkt.clouddn.com/blog/171017/17j0LJJLEB.png?imageslim)\n\n\n通过查看API,Robot类提供了`截屏` ` 获取屏幕某一点的像素的颜色``键盘按下和释放事件``鼠标点击和释放事件``鼠标移动事件``鼠标滑轮事件`.\n\n## Demo\n这个demo是来实现模拟键盘的一个例子.实现一个信息轰炸功能.\n点击运行后,将光标移到输入区域,程序运行五秒之后会在光标出不断输出字符.\n其中还要使用到java.awt.event.KeyEvent类中的键值\n代码如下:\n```java\nimport java.awt.AWTException;\nimport java.awt.Robot;\nimport java.awt.event.KeyEvent;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class sendMessage {\n\t\n\tprivate int delayTime;\n\tprivate int range;\n\tRobot robot ;\n\tMap map;\n\tpublic sendMessage(int delayTime,int range)\n\t{\n\t\tthis.delayTime = delayTime;\n\t\tthis.range = range;\n\t}\n\tpublic void send() {\n\t\t//使用map 将控制键盘的常量存起来，好方便取用。\n\t\tmap = new HashMap();\n\t\tmap.put(0, 0x30);//键盘的0\n\t\tmap.put(1, 0x31);//键盘的1\n\t\tmap.put(2, 0x32);\n\t\tmap.put(3, 0x33);\n\t\tmap.put(4, 0x34);\n\t\tmap.put(5, 0x35);\n\t\tmap.put(6, 0x36);\n\t\tmap.put(7, 0x37);\n\t\tmap.put(8, 0x38);\n\t\tmap.put(9, 0x39);\n\t\ttry {\n\t\t\t\trobot = new Robot();\n\t\t\t\trobot.delay(5000);//延迟5秒供你打开编辑器\n\t\t\t\teditContent2();\n\t\t\t\t\n\t\t} catch (AWTException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t\t}\n\n\t}\n\tpublic static void main(String[] args) {\n\t\t//每隔几毫秒,以及数值的范围\n\t\tsendMessage demo = new sendMessage(1000,200);\n\t\tdemo.send();\n\t}\n\t/*********************************************\n\t *editContent1实验的功能输出从0到Range的一个方法\n   \t ********************************************/\n\tpublic void editContent1()\n\t{\n\t\t//让机器从0数到Range\n\t\tfor (int i = 0; i <= range; i++) {\n\t\t\trobot.delay(this.delayTime);\n\t\t\t// 个位数的处理\n\t\t\tif (i <= 9) {\n\t\t\t\trobot.keyPress((int) map.get(i));\n\t\t\t\trobot.keyRelease((int) map.get(i));\n\t\t\t\trobot.keyPress(KeyEvent.VK_ENTER);\n\t\t\t\trobot.keyRelease(KeyEvent.VK_ENTER);\n\t\t\t}\n\t\t\t// 两位数的处理\n\t\t\tif (i > 9 && i <= 99) {\n\t\t\t\tint a = i / 10;// 十位\n\t\t\t\tint b = i % 10;// 个位\n\t\t\t\trobot.keyPress((int) map.get(a));\n\t\t\t\trobot.keyRelease((int) map.get(a));\n\t\t\t\trobot.keyPress((int) map.get(b));\n\t\t\t\trobot.keyRelease((int) map.get(b));\n\t\t\t\trobot.keyPress(KeyEvent.VK_ENTER);\n\t\t\t\trobot.keyRelease(KeyEvent.VK_ENTER);\n\t\t\t}\n\t\t\t// 三位数的处理\n\t\t\tif (i > 99 && i <= 999) {\n\t\t\t\tint a = i / 100;// 百位\n\t\t\t\tint b = (i % 100) / 10;// 十位\n\t\t\t\tint c = i % 10;// 个位\n\t\t\t\trobot.keyPress((int) map.get(a));\n\t\t\t\trobot.keyRelease((int) map.get(a));\n\t\t\t\trobot.keyPress((int) map.get(b));\n\t\t\t\trobot.keyRelease((int) map.get(b));\n\t\t\t\trobot.keyPress((int) map.get(c));\n\t\t\t\trobot.keyRelease((int) map.get(c));\n\t\t\t\trobot.keyPress(KeyEvent.VK_ENTER);\n\t\t\t\trobot.keyRelease(KeyEvent.VK_ENTER);\n\t\t\t}\n\t\t}\n\t}\n\t/************************************************************************\n\t *editContent2为模拟键盘输入,在英文输入法状态下输出为拼音字母,中文输入法状态下为中文\n   \t ************************************************************************/\n\tpublic void editContent2()\n\t{\n\t\tfor (int i = 0; i < range; i++) {\n\t\t\trobot.delay(this.delayTime/2);\n\t\t\trobot.keyPress(KeyEvent.VK_C);\n\t\t\trobot.keyRelease(KeyEvent.VK_C);\n\t\t\trobot.keyPress(KeyEvent.VK_N);\n\t\t\trobot.keyRelease(KeyEvent.VK_N);\n\t\t\trobot.keyPress(KeyEvent.VK_M);\n\t\t\trobot.keyRelease(KeyEvent.VK_M);\n\t\t\trobot.keyPress(KeyEvent.VK_SPACE);\n\t\t\trobot.delay(this.delayTime/2); //注意,不过不加delay,在按下之母后立即继续按下后续操作会让输入法来不及相应,所以要延迟一小段时间\n\t\t\trobot.keyPress(KeyEvent.VK_ENTER);\n\t\t\trobot.keyRelease(KeyEvent.VK_ENTER);\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\n\n```\n上面有两个方法分别是`editContent1`和`editContent2`,前者仅仅是从键盘输入一些数字,后者是在打开中文输入法的情况下依次输入中文的拼音,模拟人为打字.\n\n运行结果如下:\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/171017/afljFb21L3.png?imageslim)","tags":["Java"]},{"title":"Python学习笔记 (四)  安装scrapy框架","url":"/2017/09/23/scrapy框架/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n安装scrapy框架\n<!-- more -->\n<The rest of contents | 余下全文>\n## scrapy框架\n>Scrapy，Python开发的一个快速、高层次的屏幕抓取和web抓取框架，用于抓取web站点并从页面中提取结构化的数据。Scrapy用途广泛，可以用于数据挖掘、监测和自动化测试。\nScrapy吸引人的地方在于它是一个框架，任何人都可以根据需求方便的修改。它也提供了多种类型爬虫的基类，如BaseSpider、sitemap爬虫等，最新版本又提供了web2.0爬虫的支持。 --百度百科\n\n## 安装准备\n* pip install whell\n* pip install lxml\n* pipi nstall twisted\n* pip install scrapy\n\n## 新建项目\n在控制台下输入:\n* 创建项目: scrapy startproject 项目名      \n* 创建爬虫: scrapy genspider -t basic 爬虫名 目标URL\n\n__项目目录如下:__\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170923/a4l4a8H3eJ.png?imageslim)\n\n## 运行项目\n\n  在控制台下输入: scrapy crawl  爬虫名\n ","tags":["编程语言"]},{"title":"Android学习笔记 (一)   按钮事件处理的五种方法","url":"/2017/09/12/Android 按钮事件的五种处理方法/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n 收集了五种处理按钮事件处理的方法\n<!-- more -->\n<The rest of contents | 余下全文>\n# Android 按钮事件的五种处理方法\n这里用一个小例子来说明:\n首先在新建的工程的activity_main.xml中添加一个Button和一个TextView.\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\t<android.support.constraint.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"com.lovemefan.myapplication3.MainActivity\">\n\n    <TextView\n        android:id=\"@+id/tv1\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World!\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintLeft_toLeftOf=\"parent\"\n        app:layout_constraintRight_toRightOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n    <Button\n        android:id=\"@+id/bt1\"\n        android:text=\"click\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n</android.support.constraint.ConstraintLayout>\n\n```\n## `1.使用匿名内部类`\n接下来在MainActivity.java文件中如下\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        Button bt = (Button) findViewById(R.id.bt1);\n       bt.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                TextView tv = (TextView) findViewById(R.id.tv1);\n                tv.setText(\"hello android\");\n            }\n        });//内部匿名类实现按键处理\n    }\n}\n\n```\n## `2.使用自定义单击事件监听类`\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        Button bt = (Button) findViewById(R.id.bt1);\n        bt.setOnClickListener(new myButtonClick());//自定义事件监听类实现按钮事件处理\n    }\n    public class myButtonClick implements View.OnClickListener{\n\n       @Override\n       public void onClick(View view) {\n           TextView tv = (TextView) findViewById(R.id.tv1);\n           tv.setText(\"hello android\");\n       }\n   }\n}\n\n```\n## `3.使用lambda语法实现按钮处理`\n首先确保环境支持`lambda`语法,即JDK在1.8及以上.\n```java\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        Button bt = (Button) findViewById(R.id.bt1);\n        bt.setOnClickListener((view)->{\n            TextView tv = (TextView) findViewById(R.id.tv1);\n            tv.setText(\"hello android\");\n        });//lambda语法实现按钮处理事件\n\n    }\n}\n```\n如果在Android Studio 下报错:\n```\nError:Jack is required to support java 8 language features. Either enable Jack or remove sourceCompatibility JavaVersion.VERSION_1_8.\n```\n请在`build.gradle(Module:app)`文件加入以下代码\n```\n# 在 build.gradle 文件中加入如下代码\ndefaultConfig {\n    ...\n    jackOptions {\n        enabled true\n    }\n}\n\ncompileOptions {\n    sourceCompatibility org.gradle.api.JavaVersion.VERSION_1_8\n    targetCompatibility org.gradle.api.JavaVersion.VERSION_1_8\n}\n```\n## `4.Activity继承View.OnClickListener`\n由Activity实现OnClick(View view)方法，在OnClick(View view)方法中用switch-case对不同id代表的button进行相应的处理： \n```java\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        Button bt = (Button) findViewById(R.id.bt1);\n        bt.setOnClickListener((view)->{\n            TextView tv = (TextView) findViewById(R.id.tv1);\n            tv.setText(\"hello android\");\n        });//lambda语法实现按钮处理事件\n\n    }\n    public void onClick(View view) {  \n  \n        switch (view.getId()){  \n            case R.id.bt:  \n                TextView tv = (TextView) findViewById(R.id.tv1);\n\t            tv.setText(\"hello android\");  \n            break;  \n            default:  \n            break;  \n        }  \n    }  \n}\n\n```\n这个方法适合多个按钮\n\n## `5.在XML文件指定按钮的onClick属性`\n在XML文件中显示指定按钮的onClick属性，这样点击按钮时会利用反射的方式调用对应Activity中的click()方法： \n在我之前学习的Windows 10 `UWP` 的app开发中都是用的这种方法.\nUWP也是类似的在相应的XAML代码中设置click属性即可,并且Visual Studio会自动为其添加相应方法.**\\\\(▔＾▔)/ 微软大法好**\n```xml\n<Button\n        android:onClick=\"sayHelloAndroid\"\n        android:id=\"@+id/bt1\"\n        android:text=\"click\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n```\n笔者经过百度了后,发现Android Studio 有快捷键来生成click相应的方法:点击onclick的属性值,然后按Alt+Enter\n![生成方法](http://oskhhyaq3.bkt.clouddn.com/blog/170912/5jeDm9Klik.png?imageslim)\n然后就生成了相应方法,这样可以避免手动写方法时不小心拼错单词了.\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170912/547A3AcCIg.png?imageslim)\n\n我个人比较喜欢用第五种方法.界面与后台代码可以完全分开,代码量也少.不过反射最大的缺点就是影响性能和效率.","tags":["学习笔记"]},{"title":"查四六级准考证号的一种方法","url":"/2017/08/29/四六级查询准考证方法/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n利用某软件返回值,js代码查询准考证号\n<!-- more -->\n<The rest of contents | 余下全文>\n# 四六级查询准考证方法\n## 前言\n身边有好多小伙伴们有忘记四六级准考证号而且还找不回准考证的情况.\n因为以前的九九宿舍不能用了,并且网上很少提供这种查询的网站(可能是我孤陋寡闻没听过)\n所以这里分享一个贴吧大神公布的方法(该贴已被删).实际上是利用某一个软件的bug,也不知道什么时候会被封.\n## 原理\n某一软件的一个查询口语的入口,即使没有报口语,在其内部的返回值中会包含准考证号的信息,利用这点获得准考证号\n\n## 操作流程\n最好用`谷歌的chrome浏览器`,我试过edge和UC都没用.其他没测试过.\n必要条件:\n* 身份证号\n* 姓名\n\n\n下面以chrome为例:\n1. 打开chrom,转到下面网址\n```http\nhttp://app.cet.edu.cn:7066/baas/app/setuser.do?method=UserVerify\n```\n这时候会出现一堆错误,没关系,继续下一步\n![chromerror](http://oskhhyaq3.bkt.clouddn.com/blog/170829/lFCj5E5CF5.png?imageslim)\n2.按下F12打开开发者工具,点击Console切换到控制台\n![控制台](http://oskhhyaq3.bkt.clouddn.com/blog/170829/i6Gc65eAbg.png?imageslim)\n3.在下面空白光标出输入以下代码\n```javascript\n(function(d, s){ d.body.appendChild(s = d.createElement('script')).src = 'http://code.jquery.com/jquery-1.9.1.min.js'})(document);\n\n```\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170829/JBGHkmkkm0.png?imageslim)\n如果出现`Uncaught SyntaxError: Unexpected end of input`字样,应该是代码不完整或部分拼写错误.重新复制一遍就好了\n4.接下来输入另一段代码\n```javascript\nvar url = \"http://app.cet.edu.cn:7066/baas/app/setuser.do?method=UserVerify\";\nvar ks_data = {\n\"ks_xm\": \"姓名\",\n\"ks_sfz\": \"身份证号\",\n\"jb\": \"四级填1,六级填2\"\n};\nvar postdata = {\n\"action\": \"\",\n\"params\": JSON.stringify(ks_data)\n};\n$.post(url = url, data = postdata, callback = function(data) {\ndata = $.parseJSON(data)\nconsole.log(data[\"ks_bh\"])\n})\n\n```\n将上述代码的姓名,身份证等参数替换掉,回车确定\n![返回准考证号](http://oskhhyaq3.bkt.clouddn.com/blog/170829/Icg2EBD67j.png?imageslim)\n如果出现其他错误,可能你的`信息输入有误`,请核对再输一遍.如果还有错则该考生不存在(没报考).\n这个只能查最近一次的准考证.\n好了,大功告成\n点击下面:\n[四级查询路口 http://cet.neea.edu.cn/cet/](http://cet.neea.edu.cn/cet/)\n 然后就可以查分数了.\n 溜了溜了...","tags":["JavaScript"]},{"title":"Python学习笔记 (三)  简单爬虫实战","url":"/2017/08/19/Python 实战/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\nPython实战 抓取网页\n<!-- more -->\n<The rest of contents | 余下全文>\n# Python 实战\n## 简单的静态文本抓取\n### request库命令安装\nwindows下进入cmd ，定位到你Python的安装路径，我的是D:\\Program Files\\Python27\\Scripts。因为以后常用，不妨加到环境变量中，以后就不用在定位到安装路径，直接调用。\n然后在cmd、PowerShell、XShell中输入以下命令\n* Windows :  pip install request\n* Linux :  sudo pip install request\n* Mac OS :  sudo pip install request  \n### 抓取目标：\n* [http://my.0ff0.net/](http://my.0ff0.net/)\n* [https://get.freevpnss.me/#vpn](https://get.freevpnss.me/#vpn)\n\n以上是两个免费的VPN网站，目标是将网站中的VPN服务器IP、用户名、密码、IPSec密钥等相关信息抓取下来以便使用。本次程序需要用到request库，如果没有安装\n### 网站分析\n#### 第一个网站\n![http://my.0ff0.net](http://oskhhyaq3.bkt.clouddn.com/blog/170726/i9GiJIBJcd.png?imageslim)\n查看其源码如下：\n![my.0ff0.nety源码](http://oskhhyaq3.bkt.clouddn.com/blog/170726/fj8DBkdhgD.png?imageslim)\n第一个网站结构和源码都比较简单，直接使用Python的正则表达式匹配其字符就行\n直接上源代码：\n```python\n# coding:utf-8\nimport requests\nimport re\nhtml = requests.get(\"http://my.0ff0.net/\")\n# html.encoding = 'utf-8'\ncontent = re.findall('<div class=\"content\">(.*?)</div>',html.text,re.S)[0]\nserverip =re.findall('<span id=\"ip\">(.*?)</span>',content,re.S)\nuser =re.findall('<span id=\"user\">(.*?)</span>',content,re.S)\npassword =re.findall('<span id=\"pw\">(.*?)\\n</span>',content,re.S)\nsecret =re.findall('<span id=\"secret\">(.*?)</span>',content,re.S)\n\n\n# print html.text\nprint \"服务器地址: %s \"%str(serverip[0])\nprint \"用户名: %s\"%str(user[0])\nprint \"密码: %s\"%str(password[0])\nprint \"IPSec密钥: %s\"%str(secret[0])\nprint \"连接方式：PPTP和Cisco IPSec(IKEv1)\"\n```\n\n运行结果：\n![运行结果](http://oskhhyaq3.bkt.clouddn.com/blog/170726/maJClL2Ha4.png?imageslim)\n\n#### 第二个网站\n![freeVPN](http://oskhhyaq3.bkt.clouddn.com/blog/170820/hkebHGd2L7.png?imageslim)\n**F12查看源码,同样用正则表达式吧需要的字符匹配出来.**\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170820/L0g8L9L5C5.png?imageslim)\n### 源码\n```python\n# coding:utf-8\nfrom encodings import gb18030\n\nimport requests\nimport re\nhtml = requests.get(\"http://jn9.org/indexcn.html\")\nhtml.encoding = 'utf-8'\n\ntarget = re.findall('<div class=\"panel-heading\">(.*?)<span class=\"label label-success\">Active</span></p>.*?</div>.*?</div>.*?</div><!-- /.col-sm-4 -->',html.text,re.S)\nfor i in range(target.__len__()):\n    adress = re.findall('<h2 class=\"panel-title\">(.*?)</h2>',target[i],re.S)\n    contend = re.findall('<p>(.*?)</p>',target[i],re.S)\n    if adress:\n        print \"地区:\",adress[0]\n    for each in contend:\n        result = re.sub('<span class=\"hidden\">(.*?)</span>', '',each)\n        print result\n    print \"\\n\\n\"\n```\n运行结果如下:\n![效果图](http://oskhhyaq3.bkt.clouddn.com/blog/170820/49jGcfChGJ.png?imageslim)\n`好了,翻个墙出去玩耍了.`","tags":["编程语言"]},{"title":"数学建模论文格式分析","url":"/2017/08/10/论文格式分析鉴赏/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n关于数学建模论文格式分析 教会你怎么写相关论文\n<!-- more -->\n<The rest of contents | 余下全文>\n# 论文格式分析鉴赏\n## 论文格式\n根据分析论文中的格式，可以总结出以下格式：\n### 摘要\n摘要的特点首先在于'短\"，要简短扼要，高度浓缩，目的是节省老师的时间、提高效率。老师阅读        摘要后，就能够确切地了解论文的主要内容和结果，决定是否需要阅读全文。摘要最好能引人入胜，使之产生看完全文的兴趣。尽量简述对问题的解决思路，最好先一句话用什么方法解决了什么类型的问题。\n* 模型的数学归类（在数学上属于什么类型）\n* 建模的思想（思路）\n* 算法思想（求解思路）\n* 建模特点（模型优点，建模思想或方法，算法特点，结果检验，灵敏度 分析，模型检验）\n* 主要结果（数值结果，结论）（回答题目所问的全部“问题”） \n### 问题分析\n根据题目给出的已知条件，结合自己的理解，分析问题的解决方法，引出解题的思路．一个一个问题有条理得分析问题．最后一段总结．\n\n### 模型假设\n首先基本假设的合理性很重要。\n* 根据题目中条件和要求作出假设 \n* 关键性假设不能缺，假设要切合题意 \n\n### 符号说明\n根据范文分析，就是将本文将会出现的数学符号通过表格清晰明了得进行说明。\n如下图\n![符号说明](http://oskhhyaq3.bkt.clouddn.com/blog/170810/EfCjfI7k8d.png?imageslim)\n\n### 模型建立与求解\n#### 基本模型： \n*  首先要有数学模型：数学公式、方案等 \n* 基本模型，要求 完整，正确，简明\n#### 简化模型:\n * 要明确说明：简化思想，依据 \n* 简化后模型，尽可能完整给出 \n模型要实用，有效，以解决问题有效为原则。 数学建模面临的、要解决的是实际问题，不追求数学上。高（级）、深（刻）、 难（度大）。\n#### 模型要求：\n* 能用初等方法解决的、就不用高级方法;\n* 能用简单方法解决的，就不用复杂方法; \n* 能用被更多人看懂、理解的方法;\n* 就不用只能少数人看懂、理解的方法\n* 鼓励创新，但要切实，不要离题搞标新立异数模创新可出现在 \n* 建模中，模型本身，简化的好方法、好策略等， \n#### 模型求解中 \n* 结果表示、分析、检验，模型检验 \n* 推广部分 \n#### 在问题分析推导过程中，需要注意的问题： \n* 分析：中肯、确切 \n* 术语：专业、内行；；  \n* 原理、依据：正确、明确, \n* 表述：简明，关键步骤要列出 \n* 忌：外行话，专业术语不明确，表述混乱，冗长。\n\n### 模型评价和推广\n#### 模型评价:\n* 优点突出（预测问题关注精度，优化问题关注性能，分类问题关注准确性，等等，根据实际问题写模型优点，一定要写到点上）\n* 缺点不回避，但是缺点要挑无关痛痒的讲，可以将假设中的不足或局限性作为缺点。\n模型推广:\n* 适用的场景、人群、范围等等（不可硬套，根据实际题目实际情况来写） \n* 推广或改进方向时，不要玩弄新数学术语（让人看得懂，复杂也要简单化，切莫把简单的描述的过于复杂）\n\n### 参考文献\n按要求的格式写\n尽量引用好的文献、书籍、资料等等\n\n### 附录\n* 程序代码（基本上是代码）\n* 详细的结果，详细的数据表格，可在此列出，但不要错，错的宁可不列。\n* 主要结果数据应在正文中列出，不怕重复。 ","tags":["论文"]},{"title":"Python学习笔记 (二)  第三方库安装","url":"/2017/07/22/第三方库安装/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\nPython的第三方库的安装\n<!-- more -->\n<The rest of contents | 余下全文>\n## 第三方库安装\n### 命令安装\nwindows下进入cmd ，定位到你Python的安装路径，我的是D:\\Program Files\\Python27\\Scripts。因为以后常用，不妨加到环境变量中，以后就不用在定位到安装路径，直接调用。\n然后在cmd、PowerShell、XShell中输入以下命令\n* Windows :  pip install xxx\n* Linux :  sudo pip install xxx\n* Mac OS :  sudo pip install xxx   \n\n     \n`少用easy_install 因为只能安装不能卸载`\n### 自定义安装\n 当出现问题或者不想用命令安装时  请戳>>[http://www.lfd.uci.edu/~gohlke/pythonlibs/](http://www.lfd.uci.edu/~gohlke/pythonlibs/)\n 这个网站有Python所有的第三方库文件。将下载好的文件原后缀.whl改为.zip,并解压到python安装目录的Lib文件夹下。","tags":["编程语言"]},{"title":"Python学习笔记 (一)  初识Python","url":"/2017/07/22/初识Python/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n认识Python及搭建开发环境\n<!-- more -->\n<The rest of contents | 余下全文>\n#  初识Python\n##  Python\n>Python[1]  （英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。\nPython是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议[2]  。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。\nPython具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中[3]  有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。--百度百科\n\n***个人认为Python是一款非常适合初学者的语言，同时有面向过程和对象的特性，语法简单非常接近自然语言，功能强大***\n## 发展历程\n>自从20世纪90年代初Python语言诞生至今，它已被逐渐广泛应用于系统管理任务的处理和Web编程。\nPython的创始人为Guido van Rossum。1989年圣诞节期间，在阿姆斯特丹，Guido为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，做为ABC 语言的一种继承。之所以选中Python（大蟒蛇的意思）作为该编程语言的名字，是因为他是一个叫Monty Python的喜剧团体的爱好者。\nABC是由Guido参加设计的一种教学语言。就Guido本人看来，ABC 这种语言非常优美和强大，是专门为非专业程序员设计的。但是ABC语言并没有成功，究其原因，Guido 认为是其非开放造成的。Guido 决心在Python 中避免这一错误。同时，他还想实现在ABC 中闪现过但未曾实现的东西。\n就这样，Python在Guido手中诞生了。可以说，Python是从ABC发展起来，主要受到了Modula-3（另一种相当优美且强大的语言，为小型团体所设计的）的影响。并且结合了Unix shell和C的习惯。\nPython[4]  已经成为最受欢迎的程序设计语言之一。2011年1月，它被TIOBE编程语言排行榜评为2010年度语言。自从2004年以后，python的使用率呈线性增长[5]  。\n由于Python语言的简洁性、易读性以及可扩展性，在国外用Python做科学计算的研究机构日益增多，一些知名大学已经采用Python来教授程序设计课程。例如卡耐基梅隆大学的编程基础、麻省理工学院的计算机科学及编程导论就使用Python语言讲授。众多开源的科学计算软件包都提供了Python的调用接口，例如著名的计算机视觉库OpenCV、三维可视化库VTK、医学图像处理库ITK。而Python专用的科学计算扩展库就更多了，例如如下3个十分经典的科学计算扩展库：NumPy、SciPy和matplotlib，它们分别为Python提供了快速数组处理、数值运算以及绘图功能。因此Python语言及其众多的扩展库所构成的开发环境十分适合工程技术、科研人员处理实验数据、制作图表，甚至开发科学计算应用程序。\n说起科学计算，首先会被提到的可能是MATLAB。然而除了MATLAB的一些专业性很强的工具箱还无法替代之外，MATLAB的大部分常用功能都可以在Python世界中找到相应的扩展库。和MATLAB相比，用Python做科学计算有如下优点：\n● 首先，MATLAB是一款商用软件，并且价格不菲。而Python完全免费，众多开源的科学计算库都提供了Python的调用接口。用户可以在任何计算机上免费安装Python及其绝大多数扩展库。\n● 其次，与MATLAB相比，Python是一门更易学、更严谨的程序设计语言。它能让用户编写出更易读、易维护的代码。\n● 最后，MATLAB主要专注于工程和科学计算。然而即使在计算领域，也经常会遇到文件管理、界面设计、网络通信等各种需求。而Python有着丰富的扩展库，可以轻易完成各种高级任务，开发者可以用Python实现完整应用程序所需的各种功能。\n\n## 风格\n>Python在设计上坚持了清晰划一的风格，这使得Python成为一门易读、易维护，并且被大量用户所欢迎的、用途广泛的语言。\n设计者开发时总的指导思想是，对于一个特定的问题，只要有一种最好的方法来解决就好了。这在由Tim Peters写的Python格言（称为The Zen of Python）里面表述为：There should be one-- and preferably only one --obvious way to do it. 这正好和Perl语言（另一种功能类似的高级动态语言）的中心思想TMTOWTDI（There's More Than One Way To Do It）完全相反。\nPython的作者有意的设计限制性很强的语法，使得不好的编程习惯（例如if语句的下一行不向右缩进）都不能通过编译。其中很重要的一项就是Python的缩进规则。\n一个和其他大多数语言（如C）的区别就是，一个模块的界限，完全是由每行的首字符在这一行的位置来决定的（而C语言是用一对花括号{}来明确的定出模块的边界的，与字符的位置毫无关系）。这一点曾经引起过争议。因为自从C这类的语言诞生后，语言的语法含义与字符的排列方式分离开来，曾经被认为是一种程序语言的进步。不过不可否认的是，通过强制程序员们缩进（包括if，for和函数定义等所有需要使用模块的地方），Python确实使得程序更加清晰和美观。\n# 搭建环境\n## 下载Python\n官网下载[Python](https://www.python.org/),建议下载Python 2.X 版的。目前网上大部分教程为2.X版。3.X版改进很大。这里是一些关于2和3版本的区别和指导，请自己斟酌\n[Python3.x和Python2.x的区别](http://www.cnblogs.com/codingmylife/archive/2010/06/06/1752807.html)\n[应该学习最新版本的 Python 3 还是旧版本的 Python 2？](https://www.zhihu.com/question/24549965)![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170722/l6aFIFLfC3.png?imageslim)\n## 配置环境变量\n我的电脑右键属性-高级系统变量-环境变量-向Path 添加Python的安装路径\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170722/Ebeb0LC1iE.png?imageslim)\n## 下载IDE\n点击这里有推荐  [提供给开发者 10 款最好的 Python IDE](http://www.oschina.net/news/57468/best-python-ide-for-developers)\n另外VIsual Studio 也可以。我自己使用破解版的`JetBrains PyCharm`[下载](https://www.jetbrains.com/pycharm/) 。\n![PyCharm](http://oskhhyaq3.bkt.clouddn.com/blog/170722/b4mFhHgAFj.png?imageslim)\n然后就愉快的玩耍了","tags":["编程语言"]},{"title":"UWP学习笔记 (三)   XAML界面原理和语法","url":"/2017/07/10/什么是XAML/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n学习XAML在UWP 中的原理及语法\n<!-- more -->\n<The rest of contents | 余下全文>\n## 什么是XAML\n>XAML是EXtensible Application Markup Language的英文缩写，相应的中文名称为可扩展应用程序标记语言，它是微软公司为构建应用程序用户界面而创建的一种新的描述性语言。XAML提供了一种便于扩展和定位的语法来定义和程序逻辑分离的用户界面，而这种实现方式和ASP.NET中的\"代码后置\"模型非常类似。XAML是一种解析性的语言，尽管它也可以被编译。它的优点是简化编程式上的用户创建过程，应用时要添加代码和配置等。 --百度百科\n\n### 优点\n&#160;&#160;&#160;&#160;XAML简化了.Net Framework 3.0编程模式上的用户界面创建过程，使用XAML开发人员可以对WPF程序的所有用户界面元素(例如文本、按钮、图像和列表框等)进行详细的定置，同时还可以对整个界面进行合理化的布局，这与使用HTML非常相似。但是由于XAML是基于XML的，所以它本身就是一个组织良好的XML文档，而且相对于HTML，它的语法更严谨、更明确。预计以后大部分的XAML都可由相应的软件自动生成，就如同我们现在制作一个静态页面时，几乎不用编写任何HTML代码就可以直接通过Dreamweaver软件生成一个美观的页面。但是最初通过手动编写XAML代码将是一次绝佳的学习体验，虽然实现的过程繁杂了些，但是将加深您对XAML语法和各个元素的理解。\n大多数的WPF程序可能同时包含程序代码和 XAML。我们可以使用XAML定义应用程序的初始界面，而后才编写相应的功能实现代码。我们可以将逻辑代码直接嵌入到一个XAML文件中，也可以将它保留在一个单独的文件中。实际上，能够用XAML实现的所有功能我们都可以使用程序代码来完成。因此，我们根本无需使用任何的XAML就可以创建一个完好的WPF程序。一般来说，程序代码的优势在于流程处理和逻辑判断，而不是界面的构建上。而XAML则是集中关注于界面的编程，我们可以将它和其它的.NET语言配合使用，从而构建出一个功能完善、界面美观的WPF程序。XAML是一种纯正的、用来描述用户界面构成元件和编排方式的标记语言。尽管有部分的XAML语法具备程序设计语言的特性(例如XAML中的Trigger和TRansform)，但是XAML并不是一种用于程序设计的语言，它的功能也不是为了执行应用程序逻辑。\n&#160;&#160;&#160;&#160;微软推荐XAML被编译成BAML(Binary Application Markup Language-二进制语言程序标记语言)。XAML和BAML都可以被WPF解析，并且将以一种和HTML相似的方式进行界面的呈现。但是和HTML不同的是，XAML是强类型化的。也就是说，HTML会忽略那些它不能识别的元素和属性，而XAML必须在识别所有的元素和属性的情况下，才对页面进行呈现。尽管在XAML中各个属性都是以一个个的字符串(例如Background)表示的，但是这些字符串实际上代表的是WPF中的对象，只有被WPF识别的对象才可以作为元素的属性，所以我们说XAML是强类型化的。\n### 新功能\n微软Build 2013发布了一些已经被添加到Windows 8.1中的XAML新功能。[1]  \n* Hub控件\n* 命令栏\n* 弹出（Flyout）控件\n* 日期/时间选择控件\n* 取消StandardStyles.xaml\n### 与HTML的区别\n&#160;&#160;&#160;&#160;还有一点是我们反复强调的，XAML并不是HTML。尽管XAML在元素的声明、程序样式的设置和指定事件处理程序上都和HTML非常类似，但是XAML是基于XML的，它是WPF的外在表现形式。而HTML只是一种标记语言，仅仅是用来为浏览器呈现页面内容。XAML除了用来呈现信息和请求用户输入等基本的功能外，它还包含了一些高级的特性，例如它提供了对动画和3D众多方面的支持。\nXAML是可扩展的，正如它的名字指明的那样。开发人员可以创建自定义的控件、元素和函数来扩展XAML。而且由于XAML各元素在本质上就是WPF类的映射，所以开发人员可以很轻松地使用面向对象的技术对XAML元素进行扩展。也就是说我们可以开发一些自定义控件和组合元素，并将它公开给用户界面设计人员和其它的开发人员使用。\n\n## XAML代码在UWP中的角色\n* Page是UWP的用户界面主体。传统桌面程序是由一个个窗口组成的，而UWP是由一个Page（页面）组成的\n*  Page是一个partial类\n*  我们的任务是扩展Page这个类\n\t* 微软预制的Page为一个空的界面，没有内容\n\t* 我们只能扩展它\n*  XAML代码是界面部分，用来实例化.NET对象的标记语言。它可以非常简单的创建对象。\n如下图，这段XAML代码创建了一个Button 对象\n![XAML代码](http://oskhhyaq3.bkt.clouddn.com/blog/170711/L1H43BAcC0.jpg?imageslim)\n同样的用C#实现会怎么样呢？\n![C#代码](http://oskhhyaq3.bkt.clouddn.com/blog/170711/Cabge4dJHj.jpg?imageslim)\n&#160;&#160;&#160;&#160;&#160;XAML中的Margin是直接等于一个字符串，而C#中是需要给Margin赋值一个Thickness对象的。这归功于XAML的类型转换器。XAML在编译的时候，XAML语法分析器将字符串转换为对应的对象或枚举值，这样的话，我们可以直接用一个非常简单的值来代替冗长的类型名和枚举值来提高效率。\n## XAML语法\n### Content Property （内容属性）\n每个标签都有自己的默认的内容属性。比如`<Grid/>`的默认属性是`<Grid.Children><Grid.Children/>`,`<Button>`的默认属性是`<Button.Content>`.通常内容属性可省略。\n### self-closing \nXAML标签与其他标签类似有两种开闭形式\n*  `<xxx><xxx/>`\n* `<xxx/>`\n### Attribute 与简单的property\n可以直接在标签内定义该控件的一些简单属性，比如\n```xml\n<Button Name=\"button\" Height=\"200\" Width=\"200\"/>\n```\n### 复杂的property与property标签\n标签里的属性对象很复杂的时候，编译器无法将字符转化成对象是，就需要使用属性标签。\n比如说，当我要设置背景颜色时，如果时简单的颜色可以直接这样\n```xml\n<Grid Background=\"red\">\n</Grid>\n```\n当然，我们肯定不能满足这种单一色调的背景，我想要一个渐变的漂亮的背景怎么做呢？\n```xml\n<Grid>\n        <Grid.Background>\n\t        <!--LinearGradientBrush为线性笔刷-->\n            <LinearGradientBrush EndPoint=\"0.5,1\" StartPoint=\"0.5,0\">\n\t\t\t\t<!--从#FFAC6CC开始 偏移量为0，#FF2D7099 结束偏移量为1-->            \n                <GradientStop Color=\"#FFACD6CC\" Offset=\"0\"/>\n                <GradientStop Color=\"#FF2D7099\" Offset=\"1\"/>\n            </LinearGradientBrush>\n        </Grid.Background>\n </Grid>\n\n```\n\n### 特殊属性（UWP，WPF特有）\n* Dependency Property 依赖属性\n依赖属性就是自己自己没有值，通过Binding从数据源获得值，就是依赖在别人身上，拥有依赖属性的对象称为依赖对象。\n几种应用依赖属性的场景： \n 1. 希望可在样式中设置属性。 \n2. 希望属性支持数据绑定。 \n3. 希望可使用动态资源引用设置属性。 \n4. 希望从元素树中的父元素自动继承属性值。 \n5. 希望属性可进行动画处理。 \n6. 希望属性系统在属性系统、环境或用户执行的操作或者读取并使用样式更改了属性以前的值时报告。 \n7. 希望使用已建立的、WPF 进程也使用的元数据约定，例如报告更改属性值时是否要求布局系统重新编写元素的可视化对象。 \n依赖对象创建时并不包含存储数据空间。WPF中必须使用依赖对象作为依赖属性的宿主。\n ```xml\n \n <TextBox x:Name=\"textBox1\" Margin=\"10\"  Text=\"{Binding Path=Title}\"/>\n ```\n* Attached Property 附加属性 。附加属性为本不应该是该控件的属性而在该控件下设置的属性。\n比如\n```xml\n<Grid>\n\t<!--声明该Grid有三行-->\n\t<Grid.RowDefinitions>\n            <RowDefinition Height=\"auto\"/>\n            <RowDefinition Height=\"auto\"/>\n            <RowDefinition Height=\"auto\"/>\n       </Grid.RowDefinitions>\n    <!--这里的Grid.row本来是Grid的属性，却被当做是Button的属性。Grid.Row为Button的附加属性-->  \n\t<Button Grid.Row=\"2\"/>\n</Grid>\n```","tags":["UWP"]},{"title":"UWP学习笔记 (二)   UWP开发环境及项目工程解析","url":"/2017/07/09/开发环境及项目工程解析/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n介绍开发环境及UWP的组成部分\n<!-- more -->\n<The rest of contents | 余下全文>\n# 开发环境及项目工程解析\n工欲善其事，必先利其器。本章将介绍如何搭建Windows 10通用应用开发的环境以\n及开发第一个Windows 10通用应用程序，并解析其工程结构和代码以及如何适配不同平\n台的特殊代码。\n## 搭建开发环境\n### 开发环境的要求\n进行Windows 10的开发，计算机需要达到以下要求\n* 1.操作系统Windows 10(64位专业版)。\n* 2.系统盘需要至少8G的剩余硬盘空间。\n* 3.内存达到4GB以上。\n* 4.Windows10的手机模拟器基于Hyper-V,需要CPU支持二级地址转换技术。\n\n注意部分计算机会默认关闭主板BIOS的虚拟化技术，这时需要进入主板BIOS设置\n页面开启虚拟化技术，然后再启动或者关闭Windows功能界面启动Hyper-V服务。\n\n###开发工具的安装\n\nWindows10 SDK已集成在Visual Studio上o 2015最新的版本中。开发工具可以直接到敝\n软的Windows开发者网站进行下载([https //dev.windows.com](https //dev.windows.com))，由于开发工具的更新速\n度较快，请以官方最新版本为准。安装完成后，里面包含了程序的SDK.运行模拟器和编程\n工具。Windows 10 Developer Tools包含的工具集合详细信息如下\n\n* 1.Visual Stuio是Winoows 10的集成开发环境(IDE)，其中包括了C#和XAML.代码编辑\n功能、简单界面的布局与设计功能、编译程序、连接模拟器、部署程序，以及调试程序等功能。\n* 2.Emulator是Winows 10的模拟器，开发者可以把应用程序部署到各种分辨率的模拟器上来检查程序运行效果。如果用户有Windows 10手机，可以直接使用手机来调试和运行自己编的程序。\n## 创建Windows 10 通用应用\n打开Visual Studio 2015/2017。本人用的是Visual Studio 2017。新建一个C#通用项目\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170710/cAjddJLAIJ.png?imageslim)\n![新建UWP项目](http://oskhhyaq3.bkt.clouddn.com/blog/170710/0LJL24D0fm.png?imageslim)\n编辑MainPage.xaml文件，添加以下代码\n```xml\n <Grid Background=\"{ThemeResource ApplicationPageBackgroundThemeBrush}\">\n        <TextBlock HorizontalAlignment=\"Center\" Margin=\"125,105,0,0\" TextWrapping=\"Wrap\" Text=\"Hello World\" VerticalAlignment=\"Center\" FontSize=\"72\"/>\n    </Grid>\n```\n如图：\n![hello world](http://oskhhyaq3.bkt.clouddn.com/blog/170710/G7JCl403Eg.png?imageslim)\n运行结果：\n![结果](http://oskhhyaq3.bkt.clouddn.com/blog/170710/KCl6BB6mAG.png?imageslim)\n## 解析Hello World 应用\nHello World 项目工程中里面包含了MainPage.xaml文件、MainPage.xaml.cs文件、App.xaml文件、App.xaml.cs文件、Package.appxmanifest文件、AssemblyInfo.cs文件和一些图片文件。\n### MainPage.xaml 文件\n```xml\n<Page\n    x:Class=\"HelloWorld.MainPage\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:local=\"using:HelloWorld\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    mc:Ignorable=\"d\">\n\n    <Grid Background=\"{ThemeResource ApplicationPageBackgroundThemeBrush}\">\n        <TextBlock HorizontalAlignment=\"Center\" Margin=\"125,105,0,0\" TextWrapping=\"Wrap\" Text=\"Hello World\" VerticalAlignment=\"Center\" FontSize=\"72\"/>\n\n\n    </Grid>\n</Page>\n\n```\n&#160;&#160;&#160;&#160;Page元素是一个程序页面的根元素，表示当前的XAML代码是一个页面，当前页面的其他所有UI元素都必须在Page元素下面。在当前的页面里面有两个控件：Grid控件、TextBlock法控件。其中，Grid控件是布局容器控件，所以在可视化视图上并没有看到Grid控件的显示。Text131ock控件是一个文本框控件，用于显示文本的内容，在可视化视图上看到的。“TextBlock”就是TextBlock控件。在上面的页面代码中可以看到TextBlock控件里面还有很多属性，这些属性用于定义控件的各种特性的设置。例如，\"x Name。属性定义了\n控件的名称，在后台代码里就可以通过名称来访问控件。Text。属性定义了TextBlock控\n件文本显示的内容，等等。\n\n### MainPage.xmal.cs文件\n```cs\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Runtime.InteropServices.WindowsRuntime;\nusing Windows.Foundation;\nusing Windows.Foundation.Collections;\nusing Windows.UI.Xaml;\nusing Windows.UI.Xaml.Controls;\nusing Windows.UI.Xaml.Controls.Primitives;\nusing Windows.UI.Xaml.Data;\nusing Windows.UI.Xaml.Input;\nusing Windows.UI.Xaml.Media;\nusing Windows.UI.Xaml.Navigation;\n\n// https://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x804 上介绍了“空白页”项模板\n\nnamespace HelloWorld\n{\n    /// <summary>\n    /// 可用于自身或导航至 Frame 内部的空白页。\n    /// </summary>\n    public sealed partial class MainPage : Page\n    {\n        public MainPage()\n        {\n            this.InitializeComponent();\n        }\n    }\n}\n\n```\n&#160;&#160;&#160;&#160;MainPage.xmal.cs文件就是MainPage.xmal文件对应的后台代码的处理，在MainPage.xmal.cs文件会完成程序页面的控件的初始化工作和处理控件的触发事件。\n###  App.xaml 文件\n```xml\n<Application\n    x:Class=\"HelloWorld.App\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:local=\"using:HelloWorld\"\n    RequestedTheme=\"Light\">\n\n</Application>\n```\n&#160;&#160;&#160;&#160;App.xaml文件是应用程序的入口XAML文件，一个应用程序只有一个该文件，并且\n它还会有一个对应的App.xaml.cs文件。App.xaml文件的根节点是Appplication元素，它\n里面的属性定义和空间定义与上面的Mainpage.xaml页面是一样的，不一样的地方是在\nApp.xam]文件中定义的元素是对整个应用程序是公用的，例如你在App.xaml文件中，添\n加了〈Application，Resources〉</Application.Resources>元素来定义一些资源文件或者样式，这些资源在整个应用程序的所有页面都可以引用，而在Page的页画所定义的资源或者控件就只能否在当前的页面使用。\n###  App.xaml.cs\n```cs\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Runtime.InteropServices.WindowsRuntime;\nusing Windows.ApplicationModel;\nusing Windows.ApplicationModel.Activation;\nusing Windows.Foundation;\nusing Windows.Foundation.Collections;\nusing Windows.UI.Xaml;\nusing Windows.UI.Xaml.Controls;\nusing Windows.UI.Xaml.Controls.Primitives;\nusing Windows.UI.Xaml.Data;\nusing Windows.UI.Xaml.Input;\nusing Windows.UI.Xaml.Media;\nusing Windows.UI.Xaml.Navigation;\n\nnamespace HelloWorld\n{\n    /// <summary>\n    /// 提供特定于应用程序的行为，以补充默认的应用程序类。\n    /// </summary>\n    sealed partial class App : Application\n    {\n        /// <summary>\n        /// 初始化单一实例应用程序对象。这是执行的创作代码的第一行，\n        /// 已执行，逻辑上等同于 main() 或 WinMain()。\n        /// </summary>\n        public App()\n        {\n            this.InitializeComponent();\n            this.Suspending += OnSuspending;\n        }\n\n        /// <summary>\n        /// 在应用程序由最终用户正常启动时进行调用。\n        /// 将在启动应用程序以打开特定文件等情况下使用。\n        /// </summary>\n        /// <param name=\"e\">有关启动请求和过程的详细信息。</param>\n        protected override void OnLaunched(LaunchActivatedEventArgs e)\n        {\n            Frame rootFrame = Window.Current.Content as Frame;\n\n            // 不要在窗口已包含内容时重复应用程序初始化，\n            // 只需确保窗口处于活动状态\n            if (rootFrame == null)\n            {\n                // 创建要充当导航上下文的框架，并导航到第一页\n                rootFrame = new Frame();\n\n                rootFrame.NavigationFailed += OnNavigationFailed;\n\n                if (e.PreviousExecutionState == ApplicationExecutionState.Terminated)\n                {\n                    //TODO: 从之前挂起的应用程序加载状态\n                }\n\n                // 将框架放在当前窗口中\n                Window.Current.Content = rootFrame;\n            }\n\n            if (e.PrelaunchActivated == false)\n            {\n                if (rootFrame.Content == null)\n                {\n                    // 当导航堆栈尚未还原时，导航到第一页，\n                    // 并通过将所需信息作为导航参数传入来配置\n                    // 参数\n                    rootFrame.Navigate(typeof(MainPage), e.Arguments);\n                }\n                // 确保当前窗口处于活动状态\n                Window.Current.Activate();\n            }\n        }\n\n        /// <summary>\n        /// 导航到特定页失败时调用\n        /// </summary>\n        ///<param name=\"sender\">导航失败的框架</param>\n        ///<param name=\"e\">有关导航失败的详细信息</param>\n        void OnNavigationFailed(object sender, NavigationFailedEventArgs e)\n        {\n            throw new Exception(\"Failed to load Page \" + e.SourcePageType.FullName);\n        }\n\n        /// <summary>\n        /// 在将要挂起应用程序执行时调用。  在不知道应用程序\n        /// 无需知道应用程序会被终止还是会恢复，\n        /// 并让内存内容保持不变。\n        /// </summary>\n        /// <param name=\"sender\">挂起的请求的源。</param>\n        /// <param name=\"e\">有关挂起请求的详细信息。</param>\n        private void OnSuspending(object sender, SuspendingEventArgs e)\n        {\n            var deferral = e.SuspendingOperation.GetDeferral();\n            //TODO: 保存应用程序状态并停止任何后台活动\n            deferral.Complete();\n        }\n    }\n}\n```\n&#160;&#160;&#160;&#160;App.xaml.cs 文件是一个控制整个应用程序的全局文件，整个应用程序的生命周期都在该文件中定义和处理。应用程序在整个生命周期会有三个状态：Running（运行），NotRunning（未运行）和 Suspended（挂起）\n![应用程序生命周期](http://oskhhyaq3.bkt.clouddn.com/blog/170710/DmKlm3EJ1b.png?imageslim)\n### Package.appxmanifest文件\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<Package\n  xmlns=\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\"\n  xmlns:mp=\"http://schemas.microsoft.com/appx/2014/phone/manifest\"\n  xmlns:uap=\"http://schemas.microsoft.com/appx/manifest/uap/windows10\"\n  IgnorableNamespaces=\"uap mp\">\n\n  <Identity\n    Name=\"f85505e4-25a4-4f06-b489-dfc4750ab693\"\n    Publisher=\"CN=Lovemefan\"\n    Version=\"1.0.0.0\" />\n\n  <mp:PhoneIdentity PhoneProductId=\"f85505e4-25a4-4f06-b489-dfc4750ab693\" PhonePublisherId=\"00000000-0000-0000-0000-000000000000\"/>\n\n  <Properties>\n    <DisplayName>HelloWorld</DisplayName>\n    <PublisherDisplayName>Lovemefan</PublisherDisplayName>\n    <Logo>Assets\\StoreLogo.png</Logo>\n  </Properties>\n\n  <Dependencies>\n    <TargetDeviceFamily Name=\"Windows.Universal\" MinVersion=\"10.0.0.0\" MaxVersionTested=\"10.0.0.0\" />\n  </Dependencies>\n\n  <Resources>\n    <Resource Language=\"x-generate\"/>\n  </Resources>\n\n  <Applications>\n    <Application Id=\"App\"\n      Executable=\"$targetnametoken$.exe\"\n      EntryPoint=\"HelloWorld.App\">\n      <uap:VisualElements\n        DisplayName=\"HelloWorld\"\n        Square150x150Logo=\"Assets\\Square150x150Logo.png\"\n        Square44x44Logo=\"Assets\\Square44x44Logo.png\"\n        Description=\"HelloWorld\"\n        BackgroundColor=\"transparent\">\n        <uap:DefaultTile Wide310x150Logo=\"Assets\\Wide310x150Logo.png\"/>\n        <uap:SplashScreen Image=\"Assets\\SplashScreen.png\" />\n      </uap:VisualElements>\n    </Application>\n  </Applications>\n\n  <Capabilities>\n    <Capability Name=\"internetClient\" />\n  </Capabilities>\n</Package>\n```\n&#160;&#160;&#160;&#160;Package.appxmanifest文件是Windows 10应用程序的清单文件，声明应用的标识、应\n用的功能以及用来进行部署和更新的信息。可以在清单文件对当前的应用程序进行配置，\n例如添加磁帖图像和初始屏幕、指示应用支持的方向以及定义应用的功能种类、Package \n元素是整个清单的根节点；Identity元素表示应用程序版本发布者名称等信息mp: \nPhoneldentity元素表示应用程序相关的唯一标识符信息Properties元素包含了应用程序\n的名称、发布者名称等信息的设置；Prerequisites元素则是用于设置应用程序所支持的系\n统版本号；Resources元素表示应用程序所使用资源信息，例如语言资源Applications元\n素里面则包含了与应用程序相关的logo设置、闪屏图片设置等可视化的设置信息\nCapabilities元素表示当前应用程序所使用的一些手机特定功能，例如internetclient表示\n使用网络的功能。\n\n&#160;&#160;&#160;&#160;Page.appxmanifest文件可以支持在可视化图形中进行设置，可以双击解决方案中\n的package.appxmanifest文件来打开此文件的可视化编辑视图。我们可以直接在可视化界\n面上设置程序的logo、磁贴、功能权限等。在后续的应用程序开发里面有些功能会需要在\nPackage.appxmanifest清单文件上进行相关的配置，到时候再进行详细的讲解。\n\n\n\n## 不同平台设备的适配\n\n&#160;&#160;&#160;&#160;Windows 10通用应用程序针对特定的平台还会有一个子API的集合，当我们要使用\n到某个平台的特定API的时候(例如手机相机硬件按钮触发事件)，这时候就需要调用特定\n平台的API.因为Winclows 10应用程序是一个安装包，可以部署到所有的Windows 10系\n统平台，所以这里就涉及一个八PI适配的问题，对特定平台的API进行特殊处理。除了特\n定平台的API,还有一个适配的工作就是界面适配，Windows 10也提供了一系列的API来\n给我们做界面的适配工作。\n\n###特定平台的API调用\n\n&#160;&#160;&#160;&#160;目前在Winclows 10里面有Windows Mobile Extension SDK和田indows Desktop \nExtension SDK两个扩展的SDK分别表示手机版本和桌面版本的扩展SDK(在后面\n章节里面若用到特定平台的API,都会进行区分标识)。这两个SDK都是直接内置在\nWindows 10的开发SDK里面的，但是默认情况下不会给项目工程添加上，需要使用时可以\n在项目工程里面引用，路径为Project->Add Reference->-Windows Universal->Extensions. \n在使用特定平台的API的时候，必须判断当前的环境是否支持(不支持的平台调用将会引\n发异常)。判断的方法为Windows.Foundation.Metadata.ApiInformation.IsTypepresent \n(String type Name)，type Name表示带完整的命名空间的API的名称，返回true表示支持，\n返回false表示不支持。\n\n\n##界面适配\n&#160;&#160;&#160;&#160;Windows 10系统支持多种硬件平台和分辨率，Windows 10系统底层对界面的适配色\n昼非常强大的，同样的控件在不同的硬件平台上显示也可能会有差异，这种适配就是由\nWindows 10系统自己来完成适配，来匹配不同的硬件和分辨率的显示效果。虽然\nWindpws 10底层完成了各种控件的适配，但是很多时候还是需要在程序里来实现适配。在 \n开发通用程序的时候，要充分地考虑各种不同分辨率下的显示效果，可以通过可视化设计界\n面和各种分辨率的模拟器来进行测试。适配界面有几种常用的编程技巧\n* 使用相对的布局控件来进行排列，如Grid.Relativepanel等;\n* 使用相对的属性来设置控件在容器的位置，如orizontalAlignment.VerticalAlignment属性;\n* 设置长度宽度的最大值最小值限制;\n* 根据设备实际分辨率来设置长度宽度或者位置。\n\n\n\n","tags":["UWP"]},{"title":"UWP学习笔记 (一) 初识UWP","url":"/2017/07/08/什么是UWP/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n认识UWP及开发前的一些准备\n<!-- more -->\n<The rest of contents | 余下全文>\n## 什么是UWP\n>UWP即Windows 10 中的Universal Windows Platform简称。即Windows通用应用平台，在Win 10 Mobile/Surface(Windows平板电脑）/PC/Xbox/HoloLens等平台上运行，uwp不同于传统pc上的exe应用也跟只适用于手机端的app有本质区别。它并不是为某一个终端而设计，而是可以在所有windows10设备上运行。\n微软在MWC 2015上首次展示了Win10统一平台战略的“代表作”：Win10通用应用（Windows10 Universal App）平台。在Win10中，所有设备将会运行在一个统一的Windows10系统核心之上。这样的设计使得一款应用可以在所有Win10设备上运行，今后Win10手机、平板电脑、笔记本电脑、PC、Xbox，甚至是3D全息眼镜HoloLens、巨屏触控Surface Hub和物联网设备例如Raspberry Pi 2等都不再有界限。新的通用平台允许新类型的Windows10通用应用真正实现一次编写、一套业务逻辑和统一的用户界面。应用在统一的Win10商店中将只会有一个安装包，而它将适用于所有Win10设备。[1]  在 Windows 10 Insider Preview 中的 Universal Windows Platform (UWP)借助 Windows 10 UWP 将在 Windows 应用中更上一层楼。UWP 会根据不同的设备类型使用相应的自适应 UI 控件，并使用运行 Windows 10 Insider Preview 的所有设备上必须具有的通用 API 集。简单的说，uwp就是通用应用的意思可以在电脑端，手机端，或其他设备通用。不用分别为不同的平台设计不同的软件。即一个软件就可以通吃。这是微软为win10系统定制的趋势。微软声称不管是开发者，还是使用者，都省事。   --百度百科\n\n首先来欣赏一下国内一些比较用心的UWP\n**网易云音乐**\n![网易云音乐](http://oskhhyaq3.bkt.clouddn.com/blog/170708/HJG2J760dA.png?imageslim)\n\n**IT之家**\n![IT之家](http://oskhhyaq3.bkt.clouddn.com/blog/170708/A65Aa9ECm6.png?imageslim)\n### 如何获取UWP\n* 1.从Window 应用商店获取。打开应用商店，搜索并选择下载。\n* 2.[离线部署](https://www.windows10.pro/how-to-install-uwp-offline-packages)\n## 开发准备\n* 开发环境：Windows 10 +Visual Studio 2015/2017    这里说明必须是**Windows 10 **，其他不行。VS 2015及以上才支持UWP开发，所以只能用VS 2015或2017。我目前的环境是 Win10 创意者 + VS 2017。\n* 开发者模式。前往 设置-更新与安全-针对开发者-开发者模式\n* 技术储备 C#/C++/VB 后期我们将使用C#进行开发程序的逻辑部分 [C#微软官方教程（有中文字幕）](http://bit.do/csharp-fundamentals)\n* XAML(EXtensible Application Markup Language)。XAML是一种类似HTML的标记语言。用来设计UI部分后面会着重学习XAML语言。如果是有HTML基础的同学会很容易上手。\n## 总结\n我对windows Phone有一种特有的情怀，从之前的Windows Phone 7 开始，我就喜欢Windows Phone上了其流畅顺滑的操作。到后来的Windows 10 mobile 。由于其软件生态太差，无法满足生活需求，我才不得不转向Android阵营。以前Android的卡慢是我无法忍受的，但随着Android 6.0/7.0，即将发布的Android 8.0，Android慢慢优化的系统也能适应大部分人的需求。Android，iOS是大势所趋，我为什么还要选择UWP这种有些人听都没听过的平台呢？\n* 首先，我看重的是UWP的优势，一次编译，能在所有Win 10 设备运行，包括电脑、平板、手机(Win10 手机)、XBox、HoloLens、surface Hub、loT(物联网)。微软费尽心思推广Win10，就是为了增加UWP的运行环境。现在及未来Win10的装机量不容小视。而且UWP小巧轻便，前途无可限量。\n* 其次，UWP有着自己的类似Google Play和Apple Store的应用商店，保证其安全性。\n* 然后，我想尽自己一份微薄力量来完善Windows 生态，主要还是Windows phone的生态。\n## 学习资料\n* UWP微软官方学习课程 [官方MVA]]() [bilibili搬运](http://www.bilibili.com/video/av7997007/)\nMicrosoft Virtual Academy (MVA)   [【链接】](https://mva.microsoft.com/)是微软官方的一个免费的视频教学课堂。里面有大量的学习资源(有中文字幕)，强烈推荐。\n* 深出浅入UWP （中文课程）[【bilibili】](http://www.bilibili.com/video/av3610677)","tags":["UWP"]},{"title":"PowerShell篇 (一) 初识PowerShell","url":"/2017/07/05/PowerShell篇  (一)初识PowerShell/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n什么是PowerShell\n<!-- more -->\n<The rest of contents | 余下全文>\n\n# 初识PowerShell\n`作者：lovemefan` `以下资料收集于IT之家和知乎`\n## PowerShell的邂逅\n&#160;&#160;&#160;&#160;在我搭建我的博客的时候，cmd命令肯定是少不了的。除了cmd我们还可以选择Git Bash和PowerShell。\nGit Bash是Git自带的一个命令行工具，用来上传，克隆等一些GitHub的操作。我之前也只知道Power Shell也是命令行，用它部署过离线的[UWP](http://baike.baidu.com/link?url=J5GeaQ_aSSMscd2pdx3O7nv1xTjZ99hw4ppIODqWFTtGFqHuxw13ppv9HviTZ8IglPkdRudcQb4-expkEoxC_a)，但平常不太会用所以没太在意。我只知道是微软为了替代cmd而特意在Windows 10里添加的新功能 。但在我使用Windows 10 创意者 的时候，正如往常使用鼠标右键+Shift ，本来是**“从此处打开命令窗口”**，结果就是没找到。反而这样显示\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170705/IKDe87048g.jpg?imageslim)\n后来发现这是微软故意而为之的\n## 什么是PowerShell\n>&#160;&#160;&#160;&#160;Windows PowerShell 是一种命令行外壳程序和脚本环境，使命令行用户和脚本编写者可以利用 .NET Framework的强大功能。\n&#160;&#160;&#160;&#160;它引入了许多非常有用的新概念，从而进一步扩展了您在 Windows 命令提示符和 Windows Script Host 环境中获得的知识和创建的脚本。\n&#160;&#160;&#160;&#160;Windows PowerShell v3将伴随着MicrosoftHyper-V3.0和Windows Server 2012发布。PowerShell v3是一个Windows任务自动化的框架，它由一个命令行shell和内置在这个.NET框架上的编程语言组成。\n&#160;&#160;&#160;&#160;PowerShell v3采用新的cmdlet让管理员能够更深入到系统进程中，这些进程可以制作成可执行的文件或脚本（script）。一条cmdlet是一条轻量命令，Windows PowerShell运行时间在自动化脚本的环境里调用它。Cmdlet包括显示当前目录的Get-Location，访问文件内容的Get-Content和结束运行进程的Stop-Process。\n&#160;&#160;&#160;&#160;PowerShell v3在Windows Server 8中装载了Windows Management Framework 3.0。PowerShell运行时间也能嵌入到其它应用。——百度百科\n\n[微软PowerShell官网](https://msdn.microsoft.com/en-us/powershell)\n\n&#160;&#160;&#160;&#160;从Windows10创意者更新开始，PowerShell正式上位替换了命令提示符CMD。不论是Windows+X右键超级菜单，还是Shift+文件夹空白处右键，又或在文件资源管理器文件菜单中，都没有命令提示符CMD的身影了，全部都由PowerShell取而代之了。长期使用CMD的Windows系统管理员或Windows命令行极客恐怕一时不能适应，使用CMD都只能去开始菜单-所有应用-Windows系统-命令提示符打开使用，或者Windows+R键然后输入cmd，或者在小娜输入框输入cmd，再或者在PowerShell中输入cmd(看来又绕回来了)。藏得这么深，显然是不想让人用了啊。不仅如此，Power Shell还登陆了Linux和MacOS  \n[在Linux下安装PowerShell](https://zhuanlan.zhihu.com/p/26346821?utm_source=qq&utm_medium=social)\nPoweShell上位图如下\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170705/bfiiJCEHd4.jpg?imageslim)\n&#160;&#160;&#160;&#160;问题来了，PowerShell这货凭什么力压CMD，强行上位？如果你之前试用过PowerShell，相信它一定没有给你什么好印象。打开慢！反应慢！命令还陌生！还动不动就弹一大堆谁都看不懂错误，PowerShell究竟凭什么在Windows10创意者更新中替代命令提示符CMD呢？微软脑抽了？\n微软没有脑抽，PowerShell是凭借其强大的功能替换CMD的。这里要先说明以下PowerShell究竟是什么东西，或者它究竟是不是东西？\n&#160;&#160;&#160;&#160;Windows PowerShell不是东西，它是专为系统管理员设计的新Windows命令行shell，它包括交互式提示和脚本环境。PowerShell定义很多命令与操作系统，特别是与文件系统交互，能够启动应用程序，甚至操纵应用程序；PowerShell允许将几个命令组合起来放到文件里执行，实现文件级的重用，也就是说有脚本的性质；PowerShell能够充分利用.Net类型和COM对象，来简单地与各种系统交互，完成各种复杂的、自动化的操作。\n&#160;&#160;&#160;&#160;用人话说就是CMD能做的PowerShell都能做，CMD不能做的Powershell也能做。就是这么自信！不信？赶紧打开PowerShell把下面的命令复制进去，看看它干了什么事，然后你用CMD做出来吧！\n```powershell\n# create new excel instance\n$objExcel = New-Object -comobject Excel.Application\n$objExcel.Visible = $True\n$objWorkbook = $objExcel.Workbooks.Add()\n$objWorksheet = $objWorkbook.Worksheets.Item(1)\n# write information to the excel file\n$i = 0\n$first10 = (ps | sort ws -Descending | select -first 10)\n$first10 | foreach -Process {$i++; $objWorksheet.Cells.Item($i,1) = $_.name; $objWorksheet.Cells.Item($i,2) = $_.ws}\n$otherMem = (ps | measure ws -s).Sum - ($first10 | measure ws -s).Sum\n$objWorksheet.Cells.Item(11,1) = \"Others\"; $objWorksheet.Cells.Item(11,2) = $otherMem\n# draw the pie chart\n$objCharts = $objWorksheet.ChartObjects()\n$objChart = $objCharts.Add(0, 0, 500, 300)\n$objChart.Chart.SetSourceData($objWorksheet.range(\"A1:B11\"), 2)\n$objChart.Chart.ChartType = 70\n$objChart.Chart.ApplyDataLabels(5)\n```\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170705/CJi70f9ahF.png?imageslim)\n没错，有点慢，等下吧，接下来它自动打开了excel，如图，我果然还是IT之家老粉丝啊\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170705/B8IDAdFlm4.png?imageslim)\n&#160;&#160;&#160;&#160;上面一段代码是PowerShell界常见的一段神代码，很多初学者被其带入了PowerShell的大门。有效代码不过20来行，作用是把当前系统中最占内存的10个进程的数据发送到Excel中，并绘制成三维饼图。CMD是很难做到了，被替代也理所应当了。\n&#160;&#160;&#160;&#160;PowerShell的定位是操作系统和应用程序的管理工具，从这个角度看，它是CMD的升级版，并非简单的对CMD进行扩展，事实上微软也不打算扩展和升级CMD了，以后PowerShell将全方位的替代CMD，目前CMD和PowerShell还是并存状态。\n下面正式介绍PowerShell。\n### （一）简单的命令\n&#160;&#160;&#160;&#160;在CMD中，命令是从非常简单（如attrib.exe）到非常复杂（如netsh.exe）的可执行程序，新入门用户一旦遇到复杂命令，只能束手无策，只能求助搜索引擎，解决当前需求之后，就把命令的用法抛诸脑后，下次使用又要重新学习，极其不便。\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170705/526ijlFjLJ.png?imageslim)\n&#160;&#160;&#160;&#160;PowerShell命令设计非常规范，它的命令由“动词”和“名词”两部分组成，比如“get”表示检索数据，“process”表示系统进程，把“get”和“process”组合起来的PowerShell命令就是“get-process”，意思是获取系统进程列表，这种命令在PowerShell中称为“cmdlet（读作“command-let”）”。\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170705/CIBlH2i1f7.png?imageslim)\n&#160;&#160;&#160;&#160;使用“动词-名词”结构还有一个好处，就是不同的“动词”和“名词”可以自由组合，很少的几个“动词”和“名词”就可以组合出大量的可用命令，使命令记忆量大为降低，只需记住简单的几个词语，就可以使用大量的命令，这是包括命令提示符CMD在内的Shell不具备的，并且不会产生歧义，对新用户非常友好。\n### （二）别名系统\n&#160;&#160;&#160;&#160;“动词-名词”结构的cmdlet固然对新手友好，但也带来了另一个问题，命令名称过长，在命令行交互使用时不方便，在命令行窗口输入命令可以使用Tab键进行补全，可是经常使用还是需要键入大量的内容，要是能够把命令缩短一些就好了。PowerShell在设计时已经考虑到了，为此创建了别名系统，之所以叫名别系统，是因为PowerShell中的别名非常强大，能够非常方便的对别名进行增加、删除、修改，还为之创建了别名驱动器，可以像访问文件系统驱动器一样方便的访问别名驱动器。\nPowerShell非常贴心的为用户创建了大量内置别名，一方面减少了常用命令的输入长度，另一方面也为熟悉其它Shell而不熟悉PowerShell的用户提供了方便，常见Shell如bash、cmd，PowerShell都为用户提供了他们熟悉的别名。下面是可以在Powershell中使用的通用的Cmd.exe和UNIX命令的简短列表。\n**在PowerShell下输入**\n```powershell\nget-alias\n```\n以下只显示了部分，要想查询所有别名请用`alias`命令查询\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170705/6AghbjEgAg.png?imageslim)\n&#160;&#160;&#160;&#160;PowerShell除了自带别名外，用户自己也可以创建别名，不仅仅可以为cmdlet创建别名，也可以为PowerShell函数、带参数的命令和包含完整路径的命令行程序创建别名。\n比如为记事本创建别名，可以使用如下命令\n```powershell\nNew-Alias np c:\\windows\\notepad.exe\n```\n&#160;&#160;&#160;&#160;创建别名完成后，在命令行中输入np就能直接打开记事本。在命令行中创建的别名只能在当前命令行窗口中使用，如果想以后也能使用此别名，可以把以上命令保存在PowerShell配置文件中，以后无论是在命令行中，还是使用脚本，都可以在本机使用np别名了。\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170705/8h0kd2FD21.png?imageslim)\nPowrShell配置文件位置可以使用$profile命令查询。\n\n&#160;&#160;&#160;&#160;想查看当前命令行窗口可以使用的别名，可以进入别名驱动器查看，使用dir alias:就能查看所有能用的别名，也可以使用get-alias命令查看别名。\n### (三) 管理任务\nWindows PowerShell的基本目标是使用户能够以交互方式或通过脚本更好、更容易地对系统进行管理控制，为了达成这个目标，PowerShell提供了大量命令来执行各种管理任务，让用户轻松完成管理系统任务。\n#### 1、管理进程\n前面已经提过管理系统进程的命令，管理进程常用命令就是get-process命令和stop-process命令，get-process命令获取进程之后可以直接用管道发送给stop-process命令结束进程。比如，关闭之前打开的记事本，可以使用下面的命令很方便的关闭记事本。\n```powershell\nget-process -Name notepad | stop-process\n```\n#### 2、处理文件和文件夹\n&#160;&#160;&#160;&#160;PowerShell使用Get-ChildItem获取文件夹中直接包含的所有项，它有系统内置别名dir和ls，使用CMD和BASH的用户均可以轻松上手。如果想查看C:中的文件夹和文件，直接使用dir c:，PowerShell立刻就会列出C:中的文件和文件夹。其它处理文件和文件夹的命令有Copy-Item、New-Item、Remove-Item等，具体用法可以使用get-help然后跟命令名称即可查询。\n#### 3、处理系统服务\n&#160;&#160;&#160;&#160;可以像管理进程一样管理系统服务，Get-Service命令获取服务列表，Stop-Service命令停止服务，Start-Service命令启动服务，Suspend-Service命令挂起服务，Restart-Service命令重启服务，Set-Service服务设置服务属性。如果想一次性启动已经停止的服务，可以使用以下命令：\n```powershell\nget-service | where-object {$_.Status -eq \"Stopped\"} -exclude\nwisvc | start-service\n```\n&#160;&#160;&#160;&#160;这行命名会把除wisvc之外的命令都启动，这只是一个示例，不要在自己电脑使用，启动所有服务会消耗大量系统资源。\n#### 4、处理注册表\n&#160;&#160;&#160;&#160;PowerShell可以非常方便的处理注册表项目，与进程和服务不同的是，PowerShell并未提供专用的注册表命令，而是使用处理文件和文件夹的命令，这并不奇怪，PowerShell为用户提供了注册表驱动器，可以很好的处理注册表项目。由于注册表对系统非常重要，错误处理注册表也许会导致系统出问题，处理注册表，特别是删除注册表项目要非常小心，最好能在处理注册表项目之前先备份要处理的项目。没有管理员权限也能处理部分注册表项目，这与regedit注册表编辑器不同，注册表编辑器必须使用管理员权限打开，然后才能操作项目。\n**下面的表格列出了访问注册表所需的所有命令**\n\n![mark](http://oskhhyaq3.bkt.clouddn.com/blog/170705/LcIe6FFlJ4.png?imageslim)\nPowerShell只提供了两个注册表驱动器HKCU:和HKLM:，其中HKLM:是HKEY_LOCAL_MACHINE的缩写，HKCU:是HKEY_CURRENT_USER的缩写，如果想要访问所有注册表驱动器，可以进入Microsoft.PowerShell.Core\\Registry::。\n#### 5、处理其它任务\nPowerShell还可以处理证书、防火墙、appx应用、打印机等任务。大家可以使用get-command命令查找相关命令。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["PowerShell"]},{"title":"我为什么要建立这个博客","url":"/2017/07/04/为什么要建立这个博客/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n建立博客的原因\n<!-- more -->\n<The rest of contents | 余下全文>\n\n# 为什么要建立这个博客\n`作者：lovemefan`  [我的GitHub](www.github.com/lovemefan)\n\n>  &#160; &#160;&#160; &#160;我现在是一名即将大三的软件的学生。对编程还谈得上热爱，但至今也只能承认懂得点皮毛。为什么我要写这个博客？根本原因还是“懒”。我需要一个能够鞭策我一直坚持下去的东西。不过我也承认有一点点装B的嫌疑。我个人性格有点不羁，不喜欢按部就班，墨守成规。总想着做点疯狂的事。兴趣与时间总是矛盾的，可是时间又是从海绵里挤出来的。想想大一大二就这样“嗖”一般的过掉了...掉了...了。东西没学到多少，时间就快没了。看到有的同学能做一个看起来就很牛逼的程序，然后讲一堆从来没听过的专业术语。“卧槽！卧槽！！！”，“厉害了，我的哥”，“哇，大神，带我飞”，像这样的话没少听。一般这种时候我都会嫉妒一下。“TM为什么我不会”，“不过，不会也正常，我TM又不是神”，“妈蛋，下次去学，嗯！一定要学会”，“好像也就这样了，先放一放吧”。大多数情况下这件事就被无限延期了。\n  &#160; &#160;&#160; &#160;首先，我总结了一个原因——懒。这种东西确实是人类的天敌，当然不排除某些勤奋已经成了日常的hentai。我有一些类似的经历，写作业写到两三点停不下来，还像打了鸡血一样很兴奋，鬼知道发生了什么。最长的一次在图书馆呆了13多个小时，从早上8点到晚上9点半，丝毫不想走。这种接近痴狂的人生，我个人觉得还蛮不错的。但是，但是，但是我又双叒叕被懒惰打败了，一不小心就荒废了下学业。结果就是期末成绩无情的嘲讽。懒惰这东西迟早，一定，必须面对。所以我觉得有必要做些事情，比如维护这博客。\n &#160; &#160;&#160; &#160;其次，我吐槽下大学现在这个机制不是我想要的。大学也读了一半了，大多数人是这么过的：“上课可以不听，下课我看一下就好了。”，“这题好像老师讲过，不过我忘了。”“学习，学个屁”，“这次考试考哪些重点，帮我画一下”，“最后一个礼拜复习，祈祷不挂”，“复习什么，大家一起挂”，“成绩出来了，吐血，80多”（MD，老子一巴掌。。。）。然而结果不是我所期望的。考试这种东西确实是有存在的必要，但现在的考试总感觉变了味。老师说什么会考，就考什么，可能还是去年的原题。只要刷几套往年试卷，就可以考得很好，于是更多的人在钻研怎么“考试”，而不是解决问题。两年下来，你是更擅长考试，还是更擅长你的专业知识。我非常敬佩那些不以考试为目的教学的老师。就比如说那个陈胖子（没事，他看不到），他上的Java和c语言数据结构还是很有分量的。\n &#160; &#160;&#160; &#160;假设大学四年我都这样过的话，满足吗？能力能提高多少呢？到底能学到多少东西呢？我现在可以C，C++，C#，Java，JavaScript，Matlab，Python...写一个Hello world，这样够吗?有人会说可以了，已经很不错了。可是野心不大一点，目标不远一点，不疯狂一点还是我的风格吗？现在还不疯狂一把，以后还有机会吗？你能保证未来不会因现在后悔吗？\n所以，我建立了在个博客，并且想维护它。我想多学点东西。现在的初心是既可以记录学习的点滴，也可以每时每刻都鞭策着我，因为每更新一次这个东西，就会得到一种“快感”，成就感。更新GitHub时也是一样。私心还是有的，当然希望被人关注了，肯定是越多越好了。\n\n## 博客的内容\n我尽量能写就多写，最近在知乎，CDNS，简书...中看到大量IT干货，激发了我极大的兴趣\n所以想着现在来建立这博客也不迟，算得上是学习了一种记录和鞭策吧\n* 一些学习过程中的问题，解决思路方法。\n* 我感兴趣的事物，可能以后会写测评。\n* GitHub，知乎,IT之家等 一些趣味知识。\n* 开发UWP。我曾经是一名wper（Lumia 1020），早在很久之前就打算学习UWP了，我希望能够坚持下去，尽管可能没有太多的时间和精力。就算是龟速更新，我也不会停止学习的。\n## 计划列表\n* UWP，Android，web(大三必修)\n* UE4(虚幻4)，unity  (项目所需和个人兴趣爱好)\n* 学些脚本语言，待定：PowerShell，JavaScript等\n* 待定"}]