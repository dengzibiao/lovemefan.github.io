{"title":"Python学习笔记 (一)  初识Python","date":"2017-07-22T12:00:00.000Z","excerpt":"<p><strong> Python学习笔记 (一)  初识Python：</strong> <excerpt in=\"\" index=\"\" |=\"\" 首页摘要=\"\"><br>认识Python及搭建开发环境<br>","slug":"初识Python","tags":["学习笔记","Python","编程语言"],"updated":"2017-07-22T14:12:04.460Z","content":"<p><strong> Python学习笔记 (一)  初识Python：</strong> <excerpt in=\"\" index=\"\" |=\"\" 首页摘要=\"\"><br>认识Python及搭建开发环境<br><a id=\"more\"></a></excerpt></p>\n<p><the rest=\"\" of=\"\" contents=\"\" |=\"\" 余下全文=\"\"></the></p>\n<h1 id=\"初识Python\"><a href=\"#初识Python\" class=\"headerlink\" title=\"初识Python\"></a>初识Python</h1><h2 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h2><blockquote>\n<p>Python[1]  （英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。<br>Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议[2]  。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。<br>Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中[3]  有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。–百度百科</p>\n</blockquote>\n<p><strong><em>个人认为Python是一款非常适合初学者的语言，同时有面向过程和对象的特性，语法简单非常接近自然语言，功能强大</em></strong></p>\n<h2 id=\"发展历程\"><a href=\"#发展历程\" class=\"headerlink\" title=\"发展历程\"></a>发展历程</h2><blockquote>\n<p>自从20世纪90年代初Python语言诞生至今，它已被逐渐广泛应用于系统管理任务的处理和Web编程。<br>Python的创始人为Guido van Rossum。1989年圣诞节期间，在阿姆斯特丹，Guido为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，做为ABC 语言的一种继承。之所以选中Python（大蟒蛇的意思）作为该编程语言的名字，是因为他是一个叫Monty Python的喜剧团体的爱好者。<br>ABC是由Guido参加设计的一种教学语言。就Guido本人看来，ABC 这种语言非常优美和强大，是专门为非专业程序员设计的。但是ABC语言并没有成功，究其原因，Guido 认为是其非开放造成的。Guido 决心在Python 中避免这一错误。同时，他还想实现在ABC 中闪现过但未曾实现的东西。<br>就这样，Python在Guido手中诞生了。可以说，Python是从ABC发展起来，主要受到了Modula-3（另一种相当优美且强大的语言，为小型团体所设计的）的影响。并且结合了Unix shell和C的习惯。<br>Python[4]  已经成为最受欢迎的程序设计语言之一。2011年1月，它被TIOBE编程语言排行榜评为2010年度语言。自从2004年以后，python的使用率呈线性增长[5]  。<br>由于Python语言的简洁性、易读性以及可扩展性，在国外用Python做科学计算的研究机构日益增多，一些知名大学已经采用Python来教授程序设计课程。例如卡耐基梅隆大学的编程基础、麻省理工学院的计算机科学及编程导论就使用Python语言讲授。众多开源的科学计算软件包都提供了Python的调用接口，例如著名的计算机视觉库OpenCV、三维可视化库VTK、医学图像处理库ITK。而Python专用的科学计算扩展库就更多了，例如如下3个十分经典的科学计算扩展库：NumPy、SciPy和matplotlib，它们分别为Python提供了快速数组处理、数值运算以及绘图功能。因此Python语言及其众多的扩展库所构成的开发环境十分适合工程技术、科研人员处理实验数据、制作图表，甚至开发科学计算应用程序。<br>说起科学计算，首先会被提到的可能是MATLAB。然而除了MATLAB的一些专业性很强的工具箱还无法替代之外，MATLAB的大部分常用功能都可以在Python世界中找到相应的扩展库。和MATLAB相比，用Python做科学计算有如下优点：<br>● 首先，MATLAB是一款商用软件，并且价格不菲。而Python完全免费，众多开源的科学计算库都提供了Python的调用接口。用户可以在任何计算机上免费安装Python及其绝大多数扩展库。<br>● 其次，与MATLAB相比，Python是一门更易学、更严谨的程序设计语言。它能让用户编写出更易读、易维护的代码。<br>● 最后，MATLAB主要专注于工程和科学计算。然而即使在计算领域，也经常会遇到文件管理、界面设计、网络通信等各种需求。而Python有着丰富的扩展库，可以轻易完成各种高级任务，开发者可以用Python实现完整应用程序所需的各种功能。</p>\n</blockquote>\n<h2 id=\"风格\"><a href=\"#风格\" class=\"headerlink\" title=\"风格\"></a>风格</h2><blockquote>\n<p>Python在设计上坚持了清晰划一的风格，这使得Python成为一门易读、易维护，并且被大量用户所欢迎的、用途广泛的语言。<br>设计者开发时总的指导思想是，对于一个特定的问题，只要有一种最好的方法来解决就好了。这在由Tim Peters写的Python格言（称为The Zen of Python）里面表述为：There should be one– and preferably only one –obvious way to do it. 这正好和Perl语言（另一种功能类似的高级动态语言）的中心思想TMTOWTDI（There’s More Than One Way To Do It）完全相反。<br>Python的作者有意的设计限制性很强的语法，使得不好的编程习惯（例如if语句的下一行不向右缩进）都不能通过编译。其中很重要的一项就是Python的缩进规则。<br>一个和其他大多数语言（如C）的区别就是，一个模块的界限，完全是由每行的首字符在这一行的位置来决定的（而C语言是用一对花括号{}来明确的定出模块的边界的，与字符的位置毫无关系）。这一点曾经引起过争议。因为自从C这类的语言诞生后，语言的语法含义与字符的排列方式分离开来，曾经被认为是一种程序语言的进步。不过不可否认的是，通过强制程序员们缩进（包括if，for和函数定义等所有需要使用模块的地方），Python确实使得程序更加清晰和美观。</p>\n<h1 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h1><h2 id=\"下载Python\"><a href=\"#下载Python\" class=\"headerlink\" title=\"下载Python\"></a>下载Python</h2><p>官网下载<a href=\"https://www.python.org/\" target=\"_blank\" rel=\"external\">Python</a>,建议下载Python 2.X 版的。目前网上大部分教程为2.X版。3.X版改进很大。这里是一些关于2和3版本的区别和指导，请自己斟酌<br><a href=\"http://www.cnblogs.com/codingmylife/archive/2010/06/06/1752807.html\" target=\"_blank\" rel=\"external\">Python3.x和Python2.x的区别</a><br><a href=\"https://www.zhihu.com/question/24549965\" target=\"_blank\" rel=\"external\">应该学习最新版本的 Python 3 还是旧版本的 Python 2？</a><img src=\"http://oskhhyaq3.bkt.clouddn.com/blog/170722/l6aFIFLfC3.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><p>我的电脑右键属性-高级系统变量-环境变量-向Path 添加Python的安装路径<br><img src=\"http://oskhhyaq3.bkt.clouddn.com/blog/170722/Ebeb0LC1iE.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"下载IDE\"><a href=\"#下载IDE\" class=\"headerlink\" title=\"下载IDE\"></a>下载IDE</h2><p>点击这里有推荐  <a href=\"http://www.oschina.net/news/57468/best-python-ide-for-developers\" target=\"_blank\" rel=\"external\">提供给开发者 10 款最好的 Python IDE</a><br>另外VIsual Studio 也可以。我自己使用破解版的<code>JetBrains PyCharm</code><a href=\"https://www.jetbrains.com/pycharm/\" target=\"_blank\" rel=\"external\">下载</a> 。<br><img src=\"http://oskhhyaq3.bkt.clouddn.com/blog/170722/b4mFhHgAFj.png?imageslim\" alt=\"PyCharm\"><br>然后就愉快的玩耍了</p>\n</blockquote>\n","prev":{"title":"Python学习笔记 (二)  第三方库安装","slug":"第三方库安装"},"next":{"title":"UWP学习笔记 (三)   XAML界面原理和语法","slug":"什么是XAML"},"link":"/2017/07/22","toc":[{"title":"初识Python","id":"初识Python","index":"1","children":[{"title":"Python","id":"Python","index":"1.1"},{"title":"发展历程","id":"发展历程","index":"1.2"},{"title":"风格","id":"风格","index":"1.3"}]},{"title":"搭建环境","id":"搭建环境","index":"2","children":[{"title":"下载Python","id":"下载Python","index":"2.1"},{"title":"配置环境变量","id":"配置环境变量","index":"2.2"},{"title":"下载IDE","id":"下载IDE","index":"2.3"}]}]}